/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.csc445.jrvv.pthree;

import static com.csc445.jrvv.pthree.UserInterface.setupPlayers;
import static com.csc445.jrvv.pthree.UserInterface.startGame;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author johnojacob84
 */
public class SWINGputPiecesOnBoard extends javax.swing.JFrame {

    /**
     * Creates new form ActualBoard
     */
    int whichShip = 0;
    int holesPlaced = 0;
    int[] anArray; //5,4,3,3,2
    String previousButtonClicked = "Begin";
    boolean newShip = false;
    
    public SWINGputPiecesOnBoard() {
        
        initComponents();
        anArray = new int[5];
        anArray[0] = 5;
        anArray[1] = 4;
        anArray[2] = 3;
        anArray[3] = 3;
        anArray[4] = 2;

    }
    
    public static String IPV4string = "";
    public static String port = "";

    UserInterface thisUser = new UserInterface(IPV4string, port);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        exitGame = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        c1 = new javax.swing.JButton();
        a1 = new javax.swing.JButton();
        e1 = new javax.swing.JButton();
        f1 = new javax.swing.JButton();
        d1 = new javax.swing.JButton();
        h1 = new javax.swing.JButton();
        i1 = new javax.swing.JButton();
        g1 = new javax.swing.JButton();
        k1 = new javax.swing.JButton();
        m1 = new javax.swing.JButton();
        j1 = new javax.swing.JButton();
        l1 = new javax.swing.JButton();
        d2 = new javax.swing.JButton();
        h2 = new javax.swing.JButton();
        i2 = new javax.swing.JButton();
        g2 = new javax.swing.JButton();
        k2 = new javax.swing.JButton();
        m2 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        j2 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        l2 = new javax.swing.JButton();
        a2 = new javax.swing.JButton();
        e2 = new javax.swing.JButton();
        f2 = new javax.swing.JButton();
        d3 = new javax.swing.JButton();
        h3 = new javax.swing.JButton();
        i3 = new javax.swing.JButton();
        g3 = new javax.swing.JButton();
        k3 = new javax.swing.JButton();
        m3 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        j3 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        l3 = new javax.swing.JButton();
        a3 = new javax.swing.JButton();
        e3 = new javax.swing.JButton();
        f3 = new javax.swing.JButton();
        d4 = new javax.swing.JButton();
        h4 = new javax.swing.JButton();
        i4 = new javax.swing.JButton();
        g4 = new javax.swing.JButton();
        k4 = new javax.swing.JButton();
        m4 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        j4 = new javax.swing.JButton();
        c4 = new javax.swing.JButton();
        l4 = new javax.swing.JButton();
        a4 = new javax.swing.JButton();
        e4 = new javax.swing.JButton();
        f4 = new javax.swing.JButton();
        g7 = new javax.swing.JButton();
        k7 = new javax.swing.JButton();
        m7 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        j7 = new javax.swing.JButton();
        c7 = new javax.swing.JButton();
        l7 = new javax.swing.JButton();
        a7 = new javax.swing.JButton();
        e7 = new javax.swing.JButton();
        f7 = new javax.swing.JButton();
        d8 = new javax.swing.JButton();
        h8 = new javax.swing.JButton();
        i8 = new javax.swing.JButton();
        g8 = new javax.swing.JButton();
        k8 = new javax.swing.JButton();
        m8 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        j8 = new javax.swing.JButton();
        c8 = new javax.swing.JButton();
        l8 = new javax.swing.JButton();
        a8 = new javax.swing.JButton();
        e8 = new javax.swing.JButton();
        f8 = new javax.swing.JButton();
        d9 = new javax.swing.JButton();
        h9 = new javax.swing.JButton();
        i9 = new javax.swing.JButton();
        c5 = new javax.swing.JButton();
        g9 = new javax.swing.JButton();
        k9 = new javax.swing.JButton();
        m9 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        a5 = new javax.swing.JButton();
        j9 = new javax.swing.JButton();
        e5 = new javax.swing.JButton();
        c9 = new javax.swing.JButton();
        f5 = new javax.swing.JButton();
        l9 = new javax.swing.JButton();
        d5 = new javax.swing.JButton();
        a9 = new javax.swing.JButton();
        h5 = new javax.swing.JButton();
        e9 = new javax.swing.JButton();
        i5 = new javax.swing.JButton();
        f9 = new javax.swing.JButton();
        g5 = new javax.swing.JButton();
        k5 = new javax.swing.JButton();
        m5 = new javax.swing.JButton();
        j5 = new javax.swing.JButton();
        l5 = new javax.swing.JButton();
        d7 = new javax.swing.JButton();
        h7 = new javax.swing.JButton();
        i7 = new javax.swing.JButton();
        b10 = new javax.swing.JButton();
        c10 = new javax.swing.JButton();
        a10 = new javax.swing.JButton();
        e10 = new javax.swing.JButton();
        f10 = new javax.swing.JButton();
        d10 = new javax.swing.JButton();
        h10 = new javax.swing.JButton();
        i10 = new javax.swing.JButton();
        g10 = new javax.swing.JButton();
        k10 = new javax.swing.JButton();
        m10 = new javax.swing.JButton();
        j10 = new javax.swing.JButton();
        l10 = new javax.swing.JButton();
        e16 = new javax.swing.JButton();
        f16 = new javax.swing.JButton();
        m18 = new javax.swing.JButton();
        b18 = new javax.swing.JButton();
        a15 = new javax.swing.JButton();
        j18 = new javax.swing.JButton();
        e15 = new javax.swing.JButton();
        c18 = new javax.swing.JButton();
        f15 = new javax.swing.JButton();
        d17 = new javax.swing.JButton();
        l18 = new javax.swing.JButton();
        h17 = new javax.swing.JButton();
        d15 = new javax.swing.JButton();
        i17 = new javax.swing.JButton();
        a18 = new javax.swing.JButton();
        g17 = new javax.swing.JButton();
        k17 = new javax.swing.JButton();
        m17 = new javax.swing.JButton();
        b15 = new javax.swing.JButton();
        b17 = new javax.swing.JButton();
        j17 = new javax.swing.JButton();
        c17 = new javax.swing.JButton();
        b11 = new javax.swing.JButton();
        h15 = new javax.swing.JButton();
        e18 = new javax.swing.JButton();
        i15 = new javax.swing.JButton();
        f18 = new javax.swing.JButton();
        g15 = new javax.swing.JButton();
        k15 = new javax.swing.JButton();
        m15 = new javax.swing.JButton();
        j15 = new javax.swing.JButton();
        l15 = new javax.swing.JButton();
        d16 = new javax.swing.JButton();
        c11 = new javax.swing.JButton();
        h16 = new javax.swing.JButton();
        i16 = new javax.swing.JButton();
        a11 = new javax.swing.JButton();
        e11 = new javax.swing.JButton();
        f11 = new javax.swing.JButton();
        d11 = new javax.swing.JButton();
        h11 = new javax.swing.JButton();
        i11 = new javax.swing.JButton();
        g11 = new javax.swing.JButton();
        k11 = new javax.swing.JButton();
        m11 = new javax.swing.JButton();
        j11 = new javax.swing.JButton();
        b19 = new javax.swing.JButton();
        l11 = new javax.swing.JButton();
        d12 = new javax.swing.JButton();
        h12 = new javax.swing.JButton();
        i12 = new javax.swing.JButton();
        g12 = new javax.swing.JButton();
        k12 = new javax.swing.JButton();
        m12 = new javax.swing.JButton();
        b12 = new javax.swing.JButton();
        j12 = new javax.swing.JButton();
        c12 = new javax.swing.JButton();
        c19 = new javax.swing.JButton();
        l12 = new javax.swing.JButton();
        a12 = new javax.swing.JButton();
        e12 = new javax.swing.JButton();
        f12 = new javax.swing.JButton();
        d13 = new javax.swing.JButton();
        h13 = new javax.swing.JButton();
        i13 = new javax.swing.JButton();
        g13 = new javax.swing.JButton();
        k13 = new javax.swing.JButton();
        m13 = new javax.swing.JButton();
        a19 = new javax.swing.JButton();
        e19 = new javax.swing.JButton();
        f19 = new javax.swing.JButton();
        b13 = new javax.swing.JButton();
        j13 = new javax.swing.JButton();
        c13 = new javax.swing.JButton();
        l13 = new javax.swing.JButton();
        a13 = new javax.swing.JButton();
        e13 = new javax.swing.JButton();
        f13 = new javax.swing.JButton();
        d14 = new javax.swing.JButton();
        h14 = new javax.swing.JButton();
        i14 = new javax.swing.JButton();
        d19 = new javax.swing.JButton();
        h19 = new javax.swing.JButton();
        i19 = new javax.swing.JButton();
        g19 = new javax.swing.JButton();
        k19 = new javax.swing.JButton();
        m19 = new javax.swing.JButton();
        g14 = new javax.swing.JButton();
        k14 = new javax.swing.JButton();
        j19 = new javax.swing.JButton();
        m14 = new javax.swing.JButton();
        b14 = new javax.swing.JButton();
        j14 = new javax.swing.JButton();
        c14 = new javax.swing.JButton();
        l14 = new javax.swing.JButton();
        a14 = new javax.swing.JButton();
        e14 = new javax.swing.JButton();
        f14 = new javax.swing.JButton();
        l19 = new javax.swing.JButton();
        l17 = new javax.swing.JButton();
        a17 = new javax.swing.JButton();
        e17 = new javax.swing.JButton();
        f17 = new javax.swing.JButton();
        d18 = new javax.swing.JButton();
        h18 = new javax.swing.JButton();
        i18 = new javax.swing.JButton();
        g16 = new javax.swing.JButton();
        c15 = new javax.swing.JButton();
        k16 = new javax.swing.JButton();
        g18 = new javax.swing.JButton();
        m16 = new javax.swing.JButton();
        k18 = new javax.swing.JButton();
        b16 = new javax.swing.JButton();
        j16 = new javax.swing.JButton();
        c16 = new javax.swing.JButton();
        l16 = new javax.swing.JButton();
        a16 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        startGame = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        g6 = new javax.swing.JButton();
        k6 = new javax.swing.JButton();
        m6 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        j6 = new javax.swing.JButton();
        c6 = new javax.swing.JButton();
        l6 = new javax.swing.JButton();
        a6 = new javax.swing.JButton();
        e6 = new javax.swing.JButton();
        f6 = new javax.swing.JButton();
        d6 = new javax.swing.JButton();
        h6 = new javax.swing.JButton();
        i6 = new javax.swing.JButton();
        b20 = new javax.swing.JButton();
        c20 = new javax.swing.JButton();
        a20 = new javax.swing.JButton();
        e20 = new javax.swing.JButton();
        f20 = new javax.swing.JButton();
        d20 = new javax.swing.JButton();
        h20 = new javax.swing.JButton();
        i20 = new javax.swing.JButton();
        g20 = new javax.swing.JButton();
        k20 = new javax.swing.JButton();
        m20 = new javax.swing.JButton();
        j20 = new javax.swing.JButton();
        l20 = new javax.swing.JButton();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        exitGame.setText("Exit Game");
        exitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitGameActionPerformed(evt);
            }
        });

        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });

        e1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e1ActionPerformed(evt);
            }
        });

        f1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f1ActionPerformed(evt);
            }
        });

        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });

        h1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h1ActionPerformed(evt);
            }
        });

        i1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i1ActionPerformed(evt);
            }
        });

        g1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g1ActionPerformed(evt);
            }
        });

        k1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k1ActionPerformed(evt);
            }
        });

        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });

        j1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j1ActionPerformed(evt);
            }
        });

        l1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1ActionPerformed(evt);
            }
        });

        d2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d2ActionPerformed(evt);
            }
        });

        h2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h2ActionPerformed(evt);
            }
        });

        i2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i2ActionPerformed(evt);
            }
        });

        g2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g2ActionPerformed(evt);
            }
        });

        k2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k2ActionPerformed(evt);
            }
        });

        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });

        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        j2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j2ActionPerformed(evt);
            }
        });

        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        l2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l2ActionPerformed(evt);
            }
        });

        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });

        e2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e2ActionPerformed(evt);
            }
        });

        f2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f2ActionPerformed(evt);
            }
        });

        d3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d3ActionPerformed(evt);
            }
        });

        h3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h3ActionPerformed(evt);
            }
        });

        i3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i3ActionPerformed(evt);
            }
        });

        g3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g3ActionPerformed(evt);
            }
        });

        k3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k3ActionPerformed(evt);
            }
        });

        m3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m3ActionPerformed(evt);
            }
        });

        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        j3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j3ActionPerformed(evt);
            }
        });

        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });

        l3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l3ActionPerformed(evt);
            }
        });

        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });

        e3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e3ActionPerformed(evt);
            }
        });

        f3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f3ActionPerformed(evt);
            }
        });

        d4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d4ActionPerformed(evt);
            }
        });

        h4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h4ActionPerformed(evt);
            }
        });

        i4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i4ActionPerformed(evt);
            }
        });

        g4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g4ActionPerformed(evt);
            }
        });

        k4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k4ActionPerformed(evt);
            }
        });

        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });

        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        j4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j4ActionPerformed(evt);
            }
        });

        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });

        l4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l4ActionPerformed(evt);
            }
        });

        a4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a4ActionPerformed(evt);
            }
        });

        e4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e4ActionPerformed(evt);
            }
        });

        f4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f4ActionPerformed(evt);
            }
        });

        g7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g7ActionPerformed(evt);
            }
        });

        k7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k7ActionPerformed(evt);
            }
        });

        m7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m7ActionPerformed(evt);
            }
        });

        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        j7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j7ActionPerformed(evt);
            }
        });

        c7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c7ActionPerformed(evt);
            }
        });

        l7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l7ActionPerformed(evt);
            }
        });

        a7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a7ActionPerformed(evt);
            }
        });

        e7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e7ActionPerformed(evt);
            }
        });

        f7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f7ActionPerformed(evt);
            }
        });

        d8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d8ActionPerformed(evt);
            }
        });

        h8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h8ActionPerformed(evt);
            }
        });

        i8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i8ActionPerformed(evt);
            }
        });

        g8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g8ActionPerformed(evt);
            }
        });

        k8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k8ActionPerformed(evt);
            }
        });

        m8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m8ActionPerformed(evt);
            }
        });

        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        j8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j8ActionPerformed(evt);
            }
        });

        c8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c8ActionPerformed(evt);
            }
        });

        l8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l8ActionPerformed(evt);
            }
        });

        a8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a8ActionPerformed(evt);
            }
        });

        e8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e8ActionPerformed(evt);
            }
        });

        f8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f8ActionPerformed(evt);
            }
        });

        d9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d9ActionPerformed(evt);
            }
        });

        h9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h9ActionPerformed(evt);
            }
        });

        i9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i9ActionPerformed(evt);
            }
        });

        c5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c5ActionPerformed(evt);
            }
        });

        g9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g9ActionPerformed(evt);
            }
        });

        k9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k9ActionPerformed(evt);
            }
        });

        m9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m9ActionPerformed(evt);
            }
        });

        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        a5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a5ActionPerformed(evt);
            }
        });

        j9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j9ActionPerformed(evt);
            }
        });

        e5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e5ActionPerformed(evt);
            }
        });

        c9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c9ActionPerformed(evt);
            }
        });

        f5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f5ActionPerformed(evt);
            }
        });

        l9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l9ActionPerformed(evt);
            }
        });

        d5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d5ActionPerformed(evt);
            }
        });

        a9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a9ActionPerformed(evt);
            }
        });

        h5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h5ActionPerformed(evt);
            }
        });

        e9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e9ActionPerformed(evt);
            }
        });

        i5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i5ActionPerformed(evt);
            }
        });

        f9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f9ActionPerformed(evt);
            }
        });

        g5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g5ActionPerformed(evt);
            }
        });

        k5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k5ActionPerformed(evt);
            }
        });

        m5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m5ActionPerformed(evt);
            }
        });

        j5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j5ActionPerformed(evt);
            }
        });

        l5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l5ActionPerformed(evt);
            }
        });

        d7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d7ActionPerformed(evt);
            }
        });

        h7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h7ActionPerformed(evt);
            }
        });

        i7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i7ActionPerformed(evt);
            }
        });

        b10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b10ActionPerformed(evt);
            }
        });

        c10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c10ActionPerformed(evt);
            }
        });

        a10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a10ActionPerformed(evt);
            }
        });

        e10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e10ActionPerformed(evt);
            }
        });

        f10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f10ActionPerformed(evt);
            }
        });

        d10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d10ActionPerformed(evt);
            }
        });

        h10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h10ActionPerformed(evt);
            }
        });

        i10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i10ActionPerformed(evt);
            }
        });

        g10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g10ActionPerformed(evt);
            }
        });

        k10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k10ActionPerformed(evt);
            }
        });

        m10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m10ActionPerformed(evt);
            }
        });

        j10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j10ActionPerformed(evt);
            }
        });

        l10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l10ActionPerformed(evt);
            }
        });

        e16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e16ActionPerformed(evt);
            }
        });

        f16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f16ActionPerformed(evt);
            }
        });

        m18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m18ActionPerformed(evt);
            }
        });

        b18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b18ActionPerformed(evt);
            }
        });

        a15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a15ActionPerformed(evt);
            }
        });

        j18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j18ActionPerformed(evt);
            }
        });

        e15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e15ActionPerformed(evt);
            }
        });

        c18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c18ActionPerformed(evt);
            }
        });

        f15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f15ActionPerformed(evt);
            }
        });

        d17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d17ActionPerformed(evt);
            }
        });

        l18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l18ActionPerformed(evt);
            }
        });

        h17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h17ActionPerformed(evt);
            }
        });

        d15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d15ActionPerformed(evt);
            }
        });

        i17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i17ActionPerformed(evt);
            }
        });

        a18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a18ActionPerformed(evt);
            }
        });

        g17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g17ActionPerformed(evt);
            }
        });

        k17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k17ActionPerformed(evt);
            }
        });

        m17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m17ActionPerformed(evt);
            }
        });

        b15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b15ActionPerformed(evt);
            }
        });

        b17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b17ActionPerformed(evt);
            }
        });

        j17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j17ActionPerformed(evt);
            }
        });

        c17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c17ActionPerformed(evt);
            }
        });

        b11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b11ActionPerformed(evt);
            }
        });

        h15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h15ActionPerformed(evt);
            }
        });

        e18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e18ActionPerformed(evt);
            }
        });

        i15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i15ActionPerformed(evt);
            }
        });

        f18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f18ActionPerformed(evt);
            }
        });

        g15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g15ActionPerformed(evt);
            }
        });

        k15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k15ActionPerformed(evt);
            }
        });

        m15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m15ActionPerformed(evt);
            }
        });

        j15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j15ActionPerformed(evt);
            }
        });

        l15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l15ActionPerformed(evt);
            }
        });

        d16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d16ActionPerformed(evt);
            }
        });

        c11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c11ActionPerformed(evt);
            }
        });

        h16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h16ActionPerformed(evt);
            }
        });

        i16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i16ActionPerformed(evt);
            }
        });

        a11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a11ActionPerformed(evt);
            }
        });

        e11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e11ActionPerformed(evt);
            }
        });

        f11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f11ActionPerformed(evt);
            }
        });

        d11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d11ActionPerformed(evt);
            }
        });

        h11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h11ActionPerformed(evt);
            }
        });

        i11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i11ActionPerformed(evt);
            }
        });

        g11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g11ActionPerformed(evt);
            }
        });

        k11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k11ActionPerformed(evt);
            }
        });

        m11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m11ActionPerformed(evt);
            }
        });

        j11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j11ActionPerformed(evt);
            }
        });

        b19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b19ActionPerformed(evt);
            }
        });

        l11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l11ActionPerformed(evt);
            }
        });

        d12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d12ActionPerformed(evt);
            }
        });

        h12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h12ActionPerformed(evt);
            }
        });

        i12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i12ActionPerformed(evt);
            }
        });

        g12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g12ActionPerformed(evt);
            }
        });

        k12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k12ActionPerformed(evt);
            }
        });

        m12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m12ActionPerformed(evt);
            }
        });

        b12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b12ActionPerformed(evt);
            }
        });

        j12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j12ActionPerformed(evt);
            }
        });

        c12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c12ActionPerformed(evt);
            }
        });

        c19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c19ActionPerformed(evt);
            }
        });

        l12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l12ActionPerformed(evt);
            }
        });

        a12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a12ActionPerformed(evt);
            }
        });

        e12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e12ActionPerformed(evt);
            }
        });

        f12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f12ActionPerformed(evt);
            }
        });

        d13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d13ActionPerformed(evt);
            }
        });

        h13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h13ActionPerformed(evt);
            }
        });

        i13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i13ActionPerformed(evt);
            }
        });

        g13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g13ActionPerformed(evt);
            }
        });

        k13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k13ActionPerformed(evt);
            }
        });

        m13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m13ActionPerformed(evt);
            }
        });

        a19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a19ActionPerformed(evt);
            }
        });

        e19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e19ActionPerformed(evt);
            }
        });

        f19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f19ActionPerformed(evt);
            }
        });

        b13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b13ActionPerformed(evt);
            }
        });

        j13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j13ActionPerformed(evt);
            }
        });

        c13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c13ActionPerformed(evt);
            }
        });

        l13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l13ActionPerformed(evt);
            }
        });

        a13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a13ActionPerformed(evt);
            }
        });

        e13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e13ActionPerformed(evt);
            }
        });

        f13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f13ActionPerformed(evt);
            }
        });

        d14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d14ActionPerformed(evt);
            }
        });

        h14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h14ActionPerformed(evt);
            }
        });

        i14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i14ActionPerformed(evt);
            }
        });

        d19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d19ActionPerformed(evt);
            }
        });

        h19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h19ActionPerformed(evt);
            }
        });

        i19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i19ActionPerformed(evt);
            }
        });

        g19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g19ActionPerformed(evt);
            }
        });

        k19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k19ActionPerformed(evt);
            }
        });

        m19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m19ActionPerformed(evt);
            }
        });

        g14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g14ActionPerformed(evt);
            }
        });

        k14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k14ActionPerformed(evt);
            }
        });

        j19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j19ActionPerformed(evt);
            }
        });

        m14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m14ActionPerformed(evt);
            }
        });

        b14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b14ActionPerformed(evt);
            }
        });

        j14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j14ActionPerformed(evt);
            }
        });

        c14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c14ActionPerformed(evt);
            }
        });

        l14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l14ActionPerformed(evt);
            }
        });

        a14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a14ActionPerformed(evt);
            }
        });

        e14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e14ActionPerformed(evt);
            }
        });

        f14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f14ActionPerformed(evt);
            }
        });

        l19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l19ActionPerformed(evt);
            }
        });

        l17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l17ActionPerformed(evt);
            }
        });

        a17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a17ActionPerformed(evt);
            }
        });

        e17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e17ActionPerformed(evt);
            }
        });

        f17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f17ActionPerformed(evt);
            }
        });

        d18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d18ActionPerformed(evt);
            }
        });

        h18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h18ActionPerformed(evt);
            }
        });

        i18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i18ActionPerformed(evt);
            }
        });

        g16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g16ActionPerformed(evt);
            }
        });

        c15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c15ActionPerformed(evt);
            }
        });

        k16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k16ActionPerformed(evt);
            }
        });

        g18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g18ActionPerformed(evt);
            }
        });

        m16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m16ActionPerformed(evt);
            }
        });

        k18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k18ActionPerformed(evt);
            }
        });

        b16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b16ActionPerformed(evt);
            }
        });

        j16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j16ActionPerformed(evt);
            }
        });

        c16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c16ActionPerformed(evt);
            }
        });

        l16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l16ActionPerformed(evt);
            }
        });

        a16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a16ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel1.setText("Carrier - 5 Holes");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel2.setText("Cruiser - 3 Holes");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel3.setText("Submarine - 3 Holes");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel4.setText("Destroyer - 2 Holes");

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel5.setText("BattleShip - 4 Holes");

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        jLabel6.setText("Click Connecting Boxes In Any Direction To Place Your Carriers");

        jButton2.setBackground(new java.awt.Color(0, 255, 51));

        jButton3.setBackground(new java.awt.Color(0, 0, 255));

        jButton4.setBackground(new java.awt.Color(255, 204, 204));

        jButton5.setBackground(new java.awt.Color(255, 255, 102));

        jButton6.setBackground(new java.awt.Color(255, 153, 0));

        startGame.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        startGame.setText("Start Game");
        startGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Chilanka", 0, 48)); // NOI18N
        jLabel7.setText("BattleShip - Snake Version");

        g6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g6ActionPerformed(evt);
            }
        });

        k6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k6ActionPerformed(evt);
            }
        });

        m6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m6ActionPerformed(evt);
            }
        });

        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        j6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j6ActionPerformed(evt);
            }
        });

        c6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c6ActionPerformed(evt);
            }
        });

        l6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l6ActionPerformed(evt);
            }
        });

        a6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a6ActionPerformed(evt);
            }
        });

        e6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e6ActionPerformed(evt);
            }
        });

        f6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f6ActionPerformed(evt);
            }
        });

        d6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d6ActionPerformed(evt);
            }
        });

        h6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h6ActionPerformed(evt);
            }
        });

        i6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i6ActionPerformed(evt);
            }
        });

        b20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b20ActionPerformed(evt);
            }
        });

        c20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c20ActionPerformed(evt);
            }
        });

        a20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a20ActionPerformed(evt);
            }
        });

        e20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e20ActionPerformed(evt);
            }
        });

        f20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                f20ActionPerformed(evt);
            }
        });

        d20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d20ActionPerformed(evt);
            }
        });

        h20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h20ActionPerformed(evt);
            }
        });

        i20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i20ActionPerformed(evt);
            }
        });

        g20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g20ActionPerformed(evt);
            }
        });

        k20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k20ActionPerformed(evt);
            }
        });

        m20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m20ActionPerformed(evt);
            }
        });

        j20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j20ActionPerformed(evt);
            }
        });

        l20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l20ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel2))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(startGame, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(114, 114, 114))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exitGame)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m19, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m18, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m17, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(a10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(c10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(d10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(e10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(a9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(c9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(d9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(e9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(g10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(h10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(i10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(g9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(h9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(i9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(k10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(m10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(j9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(k9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(l9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(m9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(a8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(c8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(d8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(e8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(f8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(g8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(h8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(k8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(exitGame)
                                    .addGap(44, 44, 44)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(188, 188, 188)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))))
                            .addGap(93, 93, 93))
                        .addComponent(startGame, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(c9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(e9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(f9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(d9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(h9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(i9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(g9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(k9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(m9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(j9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(a9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l12, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l15, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l16, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l17, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l18, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(c20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(d20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(h20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(g20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(k20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(j20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l20, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitGameActionPerformed

        close();
        SWINGmainMenu mm = new SWINGmainMenu();
        mm.setVisible(true);

    }//GEN-LAST:event_exitGameActionPerformed
  
    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed

        
        if (a1.getBackground() == Color.GREEN || a1.getBackground() == Color.BLUE || a1.getBackground() == Color.YELLOW || a1.getBackground() == Color.PINK || a1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            if (!"Begin".equals(previousButtonClicked) && !"b1".equals(previousButtonClicked) && !"a2".equals(previousButtonClicked) && !"a1".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

                JOptionPane.showMessageDialog(null,
                        "Your Ship Must Connect To The Previously Placed Square",
                        "TITLE",
                        JOptionPane.WARNING_MESSAGE);
            } else {
                
                previousButtonClicked = "a1";

               if (whichShip == 5) { //if used up ships. Do not allow placing
                    JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                //Don't allow to place
            } else {

                newShip = false;
                holesPlaced++;

                    switch (whichShip) {
                        case 0 -> {
                            a1.setBackground(Color.green);
                            thisUser.LocationGreen.add("a1");
                        }
                        case 1 -> {
                            a1.setBackground(Color.blue);
                            thisUser.LocationBlue.add("a1");
                        }
                        case 2 -> {
                            a1.setBackground(Color.yellow);
                            thisUser.LocationYellow.add("a1");
                        }
                        case 3 -> {
                            a1.setBackground(Color.pink);
                            thisUser.LocationPink.add("a1");
                        }
                        case 4 -> {
                            a1.setBackground(Color.orange);
                            thisUser.LocationOrange.add("a1");
                        }
                        default -> {
                        }
                    }
                    
                
                     
                     if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
                }

            }
        }

    }//GEN-LAST:event_a1ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed

        if (b1.getBackground() == Color.GREEN || b1.getBackground() == Color.BLUE || b1.getBackground() == Color.YELLOW || b1.getBackground() == Color.PINK || b1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else { 
        if (!"Begin".equals(previousButtonClicked) && !"a1".equals(previousButtonClicked) && !"c1".equals(previousButtonClicked) && !"b1".equals(previousButtonClicked) && !"b2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE); //add condition, color was changed //newShip;
        } else {

            previousButtonClicked = "b1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;

                switch (whichShip) {
                    case 0 -> {
                        b1.setBackground(Color.green);
                        thisUser.LocationGreen.add("b1");
                    }
                    case 1 -> {
                        b1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b1");
                    }
                    case 2 -> {
                        b1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b1");
                    }
                    case 3 -> {
                        b1.setBackground(Color.pink);
                        thisUser.LocationPink.add("b1");
                    }
                    case 4 -> {
                        b1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b1");
                    }
                    default -> {
                    }
                }
               if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_b1ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed

        if (c1.getBackground() == Color.GREEN || c1.getBackground() == Color.BLUE || c1.getBackground() == Color.YELLOW || c1.getBackground() == Color.PINK || c1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
          
        if (!"Begin".equals(previousButtonClicked) && !"b1".equals(previousButtonClicked) && !"d1".equals(previousButtonClicked) && !"c1".equals(previousButtonClicked) && !"c2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            previousButtonClicked = "c1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                 JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;

                switch (whichShip) {
                    case 0 -> {
                        c1.setBackground(Color.green);
                        thisUser.LocationGreen.add("c1");
                    }
                    case 1 -> {
                        c1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c1");
                    }
                    case 2 -> {
                        c1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c1");
                    }
                    case 3 -> {
                        c1.setBackground(Color.pink);
                        thisUser.LocationPink.add("c1");
                    }
                    case 4 -> {
                        c1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c1");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}

    }//GEN-LAST:event_c1ActionPerformed

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed

        if (d1.getBackground() == Color.GREEN || d1.getBackground() == Color.BLUE || d1.getBackground() == Color.YELLOW || d1.getBackground() == Color.PINK || d1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
        if (!"Begin".equals(previousButtonClicked) && !"c1".equals(previousButtonClicked) && !"e1".equals(previousButtonClicked) && !"d1".equals(previousButtonClicked) && !"d2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            previousButtonClicked = "d1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;


                switch (whichShip) {
                    case 0 -> {
                        d1.setBackground(Color.green);
                        thisUser.LocationGreen.add("d1");
                    }
                    case 1 -> {
                        d1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d1");
                    }
                    case 2 -> {
                        d1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d1");
                    }
                    case 3 -> {
                        d1.setBackground(Color.pink);
                        thisUser.LocationPink.add("d1");
                    }
                    case 4 -> {
                        d1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d1");
                    }
                    default -> {
                    }
                }
                
                 if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
                
            }
        }}

    }//GEN-LAST:event_d1ActionPerformed

    private void e1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e1ActionPerformed

        if (e1.getBackground() == Color.GREEN || e1.getBackground() == Color.BLUE || e1.getBackground() == Color.YELLOW || e1.getBackground() == Color.PINK || e1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
        if (!"Begin".equals(previousButtonClicked) && !"d1".equals(previousButtonClicked) && !"f1".equals(previousButtonClicked) && !"e1".equals(previousButtonClicked) && !"e2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            previousButtonClicked = "e1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;

                switch (whichShip) {
                    case 0 -> {
                        e1.setBackground(Color.green);
                        thisUser.LocationGreen.add("e1");
                    }
                    case 1 -> {
                        e1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e1");
                    }
                    case 2 -> {
                        e1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e1");
                    }
                    case 3 -> {
                        e1.setBackground(Color.pink);
                        thisUser.LocationPink.add("e1");
                    }
                    case 4 -> {
                        e1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e1");
                    }
                    default -> {
                    }
                }
             if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}

    }//GEN-LAST:event_e1ActionPerformed

    private void f1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f1ActionPerformed

        if (f1.getBackground() == Color.GREEN || f1.getBackground() == Color.BLUE || f1.getBackground() == Color.YELLOW || f1.getBackground() == Color.PINK || f1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"e1".equals(previousButtonClicked) && !"g1".equals(previousButtonClicked) && !"f1".equals(previousButtonClicked) && !"f2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
            
        previousButtonClicked = "f1";

         if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;
            
                switch (whichShip) {
                    case 0 -> {
                        f1.setBackground(Color.green);
                        thisUser.LocationGreen.add("f1");
                    }
                    case 1 -> {
                        f1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f1");
                    }
                    case 2 -> {
                        f1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f1");
                    }
                    case 3 -> {
                        f1.setBackground(Color.pink);
                        thisUser.LocationPink.add("f1");
                    }
                    case 4 -> {
                        f1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f1");
                    }
                    default -> {
                    }
                }
          if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }}
        }
    }//GEN-LAST:event_f1ActionPerformed

    private void g1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g1ActionPerformed

        if (g1.getBackground() == Color.GREEN || g1.getBackground() == Color.BLUE || g1.getBackground() == Color.YELLOW || g1.getBackground() == Color.PINK || g1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"f1".equals(previousButtonClicked) && !"h1".equals(previousButtonClicked) && !"g1".equals(previousButtonClicked) && !"g2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "g1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                newShip = false;
                holesPlaced++;



                switch (whichShip) {
                    case 0 -> {
                        g1.setBackground(Color.green);
                        thisUser.LocationGreen.add("g1");
                    }
                    case 1 -> {
                        g1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g1");
                    }
                    case 2 -> {
                        g1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g1");
                    }
                    case 3 -> {
                        g1.setBackground(Color.pink);
                        thisUser.LocationPink.add("g1");
                    }
                    case 4 -> {
                        g1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g1");
                    }
                    default -> {
                    }
                }
             if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }}
        }
    }//GEN-LAST:event_g1ActionPerformed

    private void h1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h1ActionPerformed

        if (h1.getBackground() == Color.GREEN || h1.getBackground() == Color.BLUE || h1.getBackground() == Color.YELLOW || h1.getBackground() == Color.PINK || h1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"g1".equals(previousButtonClicked) && !"i1".equals(previousButtonClicked) && !"h1".equals(previousButtonClicked) && !"h2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            
        previousButtonClicked = "h1";
            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

              
                switch (whichShip) {
                    case 0 -> {
                        h1.setBackground(Color.green);
                        thisUser.LocationGreen.add("h1");
                    }
                    case 1 -> {
                        h1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h1");
                    }
                    case 2 -> {
                        h1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h1");
                    }
                    case 3 -> {
                        h1.setBackground(Color.pink);
                        thisUser.LocationPink.add("h1");
                    }
                    case 4 -> {
                        h1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h1");
                    }
                    default -> {
                    }
                }
               if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        }
    }//GEN-LAST:event_h1ActionPerformed

    private void i1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i1ActionPerformed

        if (i1.getBackground() == Color.GREEN || i1.getBackground() == Color.BLUE || i1.getBackground() == Color.YELLOW || i1.getBackground() == Color.PINK || i1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"h1".equals(previousButtonClicked) && !"j1".equals(previousButtonClicked) && !"i1".equals(previousButtonClicked) && !"i2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square" + newShip,
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "i1";

           if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


                switch (whichShip) {
                    case 0 -> {
                        i1.setBackground(Color.green);
                        thisUser.LocationGreen.add("i1");
                    }
                    case 1 -> {
                        i1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i1");
                    }
                    case 2 -> {
                        i1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i1");
                    }
                    case 3 -> {
                        i1.setBackground(Color.pink);
                        thisUser.LocationPink.add("i1");
                    }
                    case 4 -> {
                        i1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i1");
                    }
                    default -> {
                    }
                }
               if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
               
            }
        }}
    }//GEN-LAST:event_i1ActionPerformed

    private void j1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j1ActionPerformed

        if (j1.getBackground() == Color.GREEN || j1.getBackground() == Color.BLUE || j1.getBackground() == Color.YELLOW || j1.getBackground() == Color.PINK || j1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"i1".equals(previousButtonClicked) && !"k1".equals(previousButtonClicked) && !"j1".equals(previousButtonClicked) && !"j2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

            
        previousButtonClicked = "j1";
          if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

              

                switch (whichShip) {
                    case 0 -> {
                        j1.setBackground(Color.green);
                        thisUser.LocationGreen.add("j1");
                    }
                    case 1 -> {
                        j1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j1");
                    }
                    case 2 -> {
                        j1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j1");
                    }
                    case 3 -> {
                        j1.setBackground(Color.pink);
                        thisUser.LocationPink.add("j1");
                    }
                    case 4 -> {
                        j1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j1");
                    }
                    default -> {
                    }
                }
                  if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j1ActionPerformed

    private void k1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k1ActionPerformed

        if (k1.getBackground() == Color.GREEN || k1.getBackground() == Color.BLUE || k1.getBackground() == Color.YELLOW || k1.getBackground() == Color.PINK || k1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"j1".equals(previousButtonClicked) && !"l1".equals(previousButtonClicked) && !"k1".equals(previousButtonClicked) && !"k2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "k1";
        
             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;
                

                switch (whichShip) {
                    case 0 -> {
                        k1.setBackground(Color.green);
                        thisUser.LocationGreen.add("k1");
                    }
                    case 1 -> {
                        k1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k1");
                    }
                    case 2 -> {
                        k1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k1");
                    }
                    case 3 -> {
                        k1.setBackground(Color.pink);
                        thisUser.LocationPink.add("k1");
                    }
                    case 4 -> {
                        k1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k1");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k1ActionPerformed

    private void l1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1ActionPerformed

        if (l1.getBackground() == Color.GREEN || l1.getBackground() == Color.BLUE || l1.getBackground() == Color.YELLOW || l1.getBackground() == Color.PINK || l1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"k1".equals(previousButtonClicked) && !"m1".equals(previousButtonClicked) && !"l1".equals(previousButtonClicked) && !"l2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                    "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "l1";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

              

                switch (whichShip) {
                    case 0 -> {
                        l1.setBackground(Color.green);
                        thisUser.LocationGreen.add("l1");
                    }
                    case 1 -> {
                        l1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l1");
                    }
                    case 2 -> {
                        l1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l1");
                    }
                    case 3 -> {
                        l1.setBackground(Color.pink);
                        thisUser.LocationPink.add("l1");
                    }
                    case 4 -> {
                        l1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l1");
                    }
                    default -> {
                    }
                }
               if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l1ActionPerformed

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed

        if (m1.getBackground() == Color.GREEN || m1.getBackground() == Color.BLUE || m1.getBackground() == Color.YELLOW || m1.getBackground() == Color.PINK || m1.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"l1".equals(previousButtonClicked) && !"m1".equals(previousButtonClicked) && !"m2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                  "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "m1";

          if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;
                

                switch (whichShip) {
                    case 0 -> {
                        m1.setBackground(Color.green);
                        thisUser.LocationGreen.add("m1");
                    }
                    case 1 -> {
                        m1.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m1");
                    }
                    case 2 -> {
                        m1.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m1");
                    }
                    case 3 -> {
                        m1.setBackground(Color.pink);
                        thisUser.LocationPink.add("m1");
                    }
                    case 4 -> {
                        m1.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m1");
                    }
                    default -> {
                    }
                }
                 if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m1ActionPerformed

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
       
        if (a2.getBackground() == Color.GREEN ||a2.getBackground() == Color.BLUE || a2.getBackground() == Color.YELLOW || a2.getBackground() == Color.PINK || a2.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"a2".equals(previousButtonClicked) && !"a3".equals(previousButtonClicked) && !"a1".equals(previousButtonClicked) && !"b2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "a2";

            if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

                switch (whichShip) {
                    case 0 -> {
                        a2.setBackground(Color.green);
                        thisUser.LocationGreen.add("a2");
                    }
                    case 1 -> {
                        a2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a2");
                    }
                    case 2 -> {
                        a2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a2");
                    }
                    case 3 -> {
                        a2.setBackground(Color.pink);
                        thisUser.LocationPink.add("a2");
                    }
                    case 4 -> {
                        a2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_a2ActionPerformed

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
               if (b2.getBackground() == Color.GREEN ||b2.getBackground() == Color.BLUE || b2.getBackground() == Color.YELLOW || b2.getBackground() == Color.PINK || b2.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"b1".equals(previousButtonClicked) && !"b2".equals(previousButtonClicked) && !"b3".equals(previousButtonClicked) && !"a2".equals(previousButtonClicked) && !"c2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "b2";

           if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

                switch (whichShip) {
                    case 0 -> {
                        b2.setBackground(Color.green);
                        thisUser.LocationGreen.add("b2");
                    }
                    case 1 -> {
                        b2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b2");
                    }
                    case 2 -> {
                        b2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b2");
                    }
                    case 3 -> {
                        b2.setBackground(Color.pink);
                        thisUser.LocationPink.add("b2");
                    }
                    case 4 -> {
                        b2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_b2ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
               if (c2.getBackground() == Color.GREEN ||c2.getBackground() == Color.BLUE || c2.getBackground() == Color.YELLOW || c2.getBackground() == Color.PINK || c2.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"c1".equals(previousButtonClicked) && !"c2".equals(previousButtonClicked) && !"c3".equals(previousButtonClicked) && !"b2".equals(previousButtonClicked) && !"d2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "c2";

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

              

                switch (whichShip) {
                    case 0 -> {
                        c2.setBackground(Color.green);
                        thisUser.LocationGreen.add("c2");
                    }
                    case 1 -> {
                        c2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c2");
                    }
                    case 2 -> {
                        c2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c2");
                    }
                    case 3 -> {
                        c2.setBackground(Color.pink);
                        thisUser.LocationPink.add("c2");
                    }
                    case 4 -> {
                        c2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c2");
                    }
                    default -> {
                    }
                }
                 if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_c2ActionPerformed

    private void d2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d2ActionPerformed
             
        if (d2.getBackground() == Color.GREEN || d2.getBackground() == Color.BLUE || d2.getBackground() == Color.YELLOW || d2.getBackground() == Color.PINK || d2.getBackground() == Color.ORANGE) {
           
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"d1".equals(previousButtonClicked) && !"d2".equals(previousButtonClicked) && !"d3".equals(previousButtonClicked) && !"c2".equals(previousButtonClicked) && !"e2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "d2";

             if (whichShip == 5) { //if used up ships. Do not allow placing
               JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

              

                switch (whichShip) {
                    case 0 -> {
                        d2.setBackground(Color.green);
                        thisUser.LocationGreen.add("d2");
                    }
                    case 1 -> {
                        d2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d2");
                    }
                    case 2 -> {
                        d2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d2");
                    }
                    case 3 -> {
                        d2.setBackground(Color.pink);
                        thisUser.LocationPink.add("d2");
                    }
                    case 4 -> {
                        d2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d2");
                    }
                    default -> {
                    }
                }
                 if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                    whichShip++; 
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_d2ActionPerformed

    private void e2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e2ActionPerformed
            
        if (e2.getBackground() == Color.GREEN ||e2.getBackground() == Color.BLUE || e2.getBackground() == Color.YELLOW || e2.getBackground() == Color.PINK || e2.getBackground() == Color.ORANGE) {
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

        if (!"Begin".equals(previousButtonClicked) && !"e1".equals(previousButtonClicked) && !"e2".equals(previousButtonClicked) && !"e3".equals(previousButtonClicked) && !"d2".equals(previousButtonClicked) && !"f2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {

            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
        previousButtonClicked = "e2";

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


                switch (whichShip) {
                    case 0 -> {
                        e2.setBackground(Color.green);
                        thisUser.LocationGreen.add("e2");
                    }
                    case 1 -> {
                        e2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e2");
                    }
                    case 2 -> {
                        e2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e2");
                    }
                    case 3 -> {
                        e2.setBackground(Color.pink);
                        thisUser.LocationPink.add("e2");
                    }
                    case 4 -> {
                        e2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_e2ActionPerformed

    private void f2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f2ActionPerformed
        if (f2.getBackground() == Color.GREEN ||f2.getBackground() == Color.BLUE || f2.getBackground() == Color.YELLOW || f2.getBackground() == Color.PINK || f2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f1".equals(previousButtonClicked) && !"f2".equals(previousButtonClicked) && !"f3".equals(previousButtonClicked) && !"e2".equals(previousButtonClicked) && !"g2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "f2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        f2.setBackground(Color.green);
                        thisUser.LocationGreen.add("f2");
                    }
                    case 1 -> {
                        f2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f2");
                    }
                    case 2 -> {
                        f2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f2");
                    }
                    case 3 -> {
                        f2.setBackground(Color.pink);
                        thisUser.LocationPink.add("f2");
                    }
                    case 4 -> {
                        f2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_f2ActionPerformed

    private void g2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g2ActionPerformed
        if (g2.getBackground() == Color.GREEN ||g2.getBackground() == Color.BLUE || g2.getBackground() == Color.YELLOW || g2.getBackground() == Color.PINK || g2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g1".equals(previousButtonClicked) && !"g2".equals(previousButtonClicked) && !"g3".equals(previousButtonClicked) && !"f2".equals(previousButtonClicked) && !"h2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "g2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        g2.setBackground(Color.green);
                        thisUser.LocationGreen.add("g2");
                    }
                    case 1 -> {
                        g2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g2");
                    }
                    case 2 -> {
                        g2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g2");
                    }
                    case 3 -> {
                        g2.setBackground(Color.pink);
                        thisUser.LocationPink.add("g2");
                    }
                    case 4 -> {
                        g2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_g2ActionPerformed

    private void h2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h2ActionPerformed
        if (h2.getBackground() == Color.GREEN ||h2.getBackground() == Color.BLUE || h2.getBackground() == Color.YELLOW || h2.getBackground() == Color.PINK || h2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h1".equals(previousButtonClicked) && !"h2".equals(previousButtonClicked) && !"h3".equals(previousButtonClicked) && !"g2".equals(previousButtonClicked) && !"i2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "h2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        h2.setBackground(Color.green);
                        thisUser.LocationGreen.add("h2");
                    }
                    case 1 -> {
                        h2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h2");
                    }
                    case 2 -> {
                        h2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h2");
                    }
                    case 3 -> {
                        h2.setBackground(Color.pink);
                        thisUser.LocationPink.add("h2");
                    }
                    case 4 -> {
                        h2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_h2ActionPerformed

    private void i2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i2ActionPerformed
        if (i2.getBackground() == Color.GREEN ||i2.getBackground() == Color.BLUE || i2.getBackground() == Color.YELLOW || i2.getBackground() == Color.PINK || i2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i1".equals(previousButtonClicked) && !"i2".equals(previousButtonClicked) && !"i3".equals(previousButtonClicked) && !"h2".equals(previousButtonClicked) && !"j2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "i2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        i2.setBackground(Color.green);
                        thisUser.LocationGreen.add("i2");
                    }
                    case 1 -> {
                        i2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i2");
                    }
                    case 2 -> {
                        i2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i2");
                    }
                    case 3 -> {
                        i2.setBackground(Color.pink);
                        thisUser.LocationPink.add("i2");
                    }
                    case 4 -> {
                        i2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_i2ActionPerformed

    private void j2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j2ActionPerformed
        if (j2.getBackground() == Color.GREEN ||j2.getBackground() == Color.BLUE || j2.getBackground() == Color.YELLOW || j2.getBackground() == Color.PINK || j2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j1".equals(previousButtonClicked) && !"j2".equals(previousButtonClicked) && !"j3".equals(previousButtonClicked) && !"i2".equals(previousButtonClicked) && !"k2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "j2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        j2.setBackground(Color.green);
                        thisUser.LocationGreen.add("j2");
                    }
                    case 1 -> {
                        j2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j2");
                    }
                    case 2 -> {
                        j2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j2");
                    }
                    case 3 -> {
                        j2.setBackground(Color.pink);
                        thisUser.LocationPink.add("j2");
                    }
                    case 4 -> {
                        j2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j2ActionPerformed

    private void k2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k2ActionPerformed
        if (k2.getBackground() == Color.GREEN ||k2.getBackground() == Color.BLUE || k2.getBackground() == Color.YELLOW || k2.getBackground() == Color.PINK || k2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k1".equals(previousButtonClicked) && !"k2".equals(previousButtonClicked) && !"k3".equals(previousButtonClicked) && !"j2".equals(previousButtonClicked) && !"l2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "k2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        k2.setBackground(Color.green);
                        thisUser.LocationGreen.add("k2");
                    }
                    case 1 -> {
                        k2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k2");
                    }
                    case 2 -> {
                        k2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k2");
                    }
                    case 3 -> {
                        k2.setBackground(Color.pink);
                        thisUser.LocationPink.add("k2");
                    }
                    case 4 -> {
                        k2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k2ActionPerformed

    private void l2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l2ActionPerformed
        if (l2.getBackground() == Color.GREEN ||l2.getBackground() == Color.BLUE || l2.getBackground() == Color.YELLOW || l2.getBackground() == Color.PINK || l2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l1".equals(previousButtonClicked) && !"l2".equals(previousButtonClicked) && !"l3".equals(previousButtonClicked) && !"k2".equals(previousButtonClicked) && !"m2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "l2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        l2.setBackground(Color.green);
                        thisUser.LocationGreen.add("l2");
                    }
                    case 1 -> {
                        l2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l2");
                    }
                    case 2 -> {
                        l2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l2");
                    }
                    case 3 -> {
                        l2.setBackground(Color.pink);
                        thisUser.LocationPink.add("l2");
                    }
                    case 4 -> {
                        l2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l2ActionPerformed

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        if (m2.getBackground() == Color.GREEN ||m2.getBackground() == Color.BLUE || m2.getBackground() == Color.YELLOW || m2.getBackground() == Color.PINK || m2.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m1".equals(previousButtonClicked) && !"m2".equals(previousButtonClicked) && !"m3".equals(previousButtonClicked) && !"l2".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            
      previousButtonClicked = "m2";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;


              switch (whichShip) { //
                    case 0 -> {
                        m2.setBackground(Color.green);
                        thisUser.LocationGreen.add("m2");
                    }
                    case 1 -> {
                        m2.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m2");
                    }
                    case 2 -> {
                        m2.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m2");
                    }
                    case 3 -> {
                        m2.setBackground(Color.pink);
                        thisUser.LocationPink.add("m2");
                    }
                    case 4 -> {
                        m2.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m2");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m2ActionPerformed
//poop
    
    private void startGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameActionPerformed
       
      
        for (int i = 0; i < thisUser.LocationGreen.size(); i++) {
            String newValue = thisUser.LocationGreen.get(i).toUpperCase(Locale.ROOT);
            thisUser.LocationGreen.set(i, newValue);
        }
        
         for (int i = 0; i < thisUser.LocationBlue.size(); i++) {
            String newValue = thisUser.LocationBlue.get(i).toUpperCase(Locale.ROOT);
           thisUser.LocationBlue.set(i, newValue);
        }
         
          for (int i = 0; i < thisUser.LocationYellow.size(); i++) {
            String newValue = thisUser.LocationYellow.get(i).toUpperCase(Locale.ROOT);
            thisUser.LocationYellow.set(i, newValue);
        }
          
           for (int i = 0; i < thisUser.LocationPink.size(); i++) {
            String newValue = thisUser.LocationPink.get(i).toUpperCase(Locale.ROOT);
            thisUser.LocationPink.set(i, newValue);
        }
           
            for (int i = 0; i < thisUser.LocationOrange.size(); i++) {
            String newValue = thisUser.LocationOrange.get(i).toUpperCase(Locale.ROOT);
            thisUser.LocationOrange.set(i, newValue);
        }
            
            
        if (whichShip == 5) {


//if it's your turn, turn red or green
//            
//            if (UserInterface.player1.isSelfTurn()) {
//            
//            System.out.println("Player 1 is first");
//           
//        }  else if (UserInterface.player2.isSelfTurn()) {
//            
//           
//            
//            System.out.println("Player 2 is first");
//            
//        } else if (UserInterface.host.isSelfTurn()) {
//            
//            
//            System.out.println("Host is first");
//           
//        } 
            
        close();
        SWINGactualBoard b = new SWINGactualBoard();
        b.setVisible(true);
        b.setLocationsOfPiece(thisUser.LocationGreen, thisUser.LocationBlue, thisUser.LocationYellow, thisUser.LocationPink, thisUser.LocationOrange, thisUser);
        setupPlayers();
        startGame();
//        chachacha
        
        
//        
//        thisUser.LocationGreen.add("A1");
//        thisUser.LocationGreen.add("A2");
//        thisUser.LocationGreen.add("A3");
//        thisUser.LocationGreen.add("A4");
//        thisUser.LocationGreen.add("A5");
//        
//        thisUser.LocationBlue.add("D3");
//        thisUser.LocationBlue.add("E3");
//        thisUser.LocationBlue.add("F3");
//        thisUser.LocationBlue.add("G3");
//        
//        thisUser.LocationYellow.add("M3");
//        thisUser.LocationYellow.add("M4");
//        thisUser.LocationYellow.add("M5");
//        
//        
//        thisUser.LocationPink.add("K3");
//        thisUser.LocationPink.add("K4");
//        thisUser.LocationPink.add("K5");
//        
//        thisUser.LocationOrange.add("B3");
//        thisUser.LocationOrange.add("B4");
//
//        close();
//        SWINGactualBoard b = new SWINGactualBoard();
//        b.setVisible(true);
//      
//        b.setLocationsOfPiece(thisUser.LocationGreen, thisUser.LocationBlue, thisUser.LocationYellow, thisUser.LocationPink, thisUser.LocationOrange, thisUser);
//        setupPlayers();
//        startGame();

  
        } else {
            JOptionPane.showMessageDialog(null,
                    "You have not placed all your ships yet",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_startGameActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
          if (a3.getBackground() == Color.GREEN || a3.getBackground() == Color.BLUE || 
     a3.getBackground() == Color.YELLOW || a3.getBackground() == Color.PINK || a3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a2".equals(previousButtonClicked) && !"a3".equals(previousButtonClicked)
           && !"a4".equals(previousButtonClicked) && !"b3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a3.setBackground(Color.green);
                        thisUser.LocationGreen.add("a3");
                    }
                    case 1 -> {
                        a3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a3");
                    }
                    case 2 -> {
                        a3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a3");
                    }
                    case 3 -> {
                        a3.setBackground(Color.pink);
                        thisUser.LocationPink.add("a3");
                    }
                    case 4 -> {
                        a3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_a3ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
           if (b3.getBackground() == Color.GREEN || b3.getBackground() == Color.BLUE || 
     b3.getBackground() == Color.YELLOW || b3.getBackground() == Color.PINK || b3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b2".equals(previousButtonClicked) && !"b3".equals(previousButtonClicked)
           && !"b4".equals(previousButtonClicked) && !"a3".equals(previousButtonClicked) && !"c3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b3.setBackground(Color.green);
                        thisUser.LocationGreen.add("b3");
                    }
                    case 1 -> {
                        b3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b3");
                    }
                    case 2 -> {
                        b3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b3");
                    }
                    case 3 -> {
                        b3.setBackground(Color.pink);
                        thisUser.LocationPink.add("b3");
                    }
                    case 4 -> {
                        b3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_b3ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
              if (c3.getBackground() == Color.GREEN || c3.getBackground() == Color.BLUE || 
     c3.getBackground() == Color.YELLOW || c3.getBackground() == Color.PINK || c3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c2".equals(previousButtonClicked) && !"c3".equals(previousButtonClicked)
           && !"c4".equals(previousButtonClicked) && !"b3".equals(previousButtonClicked) && !"d3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            
        } else {
    //        
      previousButtonClicked = "c3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c3.setBackground(Color.green);
                        thisUser.LocationGreen.add("c3");
                    }
                    case 1 -> {
                        c3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c3");
                    }
                    case 2 -> {
                        c3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c3");
                    }
                    case 3 -> {
                        c3.setBackground(Color.pink);
                        thisUser.LocationPink.add("c3");
                    }
                    case 4 -> {
                        c3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_c3ActionPerformed

    private void d3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d3ActionPerformed
          
      if (d3.getBackground() == Color.GREEN || d3.getBackground() == Color.BLUE || 
     d3.getBackground() == Color.YELLOW || d3.getBackground() == Color.PINK || d3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d2".equals(previousButtonClicked) && !"d3".equals(previousButtonClicked)
           && !"d4".equals(previousButtonClicked) && !"c3".equals(previousButtonClicked) && !"e3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d3.setBackground(Color.green);
                        thisUser.LocationGreen.add("d3");
                    }
                    case 1 -> {
                        d3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d3");
                    }
                    case 2 -> {
                        d3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d3");
                    }
                    case 3 -> {
                        d3.setBackground(Color.pink);
                        thisUser.LocationPink.add("d3");
                    }
                    case 4 -> {
                        d3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_d3ActionPerformed

    private void e3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e3ActionPerformed
          if (e3.getBackground() == Color.GREEN || e3.getBackground() == Color.BLUE || 
     e3.getBackground() == Color.YELLOW || e3.getBackground() == Color.PINK || e3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e2".equals(previousButtonClicked) && !"e3".equals(previousButtonClicked)
           && !"e4".equals(previousButtonClicked) && !"d3".equals(previousButtonClicked) && !"f3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e3.setBackground(Color.green);
                        thisUser.LocationGreen.add("e3");
                    }
                    case 1 -> {
                        e3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e3");
                    }
                    case 2 -> {
                        e3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e3");
                    }
                    case 3 -> {
                        e3.setBackground(Color.pink);
                        thisUser.LocationPink.add("e3");
                    }
                    case 4 -> {
                        e3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_e3ActionPerformed

    private void f3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f3ActionPerformed
          if (f3.getBackground() == Color.GREEN || f3.getBackground() == Color.BLUE || 
     f3.getBackground() == Color.YELLOW || f3.getBackground() == Color.PINK || f3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f2".equals(previousButtonClicked) && !"f3".equals(previousButtonClicked)
           && !"f4".equals(previousButtonClicked) && !"e3".equals(previousButtonClicked) && !"g3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f3.setBackground(Color.green);
                        thisUser.LocationGreen.add("f3");
                    }
                    case 1 -> {
                        f3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f3");
                    }
                    case 2 -> {
                        f3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f3");
                    }
                    case 3 -> {
                        f3.setBackground(Color.pink);
                        thisUser.LocationPink.add("f3");
                    }
                    case 4 -> {
                        f3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_f3ActionPerformed

    private void g3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g3ActionPerformed
          if (g3.getBackground() == Color.GREEN || g3.getBackground() == Color.BLUE || 
     g3.getBackground() == Color.YELLOW || g3.getBackground() == Color.PINK || g3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g2".equals(previousButtonClicked) && !"g3".equals(previousButtonClicked)
           && !"g4".equals(previousButtonClicked) && !"f3".equals(previousButtonClicked) && !"h3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g3.setBackground(Color.green);
                        thisUser.LocationGreen.add("g3");
                    }
                    case 1 -> {
                        g3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g3");
                    }
                    case 2 -> {
                        g3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g3");
                    }
                    case 3 -> {
                        g3.setBackground(Color.pink);
                        thisUser.LocationPink.add("g3");
                    }
                    case 4 -> {
                        g3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_g3ActionPerformed

    private void h3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h3ActionPerformed
         if (h3.getBackground() == Color.GREEN || h3.getBackground() == Color.BLUE || 
     h3.getBackground() == Color.YELLOW || h3.getBackground() == Color.PINK || h3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h2".equals(previousButtonClicked) && !"h3".equals(previousButtonClicked)
           && !"h4".equals(previousButtonClicked) && !"g3".equals(previousButtonClicked) && !"i3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h3.setBackground(Color.green);
                        thisUser.LocationGreen.add("h3");
                    }
                    case 1 -> {
                        h3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h3");
                    }
                    case 2 -> {
                        h3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h3");
                    }
                    case 3 -> {
                        h3.setBackground(Color.pink);
                        thisUser.LocationPink.add("h3");
                    }
                    case 4 -> {
                        h3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_h3ActionPerformed

    private void i3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i3ActionPerformed
         if (i3.getBackground() == Color.GREEN || i3.getBackground() == Color.BLUE || 
     i3.getBackground() == Color.YELLOW || i3.getBackground() == Color.PINK || i3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i2".equals(previousButtonClicked) && !"i3".equals(previousButtonClicked)
           && !"i4".equals(previousButtonClicked) && !"h3".equals(previousButtonClicked) && !"j3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i3.setBackground(Color.green);
                        thisUser.LocationGreen.add("i3");
                    }
                    case 1 -> {
                        i3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i3");
                    }
                    case 2 -> {
                        i3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i3");
                    }
                    case 3 -> {
                        i3.setBackground(Color.pink);
                        thisUser.LocationPink.add("i3");
                    }
                    case 4 -> {
                        i3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_i3ActionPerformed

    private void j3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j3ActionPerformed
         if (j3.getBackground() == Color.GREEN || j3.getBackground() == Color.BLUE || 
     j3.getBackground() == Color.YELLOW || j3.getBackground() == Color.PINK || j3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j2".equals(previousButtonClicked) && !"j3".equals(previousButtonClicked)
           && !"j4".equals(previousButtonClicked) && !"i3".equals(previousButtonClicked) && !"k3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j3.setBackground(Color.green);
                        thisUser.LocationGreen.add("j3");
                    }
                    case 1 -> {
                        j3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j3");
                    }
                    case 2 -> {
                        j3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j3");
                    }
                    case 3 -> {
                        j3.setBackground(Color.pink);
                        thisUser.LocationPink.add("j3");
                    }
                    case 4 -> {
                        j3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j3ActionPerformed

    private void k3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k3ActionPerformed
          if (k3.getBackground() == Color.GREEN || k3.getBackground() == Color.BLUE || 
     k3.getBackground() == Color.YELLOW || k3.getBackground() == Color.PINK || k3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k2".equals(previousButtonClicked) && !"k3".equals(previousButtonClicked)
           && !"k4".equals(previousButtonClicked) && !"j3".equals(previousButtonClicked) && !"l3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k3.setBackground(Color.green);
                        thisUser.LocationGreen.add("k3");
                    }
                    case 1 -> {
                        k3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k3");
                    }
                    case 2 -> {
                        k3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k3");
                    }
                    case 3 -> {
                        k3.setBackground(Color.pink);
                        thisUser.LocationPink.add("k3");
                    }
                    case 4 -> {
                        k3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k3ActionPerformed

    private void l3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l3ActionPerformed
          if (l3.getBackground() == Color.GREEN || l3.getBackground() == Color.BLUE || 
     l3.getBackground() == Color.YELLOW || l3.getBackground() == Color.PINK || l3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l2".equals(previousButtonClicked) && !"l3".equals(previousButtonClicked)
           && !"l4".equals(previousButtonClicked) && !"k3".equals(previousButtonClicked) && !"m3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l3.setBackground(Color.green);
                        thisUser.LocationGreen.add("l3");
                    }
                    case 1 -> {
                        l3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l3");
                    }
                    case 2 -> {
                        l3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l3");
                    }
                    case 3 -> {
                        l3.setBackground(Color.pink);
                        thisUser.LocationPink.add("l3");
                    }
                    case 4 -> {
                        l3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l3ActionPerformed

    private void m3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m3ActionPerformed
          if (m3.getBackground() == Color.GREEN || m3.getBackground() == Color.BLUE || 
     m3.getBackground() == Color.YELLOW || m3.getBackground() == Color.PINK || m3.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m2".equals(previousButtonClicked) && !"m3".equals(previousButtonClicked)
           && !"m4".equals(previousButtonClicked) && !"l3".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m3";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m3.setBackground(Color.green);
                        thisUser.LocationGreen.add("m3");
                    }
                    case 1 -> {
                        m3.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m3");
                    }
                    case 2 -> {
                        m3.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m3");
                    }
                    case 3 -> {
                        m3.setBackground(Color.pink);
                        thisUser.LocationPink.add("m3");
                    }
                    case 4 -> {
                        m3.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m3");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m3ActionPerformed

    private void a4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a4ActionPerformed
          if (a4.getBackground() == Color.GREEN || a4.getBackground() == Color.BLUE || 
     a4.getBackground() == Color.YELLOW || a4.getBackground() == Color.PINK || a4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a3".equals(previousButtonClicked) && !"a4".equals(previousButtonClicked)
           && !"a5".equals(previousButtonClicked) && !"b4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a4.setBackground(Color.green);
                        thisUser.LocationGreen.add("a4");
                    }
                    case 1 -> {
                        a4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a4");
                    }
                    case 2 -> {
                        a4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a4");
                    }
                    case 3 -> {
                        a4.setBackground(Color.pink);
                        thisUser.LocationPink.add("a4");
                    }
                    case 4 -> {
                        a4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_a4ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
          if (b4.getBackground() == Color.GREEN || b4.getBackground() == Color.BLUE || 
     b4.getBackground() == Color.YELLOW || b4.getBackground() == Color.PINK || b4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b3".equals(previousButtonClicked) && !"b4".equals(previousButtonClicked)
           && !"b5".equals(previousButtonClicked) && !"a4".equals(previousButtonClicked) && !"c4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b4.setBackground(Color.green);
                        thisUser.LocationGreen.add("b4");
                    }
                    case 1 -> {
                        b4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b4");
                    }
                    case 2 -> {
                        b4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b4");
                    }
                    case 3 -> {
                        b4.setBackground(Color.pink);
                        thisUser.LocationPink.add("b4");
                    }
                    case 4 -> {
                        b4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_b4ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed
         
        if (c4.getBackground() == Color.GREEN || c4.getBackground() == Color.BLUE || 
     c4.getBackground() == Color.YELLOW || c4.getBackground() == Color.PINK || c4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c3".equals(previousButtonClicked) && !"c4".equals(previousButtonClicked)
           && !"c5".equals(previousButtonClicked) && !"b4".equals(previousButtonClicked) && !"d4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c4.setBackground(Color.green);
                        thisUser.LocationGreen.add("c4");
                    }
                    case 1 -> {
                        c4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c4");
                    }
                    case 2 -> {
                        c4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c4");
                    }
                    case 3 -> {
                        c4.setBackground(Color.pink);
                        thisUser.LocationPink.add("c4");
                    }
                    case 4 -> {
                        c4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_c4ActionPerformed

    private void d4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d4ActionPerformed
          if (d4.getBackground() == Color.GREEN || d4.getBackground() == Color.BLUE || 
     d4.getBackground() == Color.YELLOW || d4.getBackground() == Color.PINK || d4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d3".equals(previousButtonClicked) && !"d4".equals(previousButtonClicked)
           && !"d5".equals(previousButtonClicked) && !"c4".equals(previousButtonClicked) && !"e4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d4.setBackground(Color.green);
                        thisUser.LocationGreen.add("d4");
                    }
                    case 1 -> {
                        d4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d4");
                    }
                    case 2 -> {
                        d4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d4");
                    }
                    case 3 -> {
                        d4.setBackground(Color.pink);
                        thisUser.LocationPink.add("d4");
                    }
                    case 4 -> {
                        d4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_d4ActionPerformed

    private void e4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e4ActionPerformed
          if (e4.getBackground() == Color.GREEN || e4.getBackground() == Color.BLUE || 
     e4.getBackground() == Color.YELLOW || e4.getBackground() == Color.PINK || e4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e3".equals(previousButtonClicked) && !"e4".equals(previousButtonClicked)
           && !"e5".equals(previousButtonClicked) && !"d4".equals(previousButtonClicked) && !"f4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e4.setBackground(Color.green);
                        thisUser.LocationGreen.add("e4");
                    }
                    case 1 -> {
                        e4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e4");
                    }
                    case 2 -> {
                        e4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e4");
                    }
                    case 3 -> {
                        e4.setBackground(Color.pink);
                        thisUser.LocationPink.add("e4");
                    }
                    case 4 -> {
                        e4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_e4ActionPerformed

    private void f4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f4ActionPerformed
          if (f4.getBackground() == Color.GREEN || f4.getBackground() == Color.BLUE || 
     f4.getBackground() == Color.YELLOW || f4.getBackground() == Color.PINK || f4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f3".equals(previousButtonClicked) && !"f4".equals(previousButtonClicked)
           && !"f5".equals(previousButtonClicked) && !"e4".equals(previousButtonClicked) && !"g4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f4.setBackground(Color.green);
                        thisUser.LocationGreen.add("f4");
                    }
                    case 1 -> {
                        f4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f4");
                    }
                    case 2 -> {
                        f4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f4");
                    }
                    case 3 -> {
                        f4.setBackground(Color.pink);
                        thisUser.LocationPink.add("f4");
                    }
                    case 4 -> {
                        f4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_f4ActionPerformed

    private void g4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g4ActionPerformed
          if (g4.getBackground() == Color.GREEN || g4.getBackground() == Color.BLUE || 
     g4.getBackground() == Color.YELLOW || g4.getBackground() == Color.PINK || g4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g3".equals(previousButtonClicked) && !"g4".equals(previousButtonClicked)
           && !"g5".equals(previousButtonClicked) && !"f4".equals(previousButtonClicked) && !"h4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g4.setBackground(Color.green);
                        thisUser.LocationGreen.add("g4");
                    }
                    case 1 -> {
                        g4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g4");
                    }
                    case 2 -> {
                        g4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g4");
                    }
                    case 3 -> {
                        g4.setBackground(Color.pink);
                        thisUser.LocationPink.add("g4");
                    }
                    case 4 -> {
                        g4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_g4ActionPerformed

    private void h4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h4ActionPerformed
         if (h4.getBackground() == Color.GREEN || h4.getBackground() == Color.BLUE || 
     h4.getBackground() == Color.YELLOW || h4.getBackground() == Color.PINK || h4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h3".equals(previousButtonClicked) && !"h4".equals(previousButtonClicked)
           && !"h5".equals(previousButtonClicked) && !"g4".equals(previousButtonClicked) && !"i4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h4.setBackground(Color.green);
                        thisUser.LocationGreen.add("h4");
                    }
                    case 1 -> {
                        h4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h4");
                    }
                    case 2 -> {
                        h4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h4");
                    }
                    case 3 -> {
                        h4.setBackground(Color.pink);
                        thisUser.LocationPink.add("h4");
                    }
                    case 4 -> {
                        h4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_h4ActionPerformed

    private void i4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i4ActionPerformed
          
        if (i4.getBackground() == Color.GREEN || i4.getBackground() == Color.BLUE || 
     i4.getBackground() == Color.YELLOW || i4.getBackground() == Color.PINK || i4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i3".equals(previousButtonClicked) && !"i4".equals(previousButtonClicked)
           && !"i5".equals(previousButtonClicked) && !"h4".equals(previousButtonClicked) && !"j4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i4.setBackground(Color.green);
                        thisUser.LocationGreen.add("i4");
                    }
                    case 1 -> {
                        i4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i4");
                    }
                    case 2 -> {
                        i4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i4");
                    }
                    case 3 -> {
                        i4.setBackground(Color.pink);
                        thisUser.LocationPink.add("i4");
                    }
                    case 4 -> {
                        i4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_i4ActionPerformed

    private void j4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j4ActionPerformed
          if (j4.getBackground() == Color.GREEN || j4.getBackground() == Color.BLUE || 
     j4.getBackground() == Color.YELLOW || j4.getBackground() == Color.PINK || j4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j3".equals(previousButtonClicked) && !"j4".equals(previousButtonClicked)
           && !"j5".equals(previousButtonClicked) && !"i4".equals(previousButtonClicked) && !"k4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j4.setBackground(Color.green);
                        thisUser.LocationGreen.add("j4");
                    }
                    case 1 -> {
                        j4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j4");
                    }
                    case 2 -> {
                        j4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j4");
                    }
                    case 3 -> {
                        j4.setBackground(Color.pink);
                        thisUser.LocationPink.add("j4");
                    }
                    case 4 -> {
                        j4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j4ActionPerformed

    private void k4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k4ActionPerformed
          if (k4.getBackground() == Color.GREEN || k4.getBackground() == Color.BLUE || 
     k4.getBackground() == Color.YELLOW || k4.getBackground() == Color.PINK || k4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k3".equals(previousButtonClicked) && !"k4".equals(previousButtonClicked)
           && !"k5".equals(previousButtonClicked) && !"j4".equals(previousButtonClicked) && !"l4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k4.setBackground(Color.green);
                        thisUser.LocationGreen.add("k4");
                    }
                    case 1 -> {
                        k4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k4");
                    }
                    case 2 -> {
                        k4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k4");
                    }
                    case 3 -> {
                        k4.setBackground(Color.pink);
                        thisUser.LocationPink.add("k4");
                    }
                    case 4 -> {
                        k4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k4ActionPerformed

    private void l4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l4ActionPerformed
          if (l4.getBackground() == Color.GREEN || l4.getBackground() == Color.BLUE || 
     l4.getBackground() == Color.YELLOW || l4.getBackground() == Color.PINK || l4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l3".equals(previousButtonClicked) && !"l4".equals(previousButtonClicked)
           && !"l5".equals(previousButtonClicked) && !"k4".equals(previousButtonClicked) && !"m4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l4.setBackground(Color.green);
                        thisUser.LocationGreen.add("l4");
                    }
                    case 1 -> {
                        l4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l4");
                    }
                    case 2 -> {
                        l4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l4");
                    }
                    case 3 -> {
                        l4.setBackground(Color.pink);
                        thisUser.LocationPink.add("l4");
                    }
                    case 4 -> {
                        l4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l4ActionPerformed

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
          if (m4.getBackground() == Color.GREEN || m4.getBackground() == Color.BLUE || 
     m4.getBackground() == Color.YELLOW || m4.getBackground() == Color.PINK || m4.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m3".equals(previousButtonClicked) && !"m4".equals(previousButtonClicked)
           && !"m5".equals(previousButtonClicked) && !"l4".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m4";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m4.setBackground(Color.green);
                        thisUser.LocationGreen.add("m4");
                    }
                    case 1 -> {
                        m4.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m4");
                    }
                    case 2 -> {
                        m4.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m4");
                    }
                    case 3 -> {
                        m4.setBackground(Color.pink);
                        thisUser.LocationPink.add("m4");
                    }
                    case 4 -> {
                        m4.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m4");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m4ActionPerformed

    private void a5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a5ActionPerformed
            
      if (a5.getBackground() == Color.GREEN || a5.getBackground() == Color.BLUE || 
     a5.getBackground() == Color.YELLOW || a5.getBackground() == Color.PINK || a5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a4".equals(previousButtonClicked) && !"a5".equals(previousButtonClicked)
           && !"a6".equals(previousButtonClicked) && !"b5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a5.setBackground(Color.green);
                        thisUser.LocationGreen.add("a5");
                    }
                    case 1 -> {
                        a5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a5");
                    }
                    case 2 -> {
                        a5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a5");
                    }
                    case 3 -> {
                        a5.setBackground(Color.pink);
                        thisUser.LocationPink.add("a5");
                    }
                    case 4 -> {
                        a5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_a5ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
            
      if (b5.getBackground() == Color.GREEN || b5.getBackground() == Color.BLUE || 
     b5.getBackground() == Color.YELLOW || b5.getBackground() == Color.PINK || b5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b4".equals(previousButtonClicked) && !"b5".equals(previousButtonClicked)
           && !"b6".equals(previousButtonClicked) && !"a5".equals(previousButtonClicked) && !"c5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b5.setBackground(Color.green);
                        thisUser.LocationGreen.add("b5");
                    }
                    case 1 -> {
                        b5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b5");
                    }
                    case 2 -> {
                        b5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b5");
                    }
                    case 3 -> {
                        b5.setBackground(Color.pink);
                        thisUser.LocationPink.add("b5");
                    }
                    case 4 -> {
                        b5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_b5ActionPerformed

    private void c5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c5ActionPerformed
           
      if (c5.getBackground() == Color.GREEN || c5.getBackground() == Color.BLUE || 
     c5.getBackground() == Color.YELLOW || c5.getBackground() == Color.PINK || c5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c4".equals(previousButtonClicked) && !"c5".equals(previousButtonClicked)
           && !"c6".equals(previousButtonClicked) && !"b5".equals(previousButtonClicked) && !"d5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c5.setBackground(Color.green);
                        thisUser.LocationGreen.add("c5");
                    }
                    case 1 -> {
                        c5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c5");
                    }
                    case 2 -> {
                        c5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c5");
                    }
                    case 3 -> {
                        c5.setBackground(Color.pink);
                        thisUser.LocationPink.add("c5");
                    }
                    case 4 -> {
                        c5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_c5ActionPerformed

    private void d5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d5ActionPerformed
            
      if (d5.getBackground() == Color.GREEN || d5.getBackground() == Color.BLUE || 
     d5.getBackground() == Color.YELLOW || d5.getBackground() == Color.PINK || d5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d4".equals(previousButtonClicked) && !"d5".equals(previousButtonClicked)
           && !"d6".equals(previousButtonClicked) && !"c5".equals(previousButtonClicked) && !"e5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d5.setBackground(Color.green);
                        thisUser.LocationGreen.add("d5");
                    }
                    case 1 -> {
                        d5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d5");
                    }
                    case 2 -> {
                        d5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d5");
                    }
                    case 3 -> {
                        d5.setBackground(Color.pink);
                        thisUser.LocationPink.add("d5");
                    }
                    case 4 -> {
                        d5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_d5ActionPerformed

    private void e5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e5ActionPerformed
            
      if (e5.getBackground() == Color.GREEN || e5.getBackground() == Color.BLUE || 
     e5.getBackground() == Color.YELLOW || e5.getBackground() == Color.PINK || e5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e4".equals(previousButtonClicked) && !"e5".equals(previousButtonClicked)
           && !"e6".equals(previousButtonClicked) && !"d5".equals(previousButtonClicked) && !"f5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e5.setBackground(Color.green);
                        thisUser.LocationGreen.add("e5");
                    }
                    case 1 -> {
                        e5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e5");
                    }
                    case 2 -> {
                        e5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e5");
                    }
                    case 3 -> {
                        e5.setBackground(Color.pink);
                        thisUser.LocationPink.add("e5");
                    }
                    case 4 -> {
                        e5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_e5ActionPerformed

    private void f5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f5ActionPerformed
           
      if (f5.getBackground() == Color.GREEN || f5.getBackground() == Color.BLUE || 
     f5.getBackground() == Color.YELLOW || f5.getBackground() == Color.PINK || f5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f4".equals(previousButtonClicked) && !"f5".equals(previousButtonClicked)
           && !"f6".equals(previousButtonClicked) && !"e5".equals(previousButtonClicked) && !"g5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f5.setBackground(Color.green);
                        thisUser.LocationGreen.add("f5");
                    }
                    case 1 -> {
                        f5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f5");
                    }
                    case 2 -> {
                        f5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f5");
                    }
                    case 3 -> {
                        f5.setBackground(Color.pink);
                        thisUser.LocationPink.add("f5");
                    }
                    case 4 -> {
                        f5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_f5ActionPerformed

    private void g5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g5ActionPerformed
            
      if (g5.getBackground() == Color.GREEN || g5.getBackground() == Color.BLUE || 
     g5.getBackground() == Color.YELLOW || g5.getBackground() == Color.PINK || g5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g4".equals(previousButtonClicked) && !"g5".equals(previousButtonClicked)
           && !"g6".equals(previousButtonClicked) && !"f5".equals(previousButtonClicked) && !"h5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g5.setBackground(Color.green);
                        thisUser.LocationGreen.add("g5");
                    }
                    case 1 -> {
                        g5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g5");
                    }
                    case 2 -> {
                        g5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g5");
                    }
                    case 3 -> {
                        g5.setBackground(Color.pink);
                        thisUser.LocationPink.add("g5");
                    }
                    case 4 -> {
                        g5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_g5ActionPerformed

    private void h5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h5ActionPerformed
           
      if (h5.getBackground() == Color.GREEN || h5.getBackground() == Color.BLUE || 
     h5.getBackground() == Color.YELLOW || h5.getBackground() == Color.PINK || h5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h4".equals(previousButtonClicked) && !"h5".equals(previousButtonClicked)
           && !"h6".equals(previousButtonClicked) && !"g5".equals(previousButtonClicked) && !"i5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h5.setBackground(Color.green);
                        thisUser.LocationGreen.add("h5");
                    }
                    case 1 -> {
                        h5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h5");
                    }
                    case 2 -> {
                        h5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h5");
                    }
                    case 3 -> {
                        h5.setBackground(Color.pink);
                        thisUser.LocationPink.add("h5");
                    }
                    case 4 -> {
                        h5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_h5ActionPerformed

    private void i5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i5ActionPerformed
            
      if (i5.getBackground() == Color.GREEN || i5.getBackground() == Color.BLUE || 
     i5.getBackground() == Color.YELLOW || i5.getBackground() == Color.PINK || i5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i4".equals(previousButtonClicked) && !"i5".equals(previousButtonClicked)
           && !"i6".equals(previousButtonClicked) && !"h5".equals(previousButtonClicked) && !"j5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i5.setBackground(Color.green);
                        thisUser.LocationGreen.add("i5");
                    }
                    case 1 -> {
                        i5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i5");
                    }
                    case 2 -> {
                        i5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i5");
                    }
                    case 3 -> {
                        i5.setBackground(Color.pink);
                        thisUser.LocationPink.add("i5");
                    }
                    case 4 -> {
                        i5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_i5ActionPerformed

    private void j5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j5ActionPerformed
            
      if (j5.getBackground() == Color.GREEN || j5.getBackground() == Color.BLUE || 
     j5.getBackground() == Color.YELLOW || j5.getBackground() == Color.PINK || j5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j4".equals(previousButtonClicked) && !"j5".equals(previousButtonClicked)
           && !"j6".equals(previousButtonClicked) && !"i5".equals(previousButtonClicked) && !"k5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j5.setBackground(Color.green);
                        thisUser.LocationGreen.add("j5");
                    }
                    case 1 -> {
                        j5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j5");
                    }
                    case 2 -> {
                        j5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j5");
                    }
                    case 3 -> {
                        j5.setBackground(Color.pink);
                        thisUser.LocationPink.add("j5");
                    }
                    case 4 -> {
                        j5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j5ActionPerformed

    private void k5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k5ActionPerformed
            
      if (k5.getBackground() == Color.GREEN || k5.getBackground() == Color.BLUE || 
     k5.getBackground() == Color.YELLOW || k5.getBackground() == Color.PINK || k5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k4".equals(previousButtonClicked) && !"k5".equals(previousButtonClicked)
           && !"k6".equals(previousButtonClicked) && !"j5".equals(previousButtonClicked) && !"l5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k5.setBackground(Color.green);
                        thisUser.LocationGreen.add("k5");
                    }
                    case 1 -> {
                        k5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k5");
                    }
                    case 2 -> {
                        k5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k5");
                    }
                    case 3 -> {
                        k5.setBackground(Color.pink);
                        thisUser.LocationPink.add("k5");
                    }
                    case 4 -> {
                        k5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k5ActionPerformed

    private void l5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l5ActionPerformed
            
      if (l5.getBackground() == Color.GREEN || l5.getBackground() == Color.BLUE || 
     l5.getBackground() == Color.YELLOW || l5.getBackground() == Color.PINK || l5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l4".equals(previousButtonClicked) && !"l5".equals(previousButtonClicked)
           && !"l6".equals(previousButtonClicked) && !"k5".equals(previousButtonClicked) && !"m5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l5.setBackground(Color.green);
                        thisUser.LocationGreen.add("l5");
                    }
                    case 1 -> {
                        l5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l5");
                    }
                    case 2 -> {
                        l5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l5");
                    }
                    case 3 -> {
                        l5.setBackground(Color.pink);
                        thisUser.LocationPink.add("l5");
                    }
                    case 4 -> {
                        l5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l5ActionPerformed

    private void m5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m5ActionPerformed
           
      if (m5.getBackground() == Color.GREEN || m5.getBackground() == Color.BLUE || 
     m5.getBackground() == Color.YELLOW || m5.getBackground() == Color.PINK || m5.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m4".equals(previousButtonClicked) && !"m5".equals(previousButtonClicked)
           && !"m6".equals(previousButtonClicked) && !"l5".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m5";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m5.setBackground(Color.green);
                        thisUser.LocationGreen.add("m5");
                    }
                    case 1 -> {
                        m5.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m5");
                    }
                    case 2 -> {
                        m5.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m5");
                    }
                    case 3 -> {
                        m5.setBackground(Color.pink);
                        thisUser.LocationPink.add("m5");
                    }
                    case 4 -> {
                        m5.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m5");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m5ActionPerformed

    private void a6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a6ActionPerformed
            if (a6.getBackground() == Color.GREEN || a6.getBackground() == Color.BLUE || 
     a6.getBackground() == Color.YELLOW || a6.getBackground() == Color.PINK || a6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a5".equals(previousButtonClicked) && !"a6".equals(previousButtonClicked)
           && !"a7".equals(previousButtonClicked) && !"b6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a6.setBackground(Color.green);
                        thisUser.LocationGreen.add("a6");
                    }
                    case 1 -> {
                        a6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a6");
                    }
                    case 2 -> {
                        a6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a6");
                    }
                    case 3 -> {
                        a6.setBackground(Color.pink);
                        thisUser.LocationPink.add("a6");
                    }
                    case 4 -> {
                        a6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_a6ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
            if (b6.getBackground() == Color.GREEN || b6.getBackground() == Color.BLUE || 
     b6.getBackground() == Color.YELLOW || b6.getBackground() == Color.PINK || b6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b5".equals(previousButtonClicked) && !"b6".equals(previousButtonClicked)
           && !"b7".equals(previousButtonClicked) && !"a6".equals(previousButtonClicked) && !"c6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b6.setBackground(Color.green);
                        thisUser.LocationGreen.add("b6");
                    }
                    case 1 -> {
                        b6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b6");
                    }
                    case 2 -> {
                        b6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b6"); try {
               UserInterface.shootTorpedo(((JButton) evt.getSource()).getName().toUpperCase());
           } catch (BadAttributeValueExpException ex) {
               Logger.getLogger(SWINGactualBoard.class.getName()).log(Level.SEVERE, null, ex);
           }
               ((JButton) evt.getSource()).setBackground(Color.red);w.add("b6");
                    }
                    case 3 -> {
                        b6.setBackground(Color.pink);
                        thisUser.LocationPink.add("b6");
                    }
                    case 4 -> {
                        b6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_b6ActionPerformed

    private void c6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c6ActionPerformed
            if (c6.getBackground() == Color.GREEN || c6.getBackground() == Color.BLUE || 
     c6.getBackground() == Color.YELLOW || c6.getBackground() == Color.PINK || c6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c5".equals(previousButtonClicked) && !"c6".equals(previousButtonClicked)
           && !"c7".equals(previousButtonClicked) && !"b6".equals(previousButtonClicked) && !"d6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c6.setBackground(Color.green);
                        thisUser.LocationGreen.add("c6");
                    }
                    case 1 -> {
                        c6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c6");
                    }
                    case 2 -> {
                        c6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c6");
                    }
                    case 3 -> {
                        c6.setBackground(Color.pink);
                        thisUser.LocationPink.add("c6");
                    }
                    case 4 -> {
                        c6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_c6ActionPerformed

    private void d6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d6ActionPerformed
            if (d6.getBackground() == Color.GREEN || d6.getBackground() == Color.BLUE || 
     d6.getBackground() == Color.YELLOW || d6.getBackground() == Color.PINK || d6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d5".equals(previousButtonClicked) && !"d6".equals(previousButtonClicked)
           && !"d7".equals(previousButtonClicked) && !"c6".equals(previousButtonClicked) && !"e6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d6.setBackground(Color.green);
                        thisUser.LocationGreen.add("d6");
                    }
                    case 1 -> {
                        d6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d6");
                    }
                    case 2 -> {
                        d6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d6");
                    }
                    case 3 -> {
                        d6.setBackground(Color.pink);
                        thisUser.LocationPink.add("d6");
                    }
                    case 4 -> {
                        d6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_d6ActionPerformed

    private void e6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e6ActionPerformed
            if (e6.getBackground() == Color.GREEN || e6.getBackground() == Color.BLUE || 
     e6.getBackground() == Color.YELLOW || e6.getBackground() == Color.PINK || e6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e5".equals(previousButtonClicked) && !"e6".equals(previousButtonClicked)
           && !"e7".equals(previousButtonClicked) && !"d6".equals(previousButtonClicked) && !"f6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e6.setBackground(Color.green);
                        thisUser.LocationGreen.add("e6");
                    }
                    case 1 -> {
                        e6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e6");
                    }
                    case 2 -> {
                        e6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e6");
                    }
                    case 3 -> {
                        e6.setBackground(Color.pink);
                        thisUser.LocationPink.add("e6");
                    }
                    case 4 -> {
                        e6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_e6ActionPerformed

    private void f6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f6ActionPerformed
           if (f6.getBackground() == Color.GREEN || f6.getBackground() == Color.BLUE || 
     f6.getBackground() == Color.YELLOW || f6.getBackground() == Color.PINK || f6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f5".equals(previousButtonClicked) && !"f6".equals(previousButtonClicked)
           && !"f7".equals(previousButtonClicked) && !"e6".equals(previousButtonClicked) && !"g6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f6.setBackground(Color.green);
                        thisUser.LocationGreen.add("f6");
                    }
                    case 1 -> {
                        f6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f6");
                    }
                    case 2 -> {
                        f6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f6");
                    }
                    case 3 -> {
                        f6.setBackground(Color.pink);
                        thisUser.LocationPink.add("f6");
                    }
                    case 4 -> {
                        f6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_f6ActionPerformed

    private void g6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g6ActionPerformed
            if (g6.getBackground() == Color.GREEN || g6.getBackground() == Color.BLUE || 
     g6.getBackground() == Color.YELLOW || g6.getBackground() == Color.PINK || g6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g5".equals(previousButtonClicked) && !"g6".equals(previousButtonClicked)
           && !"g7".equals(previousButtonClicked) && !"f6".equals(previousButtonClicked) && !"h6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g6.setBackground(Color.green);
                        thisUser.LocationGreen.add("g6");
                    }
                    case 1 -> {
                        g6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g6");
                    }
                    case 2 -> {
                        g6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g6");
                    }
                    case 3 -> {
                        g6.setBackground(Color.pink);
                        thisUser.LocationPink.add("g6");
                    }
                    case 4 -> {
                        g6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_g6ActionPerformed

    private void h6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h6ActionPerformed
            if (h6.getBackground() == Color.GREEN || h6.getBackground() == Color.BLUE || 
     h6.getBackground() == Color.YELLOW || h6.getBackground() == Color.PINK || h6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h5".equals(previousButtonClicked) && !"h6".equals(previousButtonClicked)
           && !"h7".equals(previousButtonClicked) && !"g6".equals(previousButtonClicked) && !"i6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h6.setBackground(Color.green);
                        thisUser.LocationGreen.add("h6");
                    }
                    case 1 -> {
                        h6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h6");
                    }
                    case 2 -> {
                        h6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h6");
                    }
                    case 3 -> {
                        h6.setBackground(Color.pink);
                        thisUser.LocationPink.add("h6");
                    }
                    case 4 -> {
                        h6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_h6ActionPerformed

    private void i6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i6ActionPerformed
            if (i6.getBackground() == Color.GREEN || i6.getBackground() == Color.BLUE || 
     i6.getBackground() == Color.YELLOW || i6.getBackground() == Color.PINK || i6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i5".equals(previousButtonClicked) && !"i6".equals(previousButtonClicked)
           && !"i7".equals(previousButtonClicked) && !"h6".equals(previousButtonClicked) && !"j6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i6.setBackground(Color.green);
                        thisUser.LocationGreen.add("i6");
                    }
                    case 1 -> {
                        i6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i6");
                    }
                    case 2 -> {
                        i6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i6");
                    }
                    case 3 -> {
                        i6.setBackground(Color.pink);
                        thisUser.LocationPink.add("i6");
                    }
                    case 4 -> {
                        i6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_i6ActionPerformed

    private void j6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j6ActionPerformed
            if (j6.getBackground() == Color.GREEN || j6.getBackground() == Color.BLUE || 
     j6.getBackground() == Color.YELLOW || j6.getBackground() == Color.PINK || j6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j5".equals(previousButtonClicked) && !"j6".equals(previousButtonClicked)
           && !"j7".equals(previousButtonClicked) && !"i6".equals(previousButtonClicked) && !"k6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j6.setBackground(Color.green);
                        thisUser.LocationGreen.add("j6");
                    }
                    case 1 -> {
                        j6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j6");
                    }
                    case 2 -> {
                        j6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j6");
                    }
                    case 3 -> {
                        j6.setBackground(Color.pink);
                        thisUser.LocationPink.add("j6");
                    }
                    case 4 -> {
                        j6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_j6ActionPerformed

    private void k6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k6ActionPerformed
            if (k6.getBackground() == Color.GREEN || k6.getBackground() == Color.BLUE || 
     k6.getBackground() == Color.YELLOW || k6.getBackground() == Color.PINK || k6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k5".equals(previousButtonClicked) && !"k6".equals(previousButtonClicked)
           && !"k7".equals(previousButtonClicked) && !"j6".equals(previousButtonClicked) && !"l6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k6.setBackground(Color.green);
                        thisUser.LocationGreen.add("k6");
                    }
                    case 1 -> {
                        k6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k6");
                    }
                    case 2 -> {
                        k6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k6");
                    }
                    case 3 -> {
                        k6.setBackground(Color.pink);
                        thisUser.LocationPink.add("k6");
                    }
                    case 4 -> {
                        k6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_k6ActionPerformed

    private void l6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l6ActionPerformed
            if (l6.getBackground() == Color.GREEN || l6.getBackground() == Color.BLUE || 
     l6.getBackground() == Color.YELLOW || l6.getBackground() == Color.PINK || l6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l5".equals(previousButtonClicked) && !"l6".equals(previousButtonClicked)
           && !"l7".equals(previousButtonClicked) && !"k6".equals(previousButtonClicked) && !"m6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l6.setBackground(Color.green);
                        thisUser.LocationGreen.add("l6");
                    }
                    case 1 -> {
                        l6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l6");
                    }
                    case 2 -> {
                        l6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l6");
                    }
                    case 3 -> {
                        l6.setBackground(Color.pink);
                        thisUser.LocationPink.add("l6");
                    }
                    case 4 -> {
                        l6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_l6ActionPerformed

    private void m6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m6ActionPerformed
            if (m6.getBackground() == Color.GREEN || m6.getBackground() == Color.BLUE || 
     m6.getBackground() == Color.YELLOW || m6.getBackground() == Color.PINK || m6.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m5".equals(previousButtonClicked) && !"m6".equals(previousButtonClicked)
           && !"m7".equals(previousButtonClicked) && !"l6".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m6";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m6.setBackground(Color.green);
                        thisUser.LocationGreen.add("m6");
                    }
                    case 1 -> {
                        m6.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m6");
                    }
                    case 2 -> {
                        m6.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m6");
                    }
                    case 3 -> {
                        m6.setBackground(Color.pink);
                        thisUser.LocationPink.add("m6");
                    }
                    case 4 -> {
                        m6.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m6");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
    }//GEN-LAST:event_m6ActionPerformed

    private void a7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a7ActionPerformed
       
        if (a7.getBackground() == Color.GREEN || a7.getBackground() == Color.BLUE || 
     a7.getBackground() == Color.YELLOW || a7.getBackground() == Color.PINK || a7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a6".equals(previousButtonClicked) && !"a7".equals(previousButtonClicked)
           && !"a8".equals(previousButtonClicked) && !"a7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a7.setBackground(Color.green);
                        thisUser.LocationGreen.add("a7");
                    }
                    case 1 -> {
                        a7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a7");
                    }
                    case 2 -> {
                        a7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a7");
                    }
                    case 3 -> {
                        a7.setBackground(Color.pink);
                        thisUser.LocationPink.add("a7");
                    }
                    case 4 -> {
                        a7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_a7ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
          if (b7.getBackground() == Color.GREEN || b7.getBackground() == Color.BLUE || 
     b7.getBackground() == Color.YELLOW || b7.getBackground() == Color.PINK || b7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b6".equals(previousButtonClicked) && !"b7".equals(previousButtonClicked)
           && !"b8".equals(previousButtonClicked) && !"a7".equals(previousButtonClicked) && !"c7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b7.setBackground(Color.green);
                        thisUser.LocationGreen.add("b7");
                    }
                    case 1 -> {
                        b7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b7");
                    }
                    case 2 -> {
                        b7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b7");
                    }
                    case 3 -> {
                        b7.setBackground(Color.pink);
                        thisUser.LocationPink.add("b7");
                    }
                    case 4 -> {
                        b7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_b7ActionPerformed

    private void c7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c7ActionPerformed
          if (c7.getBackground() == Color.GREEN || c7.getBackground() == Color.BLUE || 
     c7.getBackground() == Color.YELLOW || c7.getBackground() == Color.PINK || c7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c6".equals(previousButtonClicked) && !"c7".equals(previousButtonClicked)
           && !"c8".equals(previousButtonClicked) && !"b7".equals(previousButtonClicked) && !"d7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c7.setBackground(Color.green);
                        thisUser.LocationGreen.add("c7");
                    }
                    case 1 -> {
                        c7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c7");
                    }
                    case 2 -> {
                        c7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c7");
                    }
                    case 3 -> {
                        c7.setBackground(Color.pink);
                        thisUser.LocationPink.add("c7");
                    }
                    case 4 -> {
                        c7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_c7ActionPerformed

    private void d7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d7ActionPerformed
          if (d7.getBackground() == Color.GREEN || d7.getBackground() == Color.BLUE || 
    d7.getBackground() == Color.YELLOW || d7.getBackground() == Color.PINK || d7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d6".equals(previousButtonClicked) && !"d7".equals(previousButtonClicked)
           && !"d8".equals(previousButtonClicked) && !"c7".equals(previousButtonClicked) && !"e7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d7.setBackground(Color.green);
                        thisUser.LocationGreen.add("d7");
                    }
                    case 1 -> {
                        d7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d7");
                    }
                    case 2 -> {
                        d7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d7");
                    }
                    case 3 -> {
                        d7.setBackground(Color.pink);
                        thisUser.LocationPink.add("d7");
                    }
                    case 4 -> {
                        d7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_d7ActionPerformed

    private void e7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e7ActionPerformed
          if (e7.getBackground() == Color.GREEN || e7.getBackground() == Color.BLUE || 
     e7.getBackground() == Color.YELLOW || e7.getBackground() == Color.PINK || e7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e6".equals(previousButtonClicked) && !"e7".equals(previousButtonClicked)
           && !"e8".equals(previousButtonClicked) && !"d7".equals(previousButtonClicked) && !"f7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e7.setBackground(Color.green);
                        thisUser.LocationGreen.add("e7");
                    }
                    case 1 -> {
                        e7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e7");
                    }
                    case 2 -> {
                        e7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e7");
                    }
                    case 3 -> {
                        e7.setBackground(Color.pink);
                        thisUser.LocationPink.add("e7");
                    }
                    case 4 -> {
                        e7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_e7ActionPerformed

    private void f7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f7ActionPerformed
          if (f7.getBackground() == Color.GREEN || f7.getBackground() == Color.BLUE || 
     f7.getBackground() == Color.YELLOW || f7.getBackground() == Color.PINK || f7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f6".equals(previousButtonClicked) && !"f7".equals(previousButtonClicked)
           && !"f8".equals(previousButtonClicked) && !"e7".equals(previousButtonClicked) && !"g7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f7.setBackground(Color.green);
                        thisUser.LocationGreen.add("f7");
                    }
                    case 1 -> {
                        f7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f7");
                    }
                    case 2 -> {
                        f7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f7");
                    }
                    case 3 -> {
                        f7.setBackground(Color.pink);
                        thisUser.LocationPink.add("f7");
                    }
                    case 4 -> {
                        f7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_f7ActionPerformed

    private void g7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g7ActionPerformed
          if (g7.getBackground() == Color.GREEN || g7.getBackground() == Color.BLUE || 
     g7.getBackground() == Color.YELLOW || g7.getBackground() == Color.PINK || g7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g6".equals(previousButtonClicked) && !"g7".equals(previousButtonClicked)
           && !"g8".equals(previousButtonClicked) && !"f7".equals(previousButtonClicked) && !"h7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g7.setBackground(Color.green);
                        thisUser.LocationGreen.add("g7");
                    }
                    case 1 -> {
                        g7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g7");
                    }
                    case 2 -> {
                        g7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g7");
                    }
                    case 3 -> {
                        g7.setBackground(Color.pink);
                        thisUser.LocationPink.add("g7");
                    }
                    case 4 -> {
                        g7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_g7ActionPerformed

    private void h7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h7ActionPerformed
          if (h7.getBackground() == Color.GREEN || h7.getBackground() == Color.BLUE || 
     h7.getBackground() == Color.YELLOW || h7.getBackground() == Color.PINK || h7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h6".equals(previousButtonClicked) && !"h7".equals(previousButtonClicked)
           && !"h8".equals(previousButtonClicked) && !"g7".equals(previousButtonClicked) && !"i7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h7.setBackground(Color.green);
                        thisUser.LocationGreen.add("h7");
                    }
                    case 1 -> {
                        h7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h7");
                    }
                    case 2 -> {
                        h7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h7");
                    }
                    case 3 -> {
                        h7.setBackground(Color.pink);
                        thisUser.LocationPink.add("h7");
                    }
                    case 4 -> {
                        h7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_h7ActionPerformed

    private void i7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i7ActionPerformed
         if (i7.getBackground() == Color.GREEN || i7.getBackground() == Color.BLUE || 
     i7.getBackground() == Color.YELLOW || i7.getBackground() == Color.PINK || i7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i6".equals(previousButtonClicked) && !"i7".equals(previousButtonClicked)
           && !"i8".equals(previousButtonClicked) && !"h7".equals(previousButtonClicked) && !"j7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i7.setBackground(Color.green);
                        thisUser.LocationGreen.add("i7");
                    }
                    case 1 -> {
                        i7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i7");
                    }
                    case 2 -> {
                        i7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i7");
                    }
                    case 3 -> {
                        i7.setBackground(Color.pink);
                        thisUser.LocationPink.add("i7");
                    }
                    case 4 -> {
                        i7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_i7ActionPerformed

    private void j7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j7ActionPerformed
          if (j7.getBackground() == Color.GREEN || j7.getBackground() == Color.BLUE || 
     j7.getBackground() == Color.YELLOW || i7.getBackground() == Color.PINK || k7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j6".equals(previousButtonClicked) && !"j7".equals(previousButtonClicked)
           && !"j8".equals(previousButtonClicked) && !"i7".equals(previousButtonClicked) && !"k7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j7.setBackground(Color.green);
                        thisUser.LocationGreen.add("j7");
                    }
                    case 1 -> {
                        j7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j7");
                    }
                    case 2 -> {
                        j7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j7");
                    }
                    case 3 -> {
                        j7.setBackground(Color.pink);
                        thisUser.LocationPink.add("j7");
                    }
                    case 4 -> {
                        j7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_j7ActionPerformed

    private void k7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k7ActionPerformed
          if (k7.getBackground() == Color.GREEN || k7.getBackground() == Color.BLUE || 
     k7.getBackground() == Color.YELLOW || k7.getBackground() == Color.PINK || k7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k6".equals(previousButtonClicked) && !"k7".equals(previousButtonClicked)
           && !"k8".equals(previousButtonClicked) && !"j7".equals(previousButtonClicked) && !"l7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k7.setBackground(Color.green);
                        thisUser.LocationGreen.add("k7");
                    }
                    case 1 -> {
                        k7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k7");
                    }
                    case 2 -> {
                        k7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k7");
                    }
                    case 3 -> {
                        k7.setBackground(Color.pink);
                        thisUser.LocationPink.add("k7");
                    }
                    case 4 -> {
                        k7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_k7ActionPerformed

    private void l7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l7ActionPerformed
          if (l7.getBackground() == Color.GREEN || l7.getBackground() == Color.BLUE || 
     l7.getBackground() == Color.YELLOW || l7.getBackground() == Color.PINK || l7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l6".equals(previousButtonClicked) && !"l7".equals(previousButtonClicked)
           && !"l8".equals(previousButtonClicked) && !"k7".equals(previousButtonClicked) && !"m7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l7.setBackground(Color.green);
                        thisUser.LocationGreen.add("l7");
                    }
                    case 1 -> {
                        l7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l7");
                    }
                    case 2 -> {
                        l7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l7");
                    }
                    case 3 -> {
                        l7.setBackground(Color.pink);
                        thisUser.LocationPink.add("l7");
                    }
                    case 4 -> {
                        l7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_l7ActionPerformed

    private void m7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m7ActionPerformed
          if (m7.getBackground() == Color.GREEN || m7.getBackground() == Color.BLUE || 
     m7.getBackground() == Color.YELLOW || m7.getBackground() == Color.PINK || m7.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m6".equals(previousButtonClicked) && !"m7".equals(previousButtonClicked)
           && !"m8".equals(previousButtonClicked) && !"l7".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m7";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m7.setBackground(Color.green);
                        thisUser.LocationGreen.add("m7");
                    }
                    case 1 -> {
                        m7.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m7");
                    }
                    case 2 -> {
                        m7.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m7");
                    }
                    case 3 -> {
                        m7.setBackground(Color.pink);
                        thisUser.LocationPink.add("m7");
                    }
                    case 4 -> {
                        m7.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m7");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_m7ActionPerformed
//20:30
    private void a8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a8ActionPerformed
          if (a8.getBackground() == Color.GREEN || a8.getBackground() == Color.BLUE || 
     a8.getBackground() == Color.YELLOW || a8.getBackground() == Color.PINK || a8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a7".equals(previousButtonClicked) && !"a8".equals(previousButtonClicked)
           && !"a9".equals(previousButtonClicked) && !"b8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a8.setBackground(Color.green);
                        thisUser.LocationGreen.add("a8");
                    }
                    case 1 -> {
                        a8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a8");
                    }
                    case 2 -> {
                        a8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a8");
                    }
                    case 3 -> {
                        a8.setBackground(Color.pink);
                        thisUser.LocationPink.add("a8");
                    }
                    case 4 -> {
                        a8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_a8ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
          if (b8.getBackground() == Color.GREEN || b8.getBackground() == Color.BLUE || 
     b8.getBackground() == Color.YELLOW || b8.getBackground() == Color.PINK || b8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b7".equals(previousButtonClicked) && !"b8".equals(previousButtonClicked)
           && !"b9".equals(previousButtonClicked) && !"a8".equals(previousButtonClicked) && !"c8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b8.setBackground(Color.green);
                        thisUser.LocationGreen.add("b8");
                    }
                    case 1 -> {
                        b8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b8");
                    }
                    case 2 -> {
                        b8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b8");
                    }
                    case 3 -> {
                        b8.setBackground(Color.pink);
                        thisUser.LocationPink.add("b8");
                    }
                    case 4 -> {
                        b8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_b8ActionPerformed

    private void c8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c8ActionPerformed
          if (c8.getBackground() == Color.GREEN || c8.getBackground() == Color.BLUE || 
     c8.getBackground() == Color.YELLOW || c8.getBackground() == Color.PINK || c8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c7".equals(previousButtonClicked) && !"c8".equals(previousButtonClicked)
           && !"c9".equals(previousButtonClicked) && !"b8".equals(previousButtonClicked) && !"d8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c8.setBackground(Color.green);
                        thisUser.LocationGreen.add("c8");
                    }
                    case 1 -> {
                        c8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c8");
                    }
                    case 2 -> {
                        c8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c8");
                    }
                    case 3 -> {
                        c8.setBackground(Color.pink);
                        thisUser.LocationPink.add("c8");
                    }
                    case 4 -> {
                        c8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_c8ActionPerformed

    private void d8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d8ActionPerformed
          if (d8.getBackground() == Color.GREEN || d8.getBackground() == Color.BLUE || 
     d8.getBackground() == Color.YELLOW || d8.getBackground() == Color.PINK || d8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d7".equals(previousButtonClicked) && !"d8".equals(previousButtonClicked)
           && !"d9".equals(previousButtonClicked) && !"c8".equals(previousButtonClicked) && !"e8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d8.setBackground(Color.green);
                        thisUser.LocationGreen.add("d8");
                    }
                    case 1 -> {
                        d8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d8");
                    }
                    case 2 -> {
                        d8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d8");
                    }
                    case 3 -> {
                        d8.setBackground(Color.pink);
                        thisUser.LocationPink.add("d8");
                    }
                    case 4 -> {
                        d8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_d8ActionPerformed

    private void e8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e8ActionPerformed
          if (e8.getBackground() == Color.GREEN || e8.getBackground() == Color.BLUE || 
     e8.getBackground() == Color.YELLOW || e8.getBackground() == Color.PINK || e8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e7".equals(previousButtonClicked) && !"e8".equals(previousButtonClicked)
           && !"e9".equals(previousButtonClicked) && !"d8".equals(previousButtonClicked) && !"f8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e8.setBackground(Color.green);
                        thisUser.LocationGreen.add("e8");
                    }
                    case 1 -> {
                        e8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e8");
                    }
                    case 2 -> {
                        e8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e8");
                    }
                    case 3 -> {
                        e8.setBackground(Color.pink);
                        thisUser.LocationPink.add("e8");
                    }
                    case 4 -> {
                        e8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_e8ActionPerformed

    private void f8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f8ActionPerformed
          if (f8.getBackground() == Color.GREEN || f8.getBackground() == Color.BLUE || 
     f8.getBackground() == Color.YELLOW || f8.getBackground() == Color.PINK || f8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f7".equals(previousButtonClicked) && !"f8".equals(previousButtonClicked)
           && !"f9".equals(previousButtonClicked) && !"e8".equals(previousButtonClicked) && !"g8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f8.setBackground(Color.green);
                        thisUser.LocationGreen.add("f8");
                    }
                    case 1 -> {
                        f8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f8");
                    }
                    case 2 -> {
                        f8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f8");
                    }
                    case 3 -> {
                        f8.setBackground(Color.pink);
                        thisUser.LocationPink.add("f8");
                    }
                    case 4 -> {
                        f8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_f8ActionPerformed

    private void g8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g8ActionPerformed
          if (g8.getBackground() == Color.GREEN || g8.getBackground() == Color.BLUE || 
     g8.getBackground() == Color.YELLOW || g8.getBackground() == Color.PINK || g8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g7".equals(previousButtonClicked) && !"g8".equals(previousButtonClicked)
           && !"g9".equals(previousButtonClicked) && !"f8".equals(previousButtonClicked) && !"h8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g8.setBackground(Color.green);
                        thisUser.LocationGreen.add("g8");
                    }
                    case 1 -> {
                        g8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g8");
                    }
                    case 2 -> {
                        g8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g8");
                    }
                    case 3 -> {
                        g8.setBackground(Color.pink);
                        thisUser.LocationPink.add("g8");
                    }
                    case 4 -> {
                        g8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_g8ActionPerformed

    private void h8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h8ActionPerformed
          if (h8.getBackground() == Color.GREEN || h8.getBackground() == Color.BLUE || 
     h8.getBackground() == Color.YELLOW || h8.getBackground() == Color.PINK || h8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h7".equals(previousButtonClicked) && !"h8".equals(previousButtonClicked)
           && !"h9".equals(previousButtonClicked) && !"g8".equals(previousButtonClicked) && !"i8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h8.setBackground(Color.green);
                        thisUser.LocationGreen.add("h8");
                    }
                    case 1 -> {
                        h8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h8");
                    }
                    case 2 -> {
                        h8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h8");
                    }
                    case 3 -> {
                        h8.setBackground(Color.pink);
                        thisUser.LocationPink.add("h8");
                    }
                    case 4 -> {
                        h8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_h8ActionPerformed

    private void i8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i8ActionPerformed
           
      if (i8.getBackground() == Color.GREEN || i8.getBackground() == Color.BLUE || 
     i8.getBackground() == Color.YELLOW || i8.getBackground() == Color.PINK || i8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i7".equals(previousButtonClicked) && !"i8".equals(previousButtonClicked)
           && !"i9".equals(previousButtonClicked) && !"h8".equals(previousButtonClicked) && !"j8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i8.setBackground(Color.green);
                        thisUser.LocationGreen.add("i8");
                    }
                    case 1 -> {
                        i8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i8");
                    }
                    case 2 -> {
                        i8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i8");
                    }
                    case 3 -> {
                        i8.setBackground(Color.pink);
                        thisUser.LocationPink.add("i8");
                    }
                    case 4 -> {
                        i8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_i8ActionPerformed

    private void j8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j8ActionPerformed
           
      if (j8.getBackground() == Color.GREEN || j8.getBackground() == Color.BLUE || 
     j8.getBackground() == Color.YELLOW || j8.getBackground() == Color.PINK || j8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j7".equals(previousButtonClicked) && !"j8".equals(previousButtonClicked)
           && !"j9".equals(previousButtonClicked) && !"i8".equals(previousButtonClicked) && !"k8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j8.setBackground(Color.green);
                        thisUser.LocationGreen.add("j8");
                    }
                    case 1 -> {
                        j8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j8");
                    }
                    case 2 -> {
                        j8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j8");
                    }
                    case 3 -> {
                        j8.setBackground(Color.pink);
                        thisUser.LocationPink.add("j8");
                    }
                    case 4 -> {
                        j8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_j8ActionPerformed

    private void k8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k8ActionPerformed
           
      if (k8.getBackground() == Color.GREEN || k8.getBackground() == Color.BLUE || 
     k8.getBackground() == Color.YELLOW || k8.getBackground() == Color.PINK || k8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k7".equals(previousButtonClicked) && !"k8".equals(previousButtonClicked)
           && !"k9".equals(previousButtonClicked) && !"j8".equals(previousButtonClicked) && !"l8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k8.setBackground(Color.green);
                        thisUser.LocationGreen.add("k8");
                    }
                    case 1 -> {
                        k8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k8");
                    }
                    case 2 -> {
                        k8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k8");
                    }
                    case 3 -> {
                        k8.setBackground(Color.pink);
                        thisUser.LocationPink.add("k8");
                    }
                    case 4 -> {
                        k8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_k8ActionPerformed

    private void l8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l8ActionPerformed
           
      if (l8.getBackground() == Color.GREEN || l8.getBackground() == Color.BLUE || 
     l8.getBackground() == Color.YELLOW || l8.getBackground() == Color.PINK || l8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l7".equals(previousButtonClicked) && !"l8".equals(previousButtonClicked)
           && !"l9".equals(previousButtonClicked) && !"k8".equals(previousButtonClicked) && !"m8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l8.setBackground(Color.green);
                        thisUser.LocationGreen.add("l8");
                    }
                    case 1 -> {
                        l8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l8");
                    }
                    case 2 -> {
                        l8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l8");
                    }
                    case 3 -> {
                        l8.setBackground(Color.pink);
                        thisUser.LocationPink.add("l8");
                    }
                    case 4 -> {
                        l8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_l8ActionPerformed

    private void m8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m8ActionPerformed
           
      if (m8.getBackground() == Color.GREEN || m8.getBackground() == Color.BLUE || 
     m8.getBackground() == Color.YELLOW || m8.getBackground() == Color.PINK || m8.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m7".equals(previousButtonClicked) && !"m8".equals(previousButtonClicked)
           && !"m9".equals(previousButtonClicked) && !"l8".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m8";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m8.setBackground(Color.green);
                        thisUser.LocationGreen.add("m8");
                    }
                    case 1 -> {
                        m8.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m8");
                    }
                    case 2 -> {
                        m8.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m8");
                    }
                    case 3 -> {
                        m8.setBackground(Color.pink);
                        thisUser.LocationPink.add("m8");
                    }
                    case 4 -> {
                        m8.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m8");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_m8ActionPerformed

    private void a9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a9ActionPerformed
              if (a9.getBackground() == Color.GREEN || a9.getBackground() == Color.BLUE || 
     a9.getBackground() == Color.YELLOW || a9.getBackground() == Color.PINK || a9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a8".equals(previousButtonClicked) && !"a9".equals(previousButtonClicked)
           && !"a10".equals(previousButtonClicked) && !"b9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a9.setBackground(Color.green);
                        thisUser.LocationGreen.add("a9");
                    }
                    case 1 -> {
                        a9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a9");
                    }
                    case 2 -> {
                        a9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a9");
                    }
                    case 3 -> {
                        a9.setBackground(Color.pink);
                        thisUser.LocationPink.add("a9");
                    }
                    case 4 -> {
                        a9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_a9ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
             if (b9.getBackground() == Color.GREEN || b9.getBackground() == Color.BLUE || 
     b9.getBackground() == Color.YELLOW || b9.getBackground() == Color.PINK || b9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b8".equals(previousButtonClicked) && !"b9".equals(previousButtonClicked)
           && !"b10".equals(previousButtonClicked) && !"a9".equals(previousButtonClicked) && !"c9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b9.setBackground(Color.green);
                        thisUser.LocationGreen.add("b9");
                    }
                    case 1 -> {
                        b9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b9");
                    }
                    case 2 -> {
                        b9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b9");
                    }
                    case 3 -> {
                        b9.setBackground(Color.pink);
                        thisUser.LocationPink.add("b9");
                    }
                    case 4 -> {
                        b9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_b9ActionPerformed

    private void c9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c9ActionPerformed
             if (c9.getBackground() == Color.GREEN || c9.getBackground() == Color.BLUE || 
     c9.getBackground() == Color.YELLOW || c9.getBackground() == Color.PINK || c9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c8".equals(previousButtonClicked) && !"c9".equals(previousButtonClicked)
           && !"c10".equals(previousButtonClicked) && !"b9".equals(previousButtonClicked) && !"d9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c9.setBackground(Color.green);
                        thisUser.LocationGreen.add("c9");
                    }
                    case 1 -> {
                        c9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c9");
                    }
                    case 2 -> {
                        c9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c9");
                    }
                    case 3 -> {
                        c9.setBackground(Color.pink);
                        thisUser.LocationPink.add("c9");
                    }
                    case 4 -> {
                        c9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_c9ActionPerformed

    private void d9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d9ActionPerformed
              if (d9.getBackground() == Color.GREEN || d9.getBackground() == Color.BLUE || 
     d9.getBackground() == Color.YELLOW || d9.getBackground() == Color.PINK || d9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d8".equals(previousButtonClicked) && !"d9".equals(previousButtonClicked)
           && !"d10".equals(previousButtonClicked) && !"c9".equals(previousButtonClicked) && !"e9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d9.setBackground(Color.green);
                        thisUser.LocationGreen.add("d9");
                    }
                    case 1 -> {
                        d9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d9");
                    }
                    case 2 -> {
                        d9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d9");
                    }
                    case 3 -> {
                        d9.setBackground(Color.pink);
                        thisUser.LocationPink.add("d9");
                    }
                    case 4 -> {
                        d9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_d9ActionPerformed

    private void e9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e9ActionPerformed
              if (e9.getBackground() == Color.GREEN || e9.getBackground() == Color.BLUE || 
     e9.getBackground() == Color.YELLOW || e9.getBackground() == Color.PINK || e9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e8".equals(previousButtonClicked) && !"e9".equals(previousButtonClicked)
           && !"e10".equals(previousButtonClicked) && !"d9".equals(previousButtonClicked) && !"f9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e9.setBackground(Color.green);
                        thisUser.LocationGreen.add("e9");
                    }
                    case 1 -> {
                        e9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e9");
                    }
                    case 2 -> {
                        e9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e9");
                    }
                    case 3 -> {
                        e9.setBackground(Color.pink);
                        thisUser.LocationPink.add("e9");
                    }
                    case 4 -> {
                        e9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_e9ActionPerformed

    private void f9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f9ActionPerformed
              if (f9.getBackground() == Color.GREEN || f9.getBackground() == Color.BLUE || 
     f9.getBackground() == Color.YELLOW || f9.getBackground() == Color.PINK || f9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f8".equals(previousButtonClicked) && !"f9".equals(previousButtonClicked)
           && !"f10".equals(previousButtonClicked) && !"e9".equals(previousButtonClicked) && !"g9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f9.setBackground(Color.green);
                        thisUser.LocationGreen.add("f9");
                    }
                    case 1 -> {
                        f9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f9");
                    }
                    case 2 -> {
                        f9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f9");
                    }
                    case 3 -> {
                        f9.setBackground(Color.pink);
                        thisUser.LocationPink.add("f9");
                    }
                    case 4 -> {
                        f9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_f9ActionPerformed

    private void g9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g9ActionPerformed
              if (g9.getBackground() == Color.GREEN || g9.getBackground() == Color.BLUE || 
     g9.getBackground() == Color.YELLOW || g9.getBackground() == Color.PINK || g9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g8".equals(previousButtonClicked) && !"g9".equals(previousButtonClicked)
           && !"g10".equals(previousButtonClicked) && !"f9".equals(previousButtonClicked) && !"h9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g9.setBackground(Color.green);
                        thisUser.LocationGreen.add("g9");
                    }
                    case 1 -> {
                        g9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g9");
                    }
                    case 2 -> {
                        g9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g9");
                    }
                    case 3 -> {
                        g9.setBackground(Color.pink);
                        thisUser.LocationPink.add("g9");
                    }
                    case 4 -> {
                        g9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_g9ActionPerformed

    private void h9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h9ActionPerformed
              if (h9.getBackground() == Color.GREEN || h9.getBackground() == Color.BLUE || 
     h9.getBackground() == Color.YELLOW || h9.getBackground() == Color.PINK || h9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h8".equals(previousButtonClicked) && !"h9".equals(previousButtonClicked)
           && !"h10".equals(previousButtonClicked) && !"g9".equals(previousButtonClicked) && !"i9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h9.setBackground(Color.green);
                        thisUser.LocationGreen.add("h9");
                    }
                    case 1 -> {
                        h9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h9");
                    }
                    case 2 -> {
                        h9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h9");
                    }
                    case 3 -> {
                        h9.setBackground(Color.pink);
                        thisUser.LocationPink.add("h9");
                    }
                    case 4 -> {
                        h9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_h9ActionPerformed

    private void i9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i9ActionPerformed
              if (i9.getBackground() == Color.GREEN || i9.getBackground() == Color.BLUE || 
     i9.getBackground() == Color.YELLOW || i9.getBackground() == Color.PINK || i9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i8".equals(previousButtonClicked) && !"i9".equals(previousButtonClicked)
           && !"i10".equals(previousButtonClicked) && !"h9".equals(previousButtonClicked) && !"j9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i9.setBackground(Color.green);
                        thisUser.LocationGreen.add("i9");
                    }
                    case 1 -> {
                        i9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i9");
                    }
                    case 2 -> {
                        i9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i9");
                    }
                    case 3 -> {
                        i9.setBackground(Color.pink);
                        thisUser.LocationPink.add("i9");
                    }
                    case 4 -> {
                        i9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_i9ActionPerformed

    private void j9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j9ActionPerformed
              if (j9.getBackground() == Color.GREEN || j9.getBackground() == Color.BLUE || 
     j9.getBackground() == Color.YELLOW || j9.getBackground() == Color.PINK || j9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j8".equals(previousButtonClicked) && !"j9".equals(previousButtonClicked)
           && !"j10".equals(previousButtonClicked) && !"i9".equals(previousButtonClicked) && !"k9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j9.setBackground(Color.green);
                        thisUser.LocationGreen.add("j9");
                    }
                    case 1 -> {
                        j9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j9");
                    }
                    case 2 -> {
                        j9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j9");
                    }
                    case 3 -> {
                        j9.setBackground(Color.pink);
                        thisUser.LocationPink.add("j9");
                    }
                    case 4 -> {
                        j9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_j9ActionPerformed

    private void k9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k9ActionPerformed
             if (k9.getBackground() == Color.GREEN || k9.getBackground() == Color.BLUE || 
     k9.getBackground() == Color.YELLOW || k9.getBackground() == Color.PINK || k9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k8".equals(previousButtonClicked) && !"k9".equals(previousButtonClicked)
           && !"k10".equals(previousButtonClicked) && !"j9".equals(previousButtonClicked) && !"l9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k9.setBackground(Color.green);
                        thisUser.LocationGreen.add("k9");
                    }
                    case 1 -> {
                        k9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k9");
                    }
                    case 2 -> {
                        k9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k9");
                    }
                    case 3 -> {
                        k9.setBackground(Color.pink);
                        thisUser.LocationPink.add("k9");
                    }
                    case 4 -> {
                        k9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_k9ActionPerformed

    private void l9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l9ActionPerformed
              if (l9.getBackground() == Color.GREEN || l9.getBackground() == Color.BLUE || 
     l9.getBackground() == Color.YELLOW || l9.getBackground() == Color.PINK || l9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l8".equals(previousButtonClicked) && !"l9".equals(previousButtonClicked)
           && !"l10".equals(previousButtonClicked) && !"k9".equals(previousButtonClicked) && !"m9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l9.setBackground(Color.green);
                        thisUser.LocationGreen.add("l9");
                    }
                    case 1 -> {
                        l9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l9");
                    }
                    case 2 -> {
                        l9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l9");
                    }
                    case 3 -> {
                        l9.setBackground(Color.pink);
                        thisUser.LocationPink.add("l9");
                    }
                    case 4 -> {
                        l9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_l9ActionPerformed

    private void m9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m9ActionPerformed
              if (m9.getBackground() == Color.GREEN || m9.getBackground() == Color.BLUE || 
     m9.getBackground() == Color.YELLOW || m9.getBackground() == Color.PINK || m9.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m8".equals(previousButtonClicked) && !"m9".equals(previousButtonClicked)
           && !"m10".equals(previousButtonClicked) && !"l9".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m9";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m9.setBackground(Color.green);
                        thisUser.LocationGreen.add("m9");
                    }
                    case 1 -> {
                        m9.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m9");
                    }
                    case 2 -> {
                        m9.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m9");
                    }
                    case 3 -> {
                        m9.setBackground(Color.pink);
                        thisUser.LocationPink.add("m9");
                    }
                    case 4 -> {
                        m9.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m9");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_m9ActionPerformed

    private void a10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a10ActionPerformed
       
      if (a10.getBackground() == Color.GREEN || a10.getBackground() == Color.BLUE || 
    a10.getBackground() == Color.YELLOW || a10.getBackground() == Color.PINK || a10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a9".equals(previousButtonClicked) && !"a10".equals(previousButtonClicked)
           && !"a11".equals(previousButtonClicked) && !"b10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a10.setBackground(Color.green);
                        thisUser.LocationGreen.add("a10");
                    }
                    case 1 -> {
                        a10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a10");
                    }
                    case 2 -> {
                        a10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a10");
                    }
                    case 3 -> {
                        a10.setBackground(Color.pink);
                        thisUser.LocationPink.add("a10");
                    }
                    case 4 -> {
                        a10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_a10ActionPerformed

    private void b10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b10ActionPerformed
        
      if (b10.getBackground() == Color.GREEN || b10.getBackground() == Color.BLUE || 
    b10.getBackground() == Color.YELLOW || b10.getBackground() == Color.PINK || b10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b9".equals(previousButtonClicked) && !"b10".equals(previousButtonClicked)
           && !"b11".equals(previousButtonClicked) && !"a10".equals(previousButtonClicked) && !"c10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b10.setBackground(Color.green);
                        thisUser.LocationGreen.add("b10");
                    }
                    case 1 -> {
                        b10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b10");
                    }
                    case 2 -> {
                        b10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b10");
                    }
                    case 3 -> {
                        b10.setBackground(Color.pink);
                        thisUser.LocationPink.add("b10");
                    }
                    case 4 -> {
                        b10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_b10ActionPerformed

    private void c10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c10ActionPerformed
        
      if (c10.getBackground() == Color.GREEN || c10.getBackground() == Color.BLUE || 
    c10.getBackground() == Color.YELLOW || c10.getBackground() == Color.PINK || c10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c9".equals(previousButtonClicked) && !"c10".equals(previousButtonClicked)
           && !"c11".equals(previousButtonClicked) && !"b10".equals(previousButtonClicked) && !"d10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c10.setBackground(Color.green);
                        thisUser.LocationGreen.add("c10");
                    }
                    case 1 -> {
                        c10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c10");
                    }
                    case 2 -> {
                        c10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c10");
                    }
                    case 3 -> {
                        c10.setBackground(Color.pink);
                        thisUser.LocationPink.add("c10");
                    }
                    case 4 -> {
                        c10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_c10ActionPerformed

    private void d10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d10ActionPerformed
        
      if (d10.getBackground() == Color.GREEN || d10.getBackground() == Color.BLUE || 
    d10.getBackground() == Color.YELLOW || d10.getBackground() == Color.PINK || d10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d9".equals(previousButtonClicked) && !"d10".equals(previousButtonClicked)
           && !"d11".equals(previousButtonClicked) && !"c10".equals(previousButtonClicked) && !"e10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d10.setBackground(Color.green);
                        thisUser.LocationGreen.add("d10");
                    }
                    case 1 -> {
                        d10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d10");
                    }
                    case 2 -> {
                        d10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d10");
                    }
                    case 3 -> {
                        d10.setBackground(Color.pink);
                        thisUser.LocationPink.add("d10");
                    }
                    case 4 -> {
                        d10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_d10ActionPerformed

    private void e10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e10ActionPerformed
        
      if (e10.getBackground() == Color.GREEN || e10.getBackground() == Color.BLUE || 
    e10.getBackground() == Color.YELLOW || e10.getBackground() == Color.PINK || e10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e9".equals(previousButtonClicked) && !"e10".equals(previousButtonClicked)
           && !"e11".equals(previousButtonClicked) && !"d10".equals(previousButtonClicked) && !"f10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e10.setBackground(Color.green);
                        thisUser.LocationGreen.add("e10");
                    }
                    case 1 -> {
                        e10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e10");
                    }
                    case 2 -> {
                        e10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e10");
                    }
                    case 3 -> {
                        e10.setBackground(Color.pink);
                        thisUser.LocationPink.add("e10");
                    }
                    case 4 -> {
                        e10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_e10ActionPerformed

    private void f10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f10ActionPerformed
        
      if (f10.getBackground() == Color.GREEN || f10.getBackground() == Color.BLUE || 
    f10.getBackground() == Color.YELLOW || f10.getBackground() == Color.PINK || f10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f9".equals(previousButtonClicked) && !"f10".equals(previousButtonClicked)
           && !"f11".equals(previousButtonClicked) && !"e10".equals(previousButtonClicked) && !"g10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f10.setBackground(Color.green);
                        thisUser.LocationGreen.add("f10");
                    }
                    case 1 -> {
                        f10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f10");
                    }
                    case 2 -> {
                        f10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f10");
                    }
                    case 3 -> {
                        f10.setBackground(Color.pink);
                        thisUser.LocationPink.add("f10");
                    }
                    case 4 -> {
                        f10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_f10ActionPerformed

    private void g10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g10ActionPerformed
        
      if (g10.getBackground() == Color.GREEN || g10.getBackground() == Color.BLUE || 
    g10.getBackground() == Color.YELLOW || g10.getBackground() == Color.PINK || g10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g9".equals(previousButtonClicked) && !"g10".equals(previousButtonClicked)
           && !"g11".equals(previousButtonClicked) && !"f10".equals(previousButtonClicked) && !"h10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g10.setBackground(Color.green);
                        thisUser.LocationGreen.add("g10");
                    }
                    case 1 -> {
                        g10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g10");
                    }
                    case 2 -> {
                        g10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g10");
                    }
                    case 3 -> {
                        g10.setBackground(Color.pink);
                        thisUser.LocationPink.add("g10");
                    }
                    case 4 -> {
                        g10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_g10ActionPerformed

    private void h10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h10ActionPerformed
        
      if (h10.getBackground() == Color.GREEN || h10.getBackground() == Color.BLUE || 
    h10.getBackground() == Color.YELLOW || h10.getBackground() == Color.PINK || h10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h9".equals(previousButtonClicked) && !"h10".equals(previousButtonClicked)
           && !"h11".equals(previousButtonClicked) && !"g10".equals(previousButtonClicked) && !"i10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h10.setBackground(Color.green);
                        thisUser.LocationGreen.add("h10");
                    }
                    case 1 -> {
                        h10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h10");
                    }
                    case 2 -> {
                        h10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h10");
                    }
                    case 3 -> {
                        h10.setBackground(Color.pink);
                        thisUser.LocationPink.add("h10");
                    }
                    case 4 -> {
                        h10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_h10ActionPerformed

    private void i10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i10ActionPerformed
        
      if (i10.getBackground() == Color.GREEN || i10.getBackground() == Color.BLUE || 
    i10.getBackground() == Color.YELLOW || i10.getBackground() == Color.PINK || i10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i9".equals(previousButtonClicked) && !"i10".equals(previousButtonClicked)
           && !"i11".equals(previousButtonClicked) && !"h10".equals(previousButtonClicked) && !"j10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i10.setBackground(Color.green);
                        thisUser.LocationGreen.add("i10");
                    }
                    case 1 -> {
                        i10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i10");
                    }
                    case 2 -> {
                        i10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i10");
                    }
                    case 3 -> {
                        i10.setBackground(Color.pink);
                        thisUser.LocationPink.add("i10");
                    }
                    case 4 -> {
                        i10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_i10ActionPerformed

    private void j10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j10ActionPerformed
        
      if (j10.getBackground() == Color.GREEN || j10.getBackground() == Color.BLUE || 
    j10.getBackground() == Color.YELLOW || j10.getBackground() == Color.PINK || j10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j9".equals(previousButtonClicked) && !"j10".equals(previousButtonClicked)
           && !"j11".equals(previousButtonClicked) && !"i10".equals(previousButtonClicked) && !"k10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j10.setBackground(Color.green);
                        thisUser.LocationGreen.add("j10");
                    }
                    case 1 -> {
                        j10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j10");
                    }
                    case 2 -> {
                        j10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j10");
                    }
                    case 3 -> {
                        j10.setBackground(Color.pink);
                        thisUser.LocationPink.add("j10");
                    }
                    case 4 -> {
                        j10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_j10ActionPerformed

    private void k10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k10ActionPerformed
        
      if (k10.getBackground() == Color.GREEN || k10.getBackground() == Color.BLUE || 
    k10.getBackground() == Color.YELLOW || k10.getBackground() == Color.PINK || k10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k9".equals(previousButtonClicked) && !"k10".equals(previousButtonClicked)
           && !"k11".equals(previousButtonClicked) && !"j10".equals(previousButtonClicked) && !"l10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k10.setBackground(Color.green);
                        thisUser.LocationGreen.add("k10");
                    }
                    case 1 -> {
                        k10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k10");
                    }
                    case 2 -> {
                        k10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k10");
                    }
                    case 3 -> {
                        k10.setBackground(Color.pink);
                        thisUser.LocationPink.add("k10");
                    }
                    case 4 -> {
                        k10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_k10ActionPerformed

    private void l10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l10ActionPerformed
        
      if (l10.getBackground() == Color.GREEN || l10.getBackground() == Color.BLUE || 
    l10.getBackground() == Color.YELLOW || l10.getBackground() == Color.PINK || l10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l9".equals(previousButtonClicked) && !"l10".equals(previousButtonClicked)
           && !"l11".equals(previousButtonClicked) && !"k10".equals(previousButtonClicked) && !"m10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l10.setBackground(Color.green);
                        thisUser.LocationGreen.add("l10");
                    }
                    case 1 -> {
                        l10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l10");
                    }
                    case 2 -> {
                        l10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l10");
                    }
                    case 3 -> {
                        l10.setBackground(Color.pink);
                        thisUser.LocationPink.add("l10");
                    }
                    case 4 -> {
                        l10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_l10ActionPerformed

    private void m10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m10ActionPerformed
        
      if (m10.getBackground() == Color.GREEN || m10.getBackground() == Color.BLUE || 
    m10.getBackground() == Color.YELLOW || m10.getBackground() == Color.PINK || m10.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m9".equals(previousButtonClicked) && !"m10".equals(previousButtonClicked)
           && !"m11".equals(previousButtonClicked) && !"l10".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m10";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m10.setBackground(Color.green);
                        thisUser.LocationGreen.add("m10");
                    }
                    case 1 -> {
                        m10.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m10");
                    }
                    case 2 -> {
                        m10.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m10");
                    }
                    case 3 -> {
                        m10.setBackground(Color.pink);
                        thisUser.LocationPink.add("m10");
                    }
                    case 4 -> {
                        m10.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m10");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        
    }//GEN-LAST:event_m10ActionPerformed

    private void a11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a11ActionPerformed
              if (a11.getBackground() == Color.GREEN || a11.getBackground() == Color.BLUE || 
    a11.getBackground() == Color.YELLOW || a11.getBackground() == Color.PINK || a11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a10".equals(previousButtonClicked) && !"a11".equals(previousButtonClicked)
           && !"a12".equals(previousButtonClicked) && !"b11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a11.setBackground(Color.green);
                        thisUser.LocationGreen.add("a11");
                    }
                    case 1 -> {
                        a11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a11");
                    }
                    case 2 -> {
                        a11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a11");
                    }
                    case 3 -> {
                        a11.setBackground(Color.pink);
                        thisUser.LocationPink.add("a11");
                    }
                    case 4 -> {
                        a11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_a11ActionPerformed

    private void b11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b11ActionPerformed
              if (b11.getBackground() == Color.GREEN || b11.getBackground() == Color.BLUE || 
    b11.getBackground() == Color.YELLOW || b11.getBackground() == Color.PINK || b11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b10".equals(previousButtonClicked) && !"b11".equals(previousButtonClicked)
           && !"b12".equals(previousButtonClicked) && !"a11".equals(previousButtonClicked) && !"c11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b11.setBackground(Color.green);
                        thisUser.LocationGreen.add("b11");
                    }
                    case 1 -> {
                        b11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b11");
                    }
                    case 2 -> {
                        b11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b11");
                    }
                    case 3 -> {
                        b11.setBackground(Color.pink);
                        thisUser.LocationPink.add("b11");
                    }
                    case 4 -> {
                        b11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_b11ActionPerformed

    private void c11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c11ActionPerformed
              if (c11.getBackground() == Color.GREEN || c11.getBackground() == Color.BLUE || 
    c11.getBackground() == Color.YELLOW || c11.getBackground() == Color.PINK || c11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c10".equals(previousButtonClicked) && !"c11".equals(previousButtonClicked)
           && !"c12".equals(previousButtonClicked) && !"b11".equals(previousButtonClicked) && !"d11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c11.setBackground(Color.green);
                        thisUser.LocationGreen.add("c11");
                    }
                    case 1 -> {
                        c11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c11");
                    }
                    case 2 -> {
                        c11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c11");
                    }
                    case 3 -> {
                        c11.setBackground(Color.pink);
                        thisUser.LocationPink.add("c11");
                    }
                    case 4 -> {
                        c11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_c11ActionPerformed

    private void d11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d11ActionPerformed
              if (d11.getBackground() == Color.GREEN || d11.getBackground() == Color.BLUE || 
    d11.getBackground() == Color.YELLOW || d11.getBackground() == Color.PINK || d11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d10".equals(previousButtonClicked) && !"d11".equals(previousButtonClicked)
           && !"d12".equals(previousButtonClicked) && !"c11".equals(previousButtonClicked) && !"e11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d11.setBackground(Color.green);
                        thisUser.LocationGreen.add("d11");
                    }
                    case 1 -> {
                        d11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d11");
                    }
                    case 2 -> {
                        d11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d11");
                    }
                    case 3 -> {
                        d11.setBackground(Color.pink);
                        thisUser.LocationPink.add("d11");
                    }
                    case 4 -> {
                        d11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_d11ActionPerformed

    private void e11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e11ActionPerformed
              if (e11.getBackground() == Color.GREEN || e11.getBackground() == Color.BLUE || 
    e11.getBackground() == Color.YELLOW || e11.getBackground() == Color.PINK || e11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e10".equals(previousButtonClicked) && !"e11".equals(previousButtonClicked)
           && !"e12".equals(previousButtonClicked) && !"d11".equals(previousButtonClicked) && !"f11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e11.setBackground(Color.green);
                        thisUser.LocationGreen.add("e11");
                    }
                    case 1 -> {
                        e11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e11");
                    }
                    case 2 -> {
                        e11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e11");
                    }
                    case 3 -> {
                        e11.setBackground(Color.pink);
                        thisUser.LocationPink.add("e11");
                    }
                    case 4 -> {
                        e11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_e11ActionPerformed

    private void f11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f11ActionPerformed
              if (f11.getBackground() == Color.GREEN || f11.getBackground() == Color.BLUE || 
    f11.getBackground() == Color.YELLOW || f11.getBackground() == Color.PINK || f11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f10".equals(previousButtonClicked) && !"f11".equals(previousButtonClicked)
           && !"f12".equals(previousButtonClicked) && !"e11".equals(previousButtonClicked) && !"g11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f11.setBackground(Color.green);
                        thisUser.LocationGreen.add("f11");
                    }
                    case 1 -> {
                        f11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f11");
                    }
                    case 2 -> {
                        f11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f11");
                    }
                    case 3 -> {
                        f11.setBackground(Color.pink);
                        thisUser.LocationPink.add("f11");
                    }
                    case 4 -> {
                        f11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_f11ActionPerformed

    private void g11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g11ActionPerformed
              if (g11.getBackground() == Color.GREEN || g11.getBackground() == Color.BLUE || 
    g11.getBackground() == Color.YELLOW || g11.getBackground() == Color.PINK || g11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g10".equals(previousButtonClicked) && !"g11".equals(previousButtonClicked)
           && !"g12".equals(previousButtonClicked) && !"f11".equals(previousButtonClicked) && !"h11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g11.setBackground(Color.green);
                        thisUser.LocationGreen.add("g11");
                    }
                    case 1 -> {
                        g11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g11");
                    }
                    case 2 -> {
                        g11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g11");
                    }
                    case 3 -> {
                        g11.setBackground(Color.pink);
                        thisUser.LocationPink.add("g11");
                    }
                    case 4 -> {
                        g11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_g11ActionPerformed

    private void h11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h11ActionPerformed
              if (h11.getBackground() == Color.GREEN || h11.getBackground() == Color.BLUE || 
    h11.getBackground() == Color.YELLOW || h11.getBackground() == Color.PINK || h11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h10".equals(previousButtonClicked) && !"h11".equals(previousButtonClicked)
           && !"h12".equals(previousButtonClicked) && !"g11".equals(previousButtonClicked) && !"i11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h11.setBackground(Color.green);
                        thisUser.LocationGreen.add("h11");
                    }
                    case 1 -> {
                        h11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h11");
                    }
                    case 2 -> {
                        h11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h11");
                    }
                    case 3 -> {
                        h11.setBackground(Color.pink);
                        thisUser.LocationPink.add("h11");
                    }
                    case 4 -> {
                        h11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_h11ActionPerformed

    private void i11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i11ActionPerformed
              if (i11.getBackground() == Color.GREEN || i11.getBackground() == Color.BLUE || 
    i11.getBackground() == Color.YELLOW || i11.getBackground() == Color.PINK || i11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i10".equals(previousButtonClicked) && !"i11".equals(previousButtonClicked)
           && !"i12".equals(previousButtonClicked) && !"h11".equals(previousButtonClicked) && !"j11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i11.setBackground(Color.green);
                        thisUser.LocationGreen.add("i11");
                    }
                    case 1 -> {
                        i11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i11");
                    }
                    case 2 -> {
                        i11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i11");
                    }
                    case 3 -> {
                        i11.setBackground(Color.pink);
                        thisUser.LocationPink.add("i11");
                    }
                    case 4 -> {
                        i11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_i11ActionPerformed

    private void j11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j11ActionPerformed
              if (j11.getBackground() == Color.GREEN || j11.getBackground() == Color.BLUE || 
    j11.getBackground() == Color.YELLOW || j11.getBackground() == Color.PINK || j11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j10".equals(previousButtonClicked) && !"j11".equals(previousButtonClicked)
           && !"j12".equals(previousButtonClicked) && !"i11".equals(previousButtonClicked) && !"k11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j11.setBackground(Color.green);
                        thisUser.LocationGreen.add("j11");
                    }
                    case 1 -> {
                        j11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j11");
                    }
                    case 2 -> {
                        j11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j11");
                    }
                    case 3 -> {
                        j11.setBackground(Color.pink);
                        thisUser.LocationPink.add("j11");
                    }
                    case 4 -> {
                        j11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_j11ActionPerformed

    private void k11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k11ActionPerformed
              if (k11.getBackground() == Color.GREEN || k11.getBackground() == Color.BLUE || 
    k11.getBackground() == Color.YELLOW || k11.getBackground() == Color.PINK || k11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k10".equals(previousButtonClicked) && !"k11".equals(previousButtonClicked)
           && !"k12".equals(previousButtonClicked) && !"j11".equals(previousButtonClicked) && !"l11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k11.setBackground(Color.green);
                        thisUser.LocationGreen.add("k11");
                    }
                    case 1 -> {
                        k11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k11");
                    }
                    case 2 -> {
                        k11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k11");
                    }
                    case 3 -> {
                        k11.setBackground(Color.pink);
                        thisUser.LocationPink.add("k11");
                    }
                    case 4 -> {
                        k11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_k11ActionPerformed

    private void l11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l11ActionPerformed
              if (l11.getBackground() == Color.GREEN || l11.getBackground() == Color.BLUE || 
    l11.getBackground() == Color.YELLOW || l11.getBackground() == Color.PINK || l11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l10".equals(previousButtonClicked) && !"l11".equals(previousButtonClicked)
           && !"l12".equals(previousButtonClicked) && !"k11".equals(previousButtonClicked) && !"m11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l11.setBackground(Color.green);
                        thisUser.LocationGreen.add("l11");
                    }
                    case 1 -> {
                        l11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l11");
                    }
                    case 2 -> {
                        l11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l11");
                    }
                    case 3 -> {
                        l11.setBackground(Color.pink);
                        thisUser.LocationPink.add("l11");
                    }
                    case 4 -> {
                        l11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_l11ActionPerformed

    private void m11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m11ActionPerformed
              if (m11.getBackground() == Color.GREEN || m11.getBackground() == Color.BLUE || 
    m11.getBackground() == Color.YELLOW || m11.getBackground() == Color.PINK || m11.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m10".equals(previousButtonClicked) && !"m11".equals(previousButtonClicked)
           && !"m12".equals(previousButtonClicked) && !"l11".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m11";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m11.setBackground(Color.green);
                        thisUser.LocationGreen.add("m11");
                    }
                    case 1 -> {
                        m11.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m11");
                    }
                    case 2 -> {
                        m11.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m11");
                    }
                    case 3 -> {
                        m11.setBackground(Color.pink);
                        thisUser.LocationPink.add("m11");
                    }
                    case 4 -> {
                        m11.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m11");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}


    }//GEN-LAST:event_m11ActionPerformed

    private void a12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a12ActionPerformed
            
      if (a12.getBackground() == Color.GREEN || a12.getBackground() == Color.BLUE || 
    a12.getBackground() == Color.YELLOW || a12.getBackground() == Color.PINK || a12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a11".equals(previousButtonClicked) && !"a12".equals(previousButtonClicked)
           && !"a13".equals(previousButtonClicked) && !"b12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a12.setBackground(Color.green);
                        thisUser.LocationGreen.add("a12");
                    }
                    case 1 -> {
                        a12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a12");
                    }
                    case 2 -> {
                        a12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a12");
                    }
                    case 3 -> {
                        a12.setBackground(Color.pink);
                        thisUser.LocationPink.add("a12");
                    }
                    case 4 -> {
                        a12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_a12ActionPerformed

    private void b12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b12ActionPerformed
            
      if (b12.getBackground() == Color.GREEN || b12.getBackground() == Color.BLUE || 
    b12.getBackground() == Color.YELLOW || b12.getBackground() == Color.PINK || b12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b11".equals(previousButtonClicked) && !"b12".equals(previousButtonClicked)
           && !"b13".equals(previousButtonClicked) && !"a12".equals(previousButtonClicked) && !"c12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b12.setBackground(Color.green);
                        thisUser.LocationGreen.add("b12");
                    }
                    case 1 -> {
                        b12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b12");
                    }
                    case 2 -> {
                        b12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b12");
                    }
                    case 3 -> {
                        b12.setBackground(Color.pink);
                        thisUser.LocationPink.add("b12");
                    }
                    case 4 -> {
                        b12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_b12ActionPerformed

    private void c12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c12ActionPerformed
           
      if (c12.getBackground() == Color.GREEN || c12.getBackground() == Color.BLUE || 
    c12.getBackground() == Color.YELLOW || c12.getBackground() == Color.PINK || c12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c11".equals(previousButtonClicked) && !"c12".equals(previousButtonClicked)
           && !"c13".equals(previousButtonClicked) && !"b12".equals(previousButtonClicked) && !"d12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c12.setBackground(Color.green);
                        thisUser.LocationGreen.add("c12");
                    }
                    case 1 -> {
                        c12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c12");
                    }
                    case 2 -> {
                        c12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c12");
                    }
                    case 3 -> {
                        c12.setBackground(Color.pink);
                        thisUser.LocationPink.add("c12");
                    }
                    case 4 -> {
                        c12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_c12ActionPerformed

    private void d12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d12ActionPerformed
            
      if (d12.getBackground() == Color.GREEN || d12.getBackground() == Color.BLUE || 
    d12.getBackground() == Color.YELLOW || d12.getBackground() == Color.PINK || d12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d11".equals(previousButtonClicked) && !"d12".equals(previousButtonClicked)
           && !"d13".equals(previousButtonClicked) && !"c12".equals(previousButtonClicked) && !"e12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d12.setBackground(Color.green);
                        thisUser.LocationGreen.add("d12");
                    }
                    case 1 -> {
                        d12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d12");
                    }
                    case 2 -> {
                        d12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d12");
                    }
                    case 3 -> {
                        d12.setBackground(Color.pink);
                        thisUser.LocationPink.add("d12");
                    }
                    case 4 -> {
                        d12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_d12ActionPerformed

    private void e12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e12ActionPerformed
            
      if (e12.getBackground() == Color.GREEN || e12.getBackground() == Color.BLUE || 
    e12.getBackground() == Color.YELLOW || e12.getBackground() == Color.PINK || e12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e11".equals(previousButtonClicked) && !"e12".equals(previousButtonClicked)
           && !"e13".equals(previousButtonClicked) && !"d12".equals(previousButtonClicked) && !"f12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e12.setBackground(Color.green);
                        thisUser.LocationGreen.add("e12");
                    }
                    case 1 -> {
                        e12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e12");
                    }
                    case 2 -> {
                        e12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e12");
                    }
                    case 3 -> {
                        e12.setBackground(Color.pink);
                        thisUser.LocationPink.add("e12");
                    }
                    case 4 -> {
                        e12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_e12ActionPerformed

    private void f12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f12ActionPerformed
            
      if (f12.getBackground() == Color.GREEN || f12.getBackground() == Color.BLUE || 
    f12.getBackground() == Color.YELLOW || f12.getBackground() == Color.PINK || f12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f11".equals(previousButtonClicked) && !"f12".equals(previousButtonClicked)
           && !"f13".equals(previousButtonClicked) && !"e12".equals(previousButtonClicked) && !"g12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f12.setBackground(Color.green);
                        thisUser.LocationGreen.add("f12");
                    }
                    case 1 -> {
                        f12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f12");
                    }
                    case 2 -> {
                        f12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f12");
                    }
                    case 3 -> {
                        f12.setBackground(Color.pink);
                        thisUser.LocationPink.add("f12");
                    }
                    case 4 -> {
                        f12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_f12ActionPerformed

    private void g12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g12ActionPerformed
            
      if (g12.getBackground() == Color.GREEN || g12.getBackground() == Color.BLUE || 
    g12.getBackground() == Color.YELLOW || g12.getBackground() == Color.PINK || g12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g11".equals(previousButtonClicked) && !"g12".equals(previousButtonClicked)
           && !"g13".equals(previousButtonClicked) && !"f12".equals(previousButtonClicked) && !"h12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g12.setBackground(Color.green);
                        thisUser.LocationGreen.add("g12");
                    }
                    case 1 -> {
                        g12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g12");
                    }
                    case 2 -> {
                        g12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g12");
                    }
                    case 3 -> {
                        g12.setBackground(Color.pink);
                        thisUser.LocationPink.add("g12");
                    }
                    case 4 -> {
                        g12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_g12ActionPerformed

    private void h12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h12ActionPerformed
            
      if (h12.getBackground() == Color.GREEN || h12.getBackground() == Color.BLUE || 
    h12.getBackground() == Color.YELLOW || h12.getBackground() == Color.PINK || h12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h11".equals(previousButtonClicked) && !"h12".equals(previousButtonClicked)
           && !"h13".equals(previousButtonClicked) && !"g12".equals(previousButtonClicked) && !"i12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h12.setBackground(Color.green);
                        thisUser.LocationGreen.add("h12");
                    }
                    case 1 -> {
                        h12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h12");
                    }
                    case 2 -> {
                        h12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h12");
                    }
                    case 3 -> {
                        h12.setBackground(Color.pink);
                        thisUser.LocationPink.add("h12");
                    }
                    case 4 -> {
                        h12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_h12ActionPerformed

    private void i12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i12ActionPerformed
            
      if (i12.getBackground() == Color.GREEN || i12.getBackground() == Color.BLUE || 
    i12.getBackground() == Color.YELLOW || i12.getBackground() == Color.PINK || i12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i11".equals(previousButtonClicked) && !"i12".equals(previousButtonClicked)
           && !"i13".equals(previousButtonClicked) && !"h12".equals(previousButtonClicked) && !"j12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i12.setBackground(Color.green);
                        thisUser.LocationGreen.add("i12");
                    }
                    case 1 -> {
                        i12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i12");
                    }
                    case 2 -> {
                        i12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i12");
                    }
                    case 3 -> {
                        i12.setBackground(Color.pink);
                        thisUser.LocationPink.add("i12");
                    }
                    case 4 -> {
                        i12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_i12ActionPerformed

    private void j12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j12ActionPerformed
            
      if (j12.getBackground() == Color.GREEN || j12.getBackground() == Color.BLUE || 
    j12.getBackground() == Color.YELLOW || j12.getBackground() == Color.PINK || j12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j11".equals(previousButtonClicked) && !"j12".equals(previousButtonClicked)
           && !"j13".equals(previousButtonClicked) && !"i12".equals(previousButtonClicked) && !"k12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j12.setBackground(Color.green);
                        thisUser.LocationGreen.add("j12");
                    }
                    case 1 -> {
                        j12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j12");
                    }
                    case 2 -> {
                        j12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j12");
                    }
                    case 3 -> {
                        j12.setBackground(Color.pink);
                        thisUser.LocationPink.add("j12");
                    }
                    case 4 -> {
                        j12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_j12ActionPerformed

    private void k12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k12ActionPerformed
           
      if (k12.getBackground() == Color.GREEN || k12.getBackground() == Color.BLUE || 
    k12.getBackground() == Color.YELLOW || k12.getBackground() == Color.PINK || k12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k11".equals(previousButtonClicked) && !"k12".equals(previousButtonClicked)
           && !"k13".equals(previousButtonClicked) && !"j12".equals(previousButtonClicked) && !"l12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k12.setBackground(Color.green);
                        thisUser.LocationGreen.add("k12");
                    }
                    case 1 -> {
                        k12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k12");
                    }
                    case 2 -> {
                        k12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k12");
                    }
                    case 3 -> {
                        k12.setBackground(Color.pink);
                        thisUser.LocationPink.add("k12");
                    }
                    case 4 -> {
                        k12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_k12ActionPerformed

    private void l12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l12ActionPerformed
            
      if (l12.getBackground() == Color.GREEN || l12.getBackground() == Color.BLUE || 
    l12.getBackground() == Color.YELLOW || l12.getBackground() == Color.PINK || l12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l11".equals(previousButtonClicked) && !"l12".equals(previousButtonClicked)
           && !"l13".equals(previousButtonClicked) && !"k12".equals(previousButtonClicked) && !"m12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l12.setBackground(Color.green);
                        thisUser.LocationGreen.add("l12");
                    }
                    case 1 -> {
                        l12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l12");
                    }
                    case 2 -> {
                        l12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l12");
                    }
                    case 3 -> {
                        l12.setBackground(Color.pink);
                        thisUser.LocationPink.add("l12");
                    }
                    case 4 -> {
                        l12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_l12ActionPerformed

    private void m12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m12ActionPerformed
            
      if (m12.getBackground() == Color.GREEN || m12.getBackground() == Color.BLUE || 
    m12.getBackground() == Color.YELLOW || m12.getBackground() == Color.PINK || m12.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m11".equals(previousButtonClicked) && !"m12".equals(previousButtonClicked)
           && !"m13".equals(previousButtonClicked) && !"l12".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m12";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m12.setBackground(Color.green);
                        thisUser.LocationGreen.add("m12");
                    }
                    case 1 -> {
                        m12.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m12");
                    }
                    case 2 -> {
                        m12.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m12");
                    }
                    case 3 -> {
                        m12.setBackground(Color.pink);
                        thisUser.LocationPink.add("m12");
                    }
                    case 4 -> {
                        m12.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m12");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_m12ActionPerformed

    private void a13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a13ActionPerformed
           if (a13.getBackground() == Color.GREEN || a13.getBackground() == Color.BLUE || 
    a13.getBackground() == Color.YELLOW || a13.getBackground() == Color.PINK || a13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a12".equals(previousButtonClicked) && !"a13".equals(previousButtonClicked)
           && !"a14".equals(previousButtonClicked) && !"b13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a13.setBackground(Color.green);
                        thisUser.LocationGreen.add("a13");
                    }
                    case 1 -> {
                        a13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a13");
                    }
                    case 2 -> {
                        a13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a13");
                    }
                    case 3 -> {
                        a13.setBackground(Color.pink);
                        thisUser.LocationPink.add("a13");
                    }
                    case 4 -> {
                        a13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_a13ActionPerformed

    private void b13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b13ActionPerformed
           if (b13.getBackground() == Color.GREEN || b13.getBackground() == Color.BLUE || 
    b13.getBackground() == Color.YELLOW || b13.getBackground() == Color.PINK || b13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b12".equals(previousButtonClicked) && !"b13".equals(previousButtonClicked)
           && !"b14".equals(previousButtonClicked) && !"a13".equals(previousButtonClicked) && !"c13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b13.setBackground(Color.green);
                        thisUser.LocationGreen.add("b13");
                    }
                    case 1 -> {
                        b13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b13");
                    }
                    case 2 -> {
                        b13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b13");
                    }
                    case 3 -> {
                        b13.setBackground(Color.pink);
                        thisUser.LocationPink.add("b13");
                    }
                    case 4 -> {
                        b13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_b13ActionPerformed

    private void c13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c13ActionPerformed
           if (c13.getBackground() == Color.GREEN || c13.getBackground() == Color.BLUE || 
    c13.getBackground() == Color.YELLOW || c13.getBackground() == Color.PINK || c13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c12".equals(previousButtonClicked) && !"c13".equals(previousButtonClicked)
           && !"c14".equals(previousButtonClicked) && !"b13".equals(previousButtonClicked) && !"d13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c13.setBackground(Color.green);
                        thisUser.LocationGreen.add("c13");
                    }
                    case 1 -> {
                        c13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c13");
                    }
                    case 2 -> {
                        c13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c13");
                    }
                    case 3 -> {
                        c13.setBackground(Color.pink);
                        thisUser.LocationPink.add("c13");
                    }
                    case 4 -> {
                        c13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_c13ActionPerformed

    private void d13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d13ActionPerformed
           if (d13.getBackground() == Color.GREEN || d13.getBackground() == Color.BLUE || 
    d13.getBackground() == Color.YELLOW || d13.getBackground() == Color.PINK || d13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d12".equals(previousButtonClicked) && !"d13".equals(previousButtonClicked)
           && !"d14".equals(previousButtonClicked) && !"c13".equals(previousButtonClicked) && !"e13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d13.setBackground(Color.green);
                        thisUser.LocationGreen.add("d13");
                    }
                    case 1 -> {
                        d13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d13");
                    }
                    case 2 -> {
                        d13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d13");
                    }
                    case 3 -> {
                        d13.setBackground(Color.pink);
                        thisUser.LocationPink.add("d13");
                    }
                    case 4 -> {
                        d13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_d13ActionPerformed

    private void e13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e13ActionPerformed
           if (e13.getBackground() == Color.GREEN || e13.getBackground() == Color.BLUE || 
    e13.getBackground() == Color.YELLOW || e13.getBackground() == Color.PINK || e13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e12".equals(previousButtonClicked) && !"e13".equals(previousButtonClicked)
           && !"e14".equals(previousButtonClicked) && !"d13".equals(previousButtonClicked) && !"f13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e13.setBackground(Color.green);
                        thisUser.LocationGreen.add("e13");
                    }
                    case 1 -> {
                        e13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e13");
                    }
                    case 2 -> {
                        e13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e13");
                    }
                    case 3 -> {
                        e13.setBackground(Color.pink);
                        thisUser.LocationPink.add("e13");
                    }
                    case 4 -> {
                        e13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_e13ActionPerformed

    private void f13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f13ActionPerformed
           if (f13.getBackground() == Color.GREEN || f13.getBackground() == Color.BLUE || 
    f13.getBackground() == Color.YELLOW || f13.getBackground() == Color.PINK || f13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f12".equals(previousButtonClicked) && !"f13".equals(previousButtonClicked)
           && !"f14".equals(previousButtonClicked) && !"e13".equals(previousButtonClicked) && !"g13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f13.setBackground(Color.green);
                        thisUser.LocationGreen.add("f13");
                    }
                    case 1 -> {
                        f13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f13");
                    }
                    case 2 -> {
                        f13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f13");
                    }
                    case 3 -> {
                        f13.setBackground(Color.pink);
                        thisUser.LocationPink.add("f13");
                    }
                    case 4 -> {
                        f13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_f13ActionPerformed

    private void g13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g13ActionPerformed
           if (g13.getBackground() == Color.GREEN || g13.getBackground() == Color.BLUE || 
    g13.getBackground() == Color.YELLOW || g13.getBackground() == Color.PINK || g13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g12".equals(previousButtonClicked) && !"g13".equals(previousButtonClicked)
           && !"g14".equals(previousButtonClicked) && !"f13".equals(previousButtonClicked) && !"h13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g13.setBackground(Color.green);
                        thisUser.LocationGreen.add("g13");
                    }
                    case 1 -> {
                        g13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g13");
                    }
                    case 2 -> {
                        g13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g13");
                    }
                    case 3 -> {
                        g13.setBackground(Color.pink);
                        thisUser.LocationPink.add("g13");
                    }
                    case 4 -> {
                        g13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_g13ActionPerformed

    private void h13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h13ActionPerformed
           if (h13.getBackground() == Color.GREEN || h13.getBackground() == Color.BLUE || 
    h13.getBackground() == Color.YELLOW || h13.getBackground() == Color.PINK || h13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h12".equals(previousButtonClicked) && !"h13".equals(previousButtonClicked)
           && !"h14".equals(previousButtonClicked) && !"g13".equals(previousButtonClicked) && !"i13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h13.setBackground(Color.green);
                        thisUser.LocationGreen.add("h13");
                    }
                    case 1 -> {
                        h13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h13");
                    }
                    case 2 -> {
                        h13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h13");
                    }
                    case 3 -> {
                        h13.setBackground(Color.pink);
                        thisUser.LocationPink.add("h13");
                    }
                    case 4 -> {
                        h13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_h13ActionPerformed

    private void i13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i13ActionPerformed
           if (i13.getBackground() == Color.GREEN || i13.getBackground() == Color.BLUE || 
    i13.getBackground() == Color.YELLOW || i13.getBackground() == Color.PINK || i13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i12".equals(previousButtonClicked) && !"i13".equals(previousButtonClicked)
           && !"i14".equals(previousButtonClicked) && !"h13".equals(previousButtonClicked) && !"j13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i13.setBackground(Color.green);
                        thisUser.LocationGreen.add("i13");
                    }
                    case 1 -> {
                        i13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i13");
                    }
                    case 2 -> {
                        i13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i13");
                    }
                    case 3 -> {
                        i13.setBackground(Color.pink);
                        thisUser.LocationPink.add("i13");
                    }
                    case 4 -> {
                        i13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_i13ActionPerformed

    private void j13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j13ActionPerformed
           if (j13.getBackground() == Color.GREEN || j13.getBackground() == Color.BLUE || 
    j13.getBackground() == Color.YELLOW || j13.getBackground() == Color.PINK || j13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j12".equals(previousButtonClicked) && !"j13".equals(previousButtonClicked)
           && !"j14".equals(previousButtonClicked) && !"i13".equals(previousButtonClicked) && !"k13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j13.setBackground(Color.green);
                        thisUser.LocationGreen.add("j13");
                    }
                    case 1 -> {
                        j13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j13");
                    }
                    case 2 -> {
                        j13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j13");
                    }
                    case 3 -> {
                        j13.setBackground(Color.pink);
                        thisUser.LocationPink.add("j13");
                    }
                    case 4 -> {
                        j13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_j13ActionPerformed

    private void k13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k13ActionPerformed
           if (k13.getBackground() == Color.GREEN || k13.getBackground() == Color.BLUE || 
    k13.getBackground() == Color.YELLOW || k13.getBackground() == Color.PINK || k13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k12".equals(previousButtonClicked) && !"k13".equals(previousButtonClicked)
           && !"k14".equals(previousButtonClicked) && !"j13".equals(previousButtonClicked) && !"l13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k13.setBackground(Color.green);
                        thisUser.LocationGreen.add("k13");
                    }
                    case 1 -> {
                        k13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k13");
                    }
                    case 2 -> {
                        k13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k13");
                    }
                    case 3 -> {
                        k13.setBackground(Color.pink);
                        thisUser.LocationPink.add("k13");
                    }
                    case 4 -> {
                        k13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_k13ActionPerformed

    private void l13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l13ActionPerformed
           if (l13.getBackground() == Color.GREEN || l13.getBackground() == Color.BLUE || 
    l13.getBackground() == Color.YELLOW || l13.getBackground() == Color.PINK || l13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l12".equals(previousButtonClicked) && !"l13".equals(previousButtonClicked)
           && !"l14".equals(previousButtonClicked) && !"k13".equals(previousButtonClicked) && !"m13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l13.setBackground(Color.green);
                        thisUser.LocationGreen.add("l13");
                    }
                    case 1 -> {
                        l13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l13");
                    }
                    case 2 -> {
                        l13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l13");
                    }
                    case 3 -> {
                        l13.setBackground(Color.pink);
                        thisUser.LocationPink.add("l13");
                    }
                    case 4 -> {
                        l13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_l13ActionPerformed

    private void m13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m13ActionPerformed
           if (m13.getBackground() == Color.GREEN || m13.getBackground() == Color.BLUE || 
    m13.getBackground() == Color.YELLOW || m13.getBackground() == Color.PINK || m13.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m12".equals(previousButtonClicked) && !"m13".equals(previousButtonClicked)
           && !"m14".equals(previousButtonClicked) && !"l13".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m13";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m13.setBackground(Color.green);
                        thisUser.LocationGreen.add("m13");
                    }
                    case 1 -> {
                        m13.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m13");
                    }
                    case 2 -> {
                        m13.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m13");
                    }
                    case 3 -> {
                        m13.setBackground(Color.pink);
                        thisUser.LocationPink.add("m13");
                    }
                    case 4 -> {
                        m13.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m13");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}



    }//GEN-LAST:event_m13ActionPerformed

    private void a14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a14ActionPerformed
         if (a14.getBackground() == Color.GREEN || a14.getBackground() == Color.BLUE || 
    a14.getBackground() == Color.YELLOW || a14.getBackground() == Color.PINK || a14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a13".equals(previousButtonClicked) && !"a14".equals(previousButtonClicked)
           && !"a15".equals(previousButtonClicked) && !"b14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a14.setBackground(Color.green);
                        thisUser.LocationGreen.add("a14");
                    }
                    case 1 -> {
                        a14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a14");
                    }
                    case 2 -> {
                        a14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a14");
                    }
                    case 3 -> {
                        a14.setBackground(Color.pink);
                        thisUser.LocationPink.add("a14");
                    }
                    case 4 -> {
                        a14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a14ActionPerformed

    private void b14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b14ActionPerformed
        if (b14.getBackground() == Color.GREEN || b14.getBackground() == Color.BLUE || 
    b14.getBackground() == Color.YELLOW || b14.getBackground() == Color.PINK || b14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b13".equals(previousButtonClicked) && !"b14".equals(previousButtonClicked)
           && !"b15".equals(previousButtonClicked) && !"a14".equals(previousButtonClicked) && !"c14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b14.setBackground(Color.green);
                        thisUser.LocationGreen.add("b14");
                    }
                    case 1 -> {
                        b14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b14");
                    }
                    case 2 -> {
                        b14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b14");
                    }
                    case 3 -> {
                        b14.setBackground(Color.pink);
                        thisUser.LocationPink.add("b14");
                    }
                    case 4 -> {
                        b14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b14ActionPerformed

    private void c14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c14ActionPerformed
         if (c14.getBackground() == Color.GREEN || c14.getBackground() == Color.BLUE || 
    c14.getBackground() == Color.YELLOW || c14.getBackground() == Color.PINK || c14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c13".equals(previousButtonClicked) && !"c14".equals(previousButtonClicked)
           && !"c15".equals(previousButtonClicked) && !"b14".equals(previousButtonClicked) && !"d14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c14.setBackground(Color.green);
                        thisUser.LocationGreen.add("c14");
                    }
                    case 1 -> {
                        c14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c14");
                    }
                    case 2 -> {
                        c14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c14");
                    }
                    case 3 -> {
                        c14.setBackground(Color.pink);
                        thisUser.LocationPink.add("c14");
                    }
                    case 4 -> {
                        c14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c14ActionPerformed

    private void d14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d14ActionPerformed
         if (d14.getBackground() == Color.GREEN || d14.getBackground() == Color.BLUE || 
    d14.getBackground() == Color.YELLOW || d14.getBackground() == Color.PINK || d14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d13".equals(previousButtonClicked) && !"d14".equals(previousButtonClicked)
           && !"d15".equals(previousButtonClicked) && !"c14".equals(previousButtonClicked) && !"e14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d14.setBackground(Color.green);
                        thisUser.LocationGreen.add("d14");
                    }
                    case 1 -> {
                        d14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d14");
                    }
                    case 2 -> {
                        d14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d14");
                    }
                    case 3 -> {
                        d14.setBackground(Color.pink);
                        thisUser.LocationPink.add("d14");
                    }
                    case 4 -> {
                        d14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d14ActionPerformed

    private void e14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e14ActionPerformed
         if (e14.getBackground() == Color.GREEN || e14.getBackground() == Color.BLUE || 
    e14.getBackground() == Color.YELLOW || e14.getBackground() == Color.PINK || e14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e13".equals(previousButtonClicked) && !"e14".equals(previousButtonClicked)
           && !"e15".equals(previousButtonClicked) && !"d14".equals(previousButtonClicked) && !"f14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e14.setBackground(Color.green);
                        thisUser.LocationGreen.add("e14");
                    }
                    case 1 -> {
                        e14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e14");
                    }
                    case 2 -> {
                        e14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e14");
                    }
                    case 3 -> {
                        e14.setBackground(Color.pink);
                        thisUser.LocationPink.add("e14");
                    }
                    case 4 -> {
                        e14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e14ActionPerformed

    private void f14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f14ActionPerformed
         if (f14.getBackground() == Color.GREEN || f14.getBackground() == Color.BLUE || 
    f14.getBackground() == Color.YELLOW || f14.getBackground() == Color.PINK || f14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f13".equals(previousButtonClicked) && !"f14".equals(previousButtonClicked)
           && !"f15".equals(previousButtonClicked) && !"e14".equals(previousButtonClicked) && !"g14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f14.setBackground(Color.green);
                        thisUser.LocationGreen.add("f14");
                    }
                    case 1 -> {
                        f14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f14");
                    }
                    case 2 -> {
                        f14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f14");
                    }
                    case 3 -> {
                        f14.setBackground(Color.pink);
                        thisUser.LocationPink.add("f14");
                    }
                    case 4 -> {
                        f14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f14ActionPerformed

    private void g14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g14ActionPerformed
         if (g14.getBackground() == Color.GREEN || g14.getBackground() == Color.BLUE || 
    g14.getBackground() == Color.YELLOW || g14.getBackground() == Color.PINK || g14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g13".equals(previousButtonClicked) && !"g14".equals(previousButtonClicked)
           && !"g15".equals(previousButtonClicked) && !"f14".equals(previousButtonClicked) && !"h14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g14.setBackground(Color.green);
                        thisUser.LocationGreen.add("g14");
                    }
                    case 1 -> {
                        g14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g14");
                    }
                    case 2 -> {
                        g14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g14");
                    }
                    case 3 -> {
                        g14.setBackground(Color.pink);
                        thisUser.LocationPink.add("g14");
                    }
                    case 4 -> {
                        g14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g14ActionPerformed

    private void h14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h14ActionPerformed
         if (h14.getBackground() == Color.GREEN || h14.getBackground() == Color.BLUE || 
    h14.getBackground() == Color.YELLOW || h14.getBackground() == Color.PINK || h14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h13".equals(previousButtonClicked) && !"h14".equals(previousButtonClicked)
           && !"h15".equals(previousButtonClicked) && !"g14".equals(previousButtonClicked) && !"i14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h14.setBackground(Color.green);
                        thisUser.LocationGreen.add("h14");
                    }
                    case 1 -> {
                        h14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h14");
                    }
                    case 2 -> {
                        h14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h14");
                    }
                    case 3 -> {
                        h14.setBackground(Color.pink);
                        thisUser.LocationPink.add("h14");
                    }
                    case 4 -> {
                        h14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h14ActionPerformed

    private void i14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i14ActionPerformed
         if (i14.getBackground() == Color.GREEN || i14.getBackground() == Color.BLUE || 
    i14.getBackground() == Color.YELLOW || i14.getBackground() == Color.PINK || i14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i13".equals(previousButtonClicked) && !"i14".equals(previousButtonClicked)
           && !"i15".equals(previousButtonClicked) && !"h14".equals(previousButtonClicked) && !"j14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i14.setBackground(Color.green);
                        thisUser.LocationGreen.add("i14");
                    }
                    case 1 -> {
                        i14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i14");
                    }
                    case 2 -> {
                        i14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i14");
                    }
                    case 3 -> {
                        i14.setBackground(Color.pink);
                        thisUser.LocationPink.add("i14");
                    }
                    case 4 -> {
                        i14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i14ActionPerformed

    private void j14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j14ActionPerformed
       if (j14.getBackground() == Color.GREEN || j14.getBackground() == Color.BLUE || 
    j14.getBackground() == Color.YELLOW || j14.getBackground() == Color.PINK || j14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j13".equals(previousButtonClicked) && !"j14".equals(previousButtonClicked)
           && !"j15".equals(previousButtonClicked) && !"i14".equals(previousButtonClicked) && !"k14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j14.setBackground(Color.green);
                        thisUser.LocationGreen.add("j14");
                    }
                    case 1 -> {
                        j14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j14");
                    }
                    case 2 -> {
                        j14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j14");
                    }
                    case 3 -> {
                        j14.setBackground(Color.pink);
                        thisUser.LocationPink.add("j14");
                    }
                    case 4 -> {
                        j14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j14ActionPerformed

    private void k14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k14ActionPerformed
         if (k14.getBackground() == Color.GREEN || k14.getBackground() == Color.BLUE || 
    k14.getBackground() == Color.YELLOW || k14.getBackground() == Color.PINK || k14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k13".equals(previousButtonClicked) && !"k14".equals(previousButtonClicked)
           && !"k15".equals(previousButtonClicked) && !"j14".equals(previousButtonClicked) && !"l14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k14.setBackground(Color.green);
                        thisUser.LocationGreen.add("k14");
                    }
                    case 1 -> {
                        k14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k14");
                    }
                    case 2 -> {
                        k14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k14");
                    }
                    case 3 -> {
                        k14.setBackground(Color.pink);
                        thisUser.LocationPink.add("k14");
                    }
                    case 4 -> {
                        k14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k14ActionPerformed

    private void l14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l14ActionPerformed
         if (l14.getBackground() == Color.GREEN || l14.getBackground() == Color.BLUE || 
    l14.getBackground() == Color.YELLOW || l14.getBackground() == Color.PINK || l14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l13".equals(previousButtonClicked) && !"l14".equals(previousButtonClicked)
           && !"l15".equals(previousButtonClicked) && !"k14".equals(previousButtonClicked) && !"m14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l14.setBackground(Color.green);
                        thisUser.LocationGreen.add("l14");
                    }
                    case 1 -> {
                        l14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l14");
                    }
                    case 2 -> {
                        l14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l14");
                    }
                    case 3 -> {
                        l14.setBackground(Color.pink);
                        thisUser.LocationPink.add("l14");
                    }
                    case 4 -> {
                        l14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l14ActionPerformed

    private void m14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m14ActionPerformed
        if (m14.getBackground() == Color.GREEN || m14.getBackground() == Color.BLUE || 
    m14.getBackground() == Color.YELLOW || m14.getBackground() == Color.PINK || m14.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m13".equals(previousButtonClicked) && !"m14".equals(previousButtonClicked)
           && !"m15".equals(previousButtonClicked) && !"l14".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m14";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m14.setBackground(Color.green);
                        thisUser.LocationGreen.add("m14");
                    }
                    case 1 -> {
                        m14.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m14");
                    }
                    case 2 -> {
                        m14.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m14");
                    }
                    case 3 -> {
                        m14.setBackground(Color.pink);
                        thisUser.LocationPink.add("m14");
                    }
                    case 4 -> {
                        m14.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m14");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m14ActionPerformed

    private void a15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a15ActionPerformed
        if (a15.getBackground() == Color.GREEN || a15.getBackground() == Color.BLUE || 
    a15.getBackground() == Color.YELLOW || a15.getBackground() == Color.PINK || a15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a14".equals(previousButtonClicked) && !"a15".equals(previousButtonClicked)
           && !"a16".equals(previousButtonClicked) && !"b15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a15.setBackground(Color.green);
                        thisUser.LocationGreen.add("a15");
                    }
                    case 1 -> {
                        a15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a15");
                    }
                    case 2 -> {
                        a15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a15");
                    }
                    case 3 -> {
                        a15.setBackground(Color.pink);
                        thisUser.LocationPink.add("a15");
                    }
                    case 4 -> {
                        a15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a15ActionPerformed

    private void b15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b15ActionPerformed
         if (b15.getBackground() == Color.GREEN || b15.getBackground() == Color.BLUE || 
    b15.getBackground() == Color.YELLOW || b15.getBackground() == Color.PINK || b15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b14".equals(previousButtonClicked) && !"b15".equals(previousButtonClicked)
           && !"b16".equals(previousButtonClicked) && !"a15".equals(previousButtonClicked) && !"c15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b15.setBackground(Color.green);
                        thisUser.LocationGreen.add("b15");
                    }
                    case 1 -> {
                        b15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b15");
                    }
                    case 2 -> {
                        b15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b15");
                    }
                    case 3 -> {
                        b15.setBackground(Color.pink);
                        thisUser.LocationPink.add("b15");
                    }
                    case 4 -> {
                        b15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b15ActionPerformed

    private void c15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c15ActionPerformed
         if (c15.getBackground() == Color.GREEN || c15.getBackground() == Color.BLUE || 
    c15.getBackground() == Color.YELLOW || c15.getBackground() == Color.PINK || c15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c14".equals(previousButtonClicked) && !"c15".equals(previousButtonClicked)
           && !"c16".equals(previousButtonClicked) && !"b15".equals(previousButtonClicked) && !"d15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c15.setBackground(Color.green);
                        thisUser.LocationGreen.add("c15");
                    }
                    case 1 -> {
                        c15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c15");
                    }
                    case 2 -> {
                        c15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c15");
                    }
                    case 3 -> {
                        c15.setBackground(Color.pink);
                        thisUser.LocationPink.add("c15");
                    }
                    case 4 -> {
                        c15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c15ActionPerformed

    private void d15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d15ActionPerformed
         if (d15.getBackground() == Color.GREEN || d15.getBackground() == Color.BLUE || 
    d15.getBackground() == Color.YELLOW || d15.getBackground() == Color.PINK || d15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d14".equals(previousButtonClicked) && !"d15".equals(previousButtonClicked)
           && !"d16".equals(previousButtonClicked) && !"c15".equals(previousButtonClicked) && !"e15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d15.setBackground(Color.green);
                        thisUser.LocationGreen.add("d15");
                    }
                    case 1 -> {
                        d15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d15");
                    }
                    case 2 -> {
                        d15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d15");
                    }
                    case 3 -> {
                        d15.setBackground(Color.pink);
                        thisUser.LocationPink.add("d15");
                    }
                    case 4 -> {
                        d15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d15ActionPerformed

    private void e15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e15ActionPerformed
         if (e15.getBackground() == Color.GREEN || e15.getBackground() == Color.BLUE || 
    e15.getBackground() == Color.YELLOW || e15.getBackground() == Color.PINK || e15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e14".equals(previousButtonClicked) && !"e15".equals(previousButtonClicked)
           && !"e16".equals(previousButtonClicked) && !"d15".equals(previousButtonClicked) && !"f15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e15.setBackground(Color.green);
                        thisUser.LocationGreen.add("e15");
                    }
                    case 1 -> {
                        e15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e15");
                    }
                    case 2 -> {
                        e15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e15");
                    }
                    case 3 -> {
                        e15.setBackground(Color.pink);
                        thisUser.LocationPink.add("e15");
                    }
                    case 4 -> {
                        e15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e15ActionPerformed

    private void f15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f15ActionPerformed
         if (f15.getBackground() == Color.GREEN || f15.getBackground() == Color.BLUE || 
    f15.getBackground() == Color.YELLOW || f15.getBackground() == Color.PINK || f15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f14".equals(previousButtonClicked) && !"f15".equals(previousButtonClicked)
           && !"f16".equals(previousButtonClicked) && !"e15".equals(previousButtonClicked) && !"g15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f15.setBackground(Color.green);
                        thisUser.LocationGreen.add("f15");
                    }
                    case 1 -> {
                        f15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f15");
                    }
                    case 2 -> {
                        f15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f15");
                    }
                    case 3 -> {
                        f15.setBackground(Color.pink);
                        thisUser.LocationPink.add("f15");
                    }
                    case 4 -> {
                        f15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f15ActionPerformed

    private void g15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g15ActionPerformed
         if (g15.getBackground() == Color.GREEN || g15.getBackground() == Color.BLUE || 
    g15.getBackground() == Color.YELLOW || g15.getBackground() == Color.PINK || g15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g14".equals(previousButtonClicked) && !"g15".equals(previousButtonClicked)
           && !"g16".equals(previousButtonClicked) && !"f15".equals(previousButtonClicked) && !"h15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g15.setBackground(Color.green);
                        thisUser.LocationGreen.add("g15");
                    }
                    case 1 -> {
                        g15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g15");
                    }
                    case 2 -> {
                        g15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g15");
                    }
                    case 3 -> {
                        g15.setBackground(Color.pink);
                        thisUser.LocationPink.add("g15");
                    }
                    case 4 -> {
                        g15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g15ActionPerformed

    private void h15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h15ActionPerformed
         if (h15.getBackground() == Color.GREEN || h15.getBackground() == Color.BLUE || 
    h15.getBackground() == Color.YELLOW || h15.getBackground() == Color.PINK || h15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h14".equals(previousButtonClicked) && !"h15".equals(previousButtonClicked)
           && !"h16".equals(previousButtonClicked) && !"g15".equals(previousButtonClicked) && !"i15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h15.setBackground(Color.green);
                        thisUser.LocationGreen.add("h15");
                    }
                    case 1 -> {
                        h15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h15");
                    }
                    case 2 -> {
                        h15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h15");
                    }
                    case 3 -> {
                        h15.setBackground(Color.pink);
                        thisUser.LocationPink.add("h15");
                    }
                    case 4 -> {
                        h15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h15ActionPerformed

    private void i15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i15ActionPerformed
         if (i15.getBackground() == Color.GREEN || i15.getBackground() == Color.BLUE || 
    i15.getBackground() == Color.YELLOW || i15.getBackground() == Color.PINK || i15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i14".equals(previousButtonClicked) && !"i15".equals(previousButtonClicked)
           && !"i16".equals(previousButtonClicked) && !"h15".equals(previousButtonClicked) && !"j15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i15.setBackground(Color.green);
                        thisUser.LocationGreen.add("i15");
                    }
                    case 1 -> {
                        i15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i15");
                    }
                    case 2 -> {
                        i15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i15");
                    }
                    case 3 -> {
                        i15.setBackground(Color.pink);
                        thisUser.LocationPink.add("i15");
                    }
                    case 4 -> {
                        i15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i15ActionPerformed

    private void j15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j15ActionPerformed
         if (j15.getBackground() == Color.GREEN || j15.getBackground() == Color.BLUE || 
    j15.getBackground() == Color.YELLOW || j15.getBackground() == Color.PINK || j15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j14".equals(previousButtonClicked) && !"j15".equals(previousButtonClicked)
           && !"j16".equals(previousButtonClicked) && !"i15".equals(previousButtonClicked) && !"k15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j15.setBackground(Color.green);
                        thisUser.LocationGreen.add("j15");
                    }
                    case 1 -> {
                        j15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j15");
                    }
                    case 2 -> {
                        j15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j15");
                    }
                    case 3 -> {
                        j15.setBackground(Color.pink);
                        thisUser.LocationPink.add("j15");
                    }
                    case 4 -> {
                        j15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j15ActionPerformed

    private void k15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k15ActionPerformed
         if (k15.getBackground() == Color.GREEN || k15.getBackground() == Color.BLUE || 
    k15.getBackground() == Color.YELLOW || k15.getBackground() == Color.PINK || k15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k14".equals(previousButtonClicked) && !"k15".equals(previousButtonClicked)
           && !"k16".equals(previousButtonClicked) && !"j15".equals(previousButtonClicked) && !"l15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k15.setBackground(Color.green);
                        thisUser.LocationGreen.add("k15");
                    }
                    case 1 -> {
                        k15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k15");
                    }
                    case 2 -> {
                        k15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k15");
                    }
                    case 3 -> {
                        k15.setBackground(Color.pink);
                        thisUser.LocationPink.add("k15");
                    }
                    case 4 -> {
                        k15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k15ActionPerformed

    private void l15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l15ActionPerformed
         if (l15.getBackground() == Color.GREEN || l15.getBackground() == Color.BLUE || 
    l15.getBackground() == Color.YELLOW || l15.getBackground() == Color.PINK || l15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l14".equals(previousButtonClicked) && !"l15".equals(previousButtonClicked)
           && !"l16".equals(previousButtonClicked) && !"k15".equals(previousButtonClicked) && !"m15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l15.setBackground(Color.green);
                        thisUser.LocationGreen.add("l15");
                    }
                    case 1 -> {
                        l15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l15");
                    }
                    case 2 -> {
                        l15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l15");
                    }
                    case 3 -> {
                        l15.setBackground(Color.pink);
                        thisUser.LocationPink.add("l15");
                    }
                    case 4 -> {
                        l15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l15ActionPerformed

    private void m15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m15ActionPerformed
         if (m15.getBackground() == Color.GREEN || m15.getBackground() == Color.BLUE || 
    m15.getBackground() == Color.YELLOW || m15.getBackground() == Color.PINK || m15.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m14".equals(previousButtonClicked) && !"m15".equals(previousButtonClicked)
           && !"m16".equals(previousButtonClicked) && !"l15".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m15";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m15.setBackground(Color.green);
                        thisUser.LocationGreen.add("m15");
                    }
                    case 1 -> {
                        m15.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m15");
                    }
                    case 2 -> {
                        m15.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m15");
                    }
                    case 3 -> {
                        m15.setBackground(Color.pink);
                        thisUser.LocationPink.add("m15");
                    }
                    case 4 -> {
                        m15.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m15");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m15ActionPerformed

    private void a16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a16ActionPerformed
         if (a16.getBackground() == Color.GREEN || a16.getBackground() == Color.BLUE || 
    a16.getBackground() == Color.YELLOW || a16.getBackground() == Color.PINK || a16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a15".equals(previousButtonClicked) && !"a16".equals(previousButtonClicked)
           && !"a17".equals(previousButtonClicked) && !"a16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a16.setBackground(Color.green);
                        thisUser.LocationGreen.add("a16");
                    }
                    case 1 -> {
                        a16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a16");
                    }
                    case 2 -> {
                        a16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a16");
                    }
                    case 3 -> {
                        a16.setBackground(Color.pink);
                        thisUser.LocationPink.add("a16");
                    }
                    case 4 -> {
                        a16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a16ActionPerformed

    private void b16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b16ActionPerformed
         if (b16.getBackground() == Color.GREEN || b16.getBackground() == Color.BLUE || 
    b16.getBackground() == Color.YELLOW || b16.getBackground() == Color.PINK || b16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b15".equals(previousButtonClicked) && !"b16".equals(previousButtonClicked)
           && !"b17".equals(previousButtonClicked) && !"a16".equals(previousButtonClicked) && !"c16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b16.setBackground(Color.green);
                        thisUser.LocationGreen.add("b16");
                    }
                    case 1 -> {
                        b16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b16");
                    }
                    case 2 -> {
                        b16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b16");
                    }
                    case 3 -> {
                        b16.setBackground(Color.pink);
                        thisUser.LocationPink.add("b16");
                    }
                    case 4 -> {
                        b16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b16ActionPerformed

    private void c16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c16ActionPerformed
        if (c16.getBackground() == Color.GREEN || c16.getBackground() == Color.BLUE || 
    c16.getBackground() == Color.YELLOW || c16.getBackground() == Color.PINK || c16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c15".equals(previousButtonClicked) && !"c16".equals(previousButtonClicked)
           && !"c17".equals(previousButtonClicked) && !"b16".equals(previousButtonClicked) && !"d16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c16.setBackground(Color.green);
                        thisUser.LocationGreen.add("c16");
                    }
                    case 1 -> {
                        c16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c16");
                    }
                    case 2 -> {
                        c16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c16");
                    }
                    case 3 -> {
                        c16.setBackground(Color.pink);
                        thisUser.LocationPink.add("c16");
                    }
                    case 4 -> {
                        c16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c16ActionPerformed

    private void d16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d16ActionPerformed
         if (d16.getBackground() == Color.GREEN || d16.getBackground() == Color.BLUE || 
    d16.getBackground() == Color.YELLOW || d16.getBackground() == Color.PINK || d16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d15".equals(previousButtonClicked) && !"d16".equals(previousButtonClicked)
           && !"d17".equals(previousButtonClicked) && !"c16".equals(previousButtonClicked) && !"e16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d16.setBackground(Color.green);
                        thisUser.LocationGreen.add("d16");
                    }
                    case 1 -> {
                        d16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d16");
                    }
                    case 2 -> {
                        d16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d16");
                    }
                    case 3 -> {
                        d16.setBackground(Color.pink);
                        thisUser.LocationPink.add("d16");
                    }
                    case 4 -> {
                        d16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d16ActionPerformed

    private void e16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e16ActionPerformed
         if (e16.getBackground() == Color.GREEN || e16.getBackground() == Color.BLUE || 
    e16.getBackground() == Color.YELLOW || e16.getBackground() == Color.PINK || e16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e15".equals(previousButtonClicked) && !"e16".equals(previousButtonClicked)
           && !"e17".equals(previousButtonClicked) && !"d16".equals(previousButtonClicked) && !"f16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e16.setBackground(Color.green);
                        thisUser.LocationGreen.add("e16");
                    }
                    case 1 -> {
                        e16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e16");
                    }
                    case 2 -> {
                        e16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e16");
                    }
                    case 3 -> {
                        e16.setBackground(Color.pink);
                        thisUser.LocationPink.add("e16");
                    }
                    case 4 -> {
                        e16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e16ActionPerformed

    private void f16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f16ActionPerformed
        if (f16.getBackground() == Color.GREEN || f16.getBackground() == Color.BLUE || 
    f16.getBackground() == Color.YELLOW || f16.getBackground() == Color.PINK || f16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f15".equals(previousButtonClicked) && !"f16".equals(previousButtonClicked)
           && !"f17".equals(previousButtonClicked) && !"e16".equals(previousButtonClicked) && !"g16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f16.setBackground(Color.green);
                        thisUser.LocationGreen.add("f16");
                    }
                    case 1 -> {
                        f16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f16");
                    }
                    case 2 -> {
                        f16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f16");
                    }
                    case 3 -> {
                        f16.setBackground(Color.pink);
                        thisUser.LocationPink.add("f16");
                    }
                    case 4 -> {
                        f16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f16ActionPerformed

    private void g16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g16ActionPerformed
        if (g16.getBackground() == Color.GREEN || g16.getBackground() == Color.BLUE || 
    g16.getBackground() == Color.YELLOW || g16.getBackground() == Color.PINK || g16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g15".equals(previousButtonClicked) && !"g16".equals(previousButtonClicked)
           && !"g17".equals(previousButtonClicked) && !"f16".equals(previousButtonClicked) && !"h16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g16.setBackground(Color.green);
                        thisUser.LocationGreen.add("g16");
                    }
                    case 1 -> {
                        g16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g16");
                    }
                    case 2 -> {
                        g16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g16");
                    }
                    case 3 -> {
                        g16.setBackground(Color.pink);
                        thisUser.LocationPink.add("g16");
                    }
                    case 4 -> {
                        g16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g16ActionPerformed

    private void h16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h16ActionPerformed
         if (h16.getBackground() == Color.GREEN || h16.getBackground() == Color.BLUE || 
    h16.getBackground() == Color.YELLOW || h16.getBackground() == Color.PINK || h16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h15".equals(previousButtonClicked) && !"h16".equals(previousButtonClicked)
           && !"h17".equals(previousButtonClicked) && !"g16".equals(previousButtonClicked) && !"i16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h16.setBackground(Color.green);
                        thisUser.LocationGreen.add("h16");
                    }
                    case 1 -> {
                        h16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h16");
                    }
                    case 2 -> {
                        h16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h16");
                    }
                    case 3 -> {
                        h16.setBackground(Color.pink);
                        thisUser.LocationPink.add("h16");
                    }
                    case 4 -> {
                        h16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h16ActionPerformed

    private void i16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i16ActionPerformed
         if (i16.getBackground() == Color.GREEN || i16.getBackground() == Color.BLUE || 
    i16.getBackground() == Color.YELLOW || i16.getBackground() == Color.PINK || i16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i15".equals(previousButtonClicked) && !"i16".equals(previousButtonClicked)
           && !"i17".equals(previousButtonClicked) && !"h16".equals(previousButtonClicked) && !"j16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i16.setBackground(Color.green);
                        thisUser.LocationGreen.add("i16");
                    }
                    case 1 -> {
                        i16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i16");
                    }
                    case 2 -> {
                        i16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i16");
                    }
                    case 3 -> {
                        i16.setBackground(Color.pink);
                        thisUser.LocationPink.add("i16");
                    }
                    case 4 -> {
                        i16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i16ActionPerformed

    private void j16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j16ActionPerformed
         if (j16.getBackground() == Color.GREEN || j16.getBackground() == Color.BLUE || 
    j16.getBackground() == Color.YELLOW || j16.getBackground() == Color.PINK || j16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j15".equals(previousButtonClicked) && !"j16".equals(previousButtonClicked)
           && !"j17".equals(previousButtonClicked) && !"i16".equals(previousButtonClicked) && !"k16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j16.setBackground(Color.green);
                        thisUser.LocationGreen.add("j16");
                    }
                    case 1 -> {
                        j16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j16");
                    }
                    case 2 -> {
                        j16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j16");
                    }
                    case 3 -> {
                        j16.setBackground(Color.pink);
                        thisUser.LocationPink.add("j16");
                    }
                    case 4 -> {
                        j16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j16ActionPerformed

    private void k16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k16ActionPerformed
        if (k16.getBackground() == Color.GREEN || k16.getBackground() == Color.BLUE || 
    k16.getBackground() == Color.YELLOW || k16.getBackground() == Color.PINK || k16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k15".equals(previousButtonClicked) && !"k16".equals(previousButtonClicked)
           && !"k17".equals(previousButtonClicked) && !"j16".equals(previousButtonClicked) && !"l16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k16.setBackground(Color.green);
                        thisUser.LocationGreen.add("k16");
                    }
                    case 1 -> {
                        k16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k16");
                    }
                    case 2 -> {
                        k16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k16");
                    }
                    case 3 -> {
                        k16.setBackground(Color.pink);
                        thisUser.LocationPink.add("k16");
                    }
                    case 4 -> {
                        k16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k16ActionPerformed

    private void l16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l16ActionPerformed
         if (l16.getBackground() == Color.GREEN || l16.getBackground() == Color.BLUE || 
    l16.getBackground() == Color.YELLOW || l16.getBackground() == Color.PINK || l16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l15".equals(previousButtonClicked) && !"l16".equals(previousButtonClicked)
           && !"l17".equals(previousButtonClicked) && !"k16".equals(previousButtonClicked) && !"m16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l16.setBackground(Color.green);
                        thisUser.LocationGreen.add("l16");
                    }
                    case 1 -> {
                        l16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l16");
                    }
                    case 2 -> {
                        l16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l16");
                    }
                    case 3 -> {
                        l16.setBackground(Color.pink);
                        thisUser.LocationPink.add("l16");
                    }
                    case 4 -> {
                        l16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l16ActionPerformed

    private void m16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m16ActionPerformed
        if (m16.getBackground() == Color.GREEN || m16.getBackground() == Color.BLUE || 
    m16.getBackground() == Color.YELLOW || m16.getBackground() == Color.PINK || m16.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m15".equals(previousButtonClicked) && !"m16".equals(previousButtonClicked)
           && !"m17".equals(previousButtonClicked) && !"l16".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m16";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m16.setBackground(Color.green);
                        thisUser.LocationGreen.add("m16");
                    }
                    case 1 -> {
                        m16.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m16");
                    }
                    case 2 -> {
                        m16.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m16");
                    }
                    case 3 -> {
                        m16.setBackground(Color.pink);
                        thisUser.LocationPink.add("m16");
                    }
                    case 4 -> {
                        m16.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m16");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m16ActionPerformed

    private void a17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a17ActionPerformed
         if (a17.getBackground() == Color.GREEN || a17.getBackground() == Color.BLUE || 
    a17.getBackground() == Color.YELLOW || a17.getBackground() == Color.PINK || a17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a16".equals(previousButtonClicked) && !"a17".equals(previousButtonClicked)
           && !"a18".equals(previousButtonClicked) && !"b17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a17.setBackground(Color.green);
                        thisUser.LocationGreen.add("a17");
                    }
                    case 1 -> {
                        a17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a17");
                    }
                    case 2 -> {
                        a17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a17");
                    }
                    case 3 -> {
                        a17.setBackground(Color.pink);
                        thisUser.LocationPink.add("a17");
                    }
                    case 4 -> {
                        a17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a17ActionPerformed

    private void b17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b17ActionPerformed
         if (b17.getBackground() == Color.GREEN || b17.getBackground() == Color.BLUE || 
    b17.getBackground() == Color.YELLOW || b17.getBackground() == Color.PINK || b17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b16".equals(previousButtonClicked) && !"b17".equals(previousButtonClicked)
           && !"b18".equals(previousButtonClicked) && !"a17".equals(previousButtonClicked) && !"c17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b17.setBackground(Color.green);
                        thisUser.LocationGreen.add("b17");
                    }
                    case 1 -> {
                        b17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b17");
                    }
                    case 2 -> {
                        b17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b17");
                    }
                    case 3 -> {
                        b17.setBackground(Color.pink);
                        thisUser.LocationPink.add("b17");
                    }
                    case 4 -> {
                        b17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b17ActionPerformed

    private void c17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c17ActionPerformed
         if (c17.getBackground() == Color.GREEN || c17.getBackground() == Color.BLUE || 
    c17.getBackground() == Color.YELLOW || c17.getBackground() == Color.PINK || c17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c16".equals(previousButtonClicked) && !"c17".equals(previousButtonClicked)
           && !"c18".equals(previousButtonClicked) && !"b17".equals(previousButtonClicked) && !"d17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c17.setBackground(Color.green);
                        thisUser.LocationGreen.add("c17");
                    }
                    case 1 -> {
                        c17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c17");
                    }
                    case 2 -> {
                        c17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c17");
                    }
                    case 3 -> {
                        c17.setBackground(Color.pink);
                        thisUser.LocationPink.add("c17");
                    }
                    case 4 -> {
                        c17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c17ActionPerformed

    private void d17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d17ActionPerformed
         if (d17.getBackground() == Color.GREEN || d17.getBackground() == Color.BLUE || 
    d17.getBackground() == Color.YELLOW || d17.getBackground() == Color.PINK || d17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d16".equals(previousButtonClicked) && !"d17".equals(previousButtonClicked)
           && !"d18".equals(previousButtonClicked) && !"c17".equals(previousButtonClicked) && !"e17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d17.setBackground(Color.green);
                        thisUser.LocationGreen.add("d17");
                    }
                    case 1 -> {
                        d17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d17");
                    }
                    case 2 -> {
                        d17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d17");
                    }
                    case 3 -> {
                        d17.setBackground(Color.pink);
                        thisUser.LocationPink.add("d17");
                    }
                    case 4 -> {
                        d17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d17ActionPerformed

    private void e17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e17ActionPerformed
         if (e17.getBackground() == Color.GREEN || e17.getBackground() == Color.BLUE || 
    e17.getBackground() == Color.YELLOW || e17.getBackground() == Color.PINK || e17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e16".equals(previousButtonClicked) && !"e17".equals(previousButtonClicked)
           && !"e18".equals(previousButtonClicked) && !"d17".equals(previousButtonClicked) && !"f17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e17.setBackground(Color.green);
                        thisUser.LocationGreen.add("e17");
                    }
                    case 1 -> {
                        e17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e17");
                    }
                    case 2 -> {
                        e17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e17");
                    }
                    case 3 -> {
                        e17.setBackground(Color.pink);
                        thisUser.LocationPink.add("e17");
                    }
                    case 4 -> {
                        e17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e17ActionPerformed

    private void f17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f17ActionPerformed
         if (f17.getBackground() == Color.GREEN || f17.getBackground() == Color.BLUE || 
    f17.getBackground() == Color.YELLOW || f17.getBackground() == Color.PINK || f17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f16".equals(previousButtonClicked) && !"f17".equals(previousButtonClicked)
           && !"f18".equals(previousButtonClicked) && !"e17".equals(previousButtonClicked) && !"g17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f17.setBackground(Color.green);
                        thisUser.LocationGreen.add("f17");
                    }
                    case 1 -> {
                        f17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f17");
                    }
                    case 2 -> {
                        f17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f17");
                    }
                    case 3 -> {
                        f17.setBackground(Color.pink);
                        thisUser.LocationPink.add("f17");
                    }
                    case 4 -> {
                        f17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f17ActionPerformed

    private void g17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g17ActionPerformed
        if (g17.getBackground() == Color.GREEN || g17.getBackground() == Color.BLUE || 
    g17.getBackground() == Color.YELLOW || g17.getBackground() == Color.PINK || g17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g16".equals(previousButtonClicked) && !"g17".equals(previousButtonClicked)
           && !"g18".equals(previousButtonClicked) && !"f17".equals(previousButtonClicked) && !"h17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g17.setBackground(Color.green);
                        thisUser.LocationGreen.add("g17");
                    }
                    case 1 -> {
                        g17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g17");
                    }
                    case 2 -> {
                        g17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g17");
                    }
                    case 3 -> {
                        g17.setBackground(Color.pink);
                        thisUser.LocationPink.add("g17");
                    }
                    case 4 -> {
                        g17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g17ActionPerformed

    private void h17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h17ActionPerformed
        if (h17.getBackground() == Color.GREEN || h17.getBackground() == Color.BLUE || 
    h17.getBackground() == Color.YELLOW || h17.getBackground() == Color.PINK || h17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h16".equals(previousButtonClicked) && !"h17".equals(previousButtonClicked)
           && !"h18".equals(previousButtonClicked) && !"g17".equals(previousButtonClicked) && !"i17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h17.setBackground(Color.green);
                        thisUser.LocationGreen.add("h17");
                    }
                    case 1 -> {
                        h17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h17");
                    }
                    case 2 -> {
                        h17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h17");
                    }
                    case 3 -> {
                        h17.setBackground(Color.pink);
                        thisUser.LocationPink.add("h17");
                    }
                    case 4 -> {
                        h17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h17ActionPerformed

    private void i17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i17ActionPerformed
         if (i17.getBackground() == Color.GREEN || i17.getBackground() == Color.BLUE || 
    i17.getBackground() == Color.YELLOW || i17.getBackground() == Color.PINK || i17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i16".equals(previousButtonClicked) && !"i17".equals(previousButtonClicked)
           && !"i18".equals(previousButtonClicked) && !"h17".equals(previousButtonClicked) && !"j17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i17.setBackground(Color.green);
                        thisUser.LocationGreen.add("i17");
                    }
                    case 1 -> {
                        i17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i17");
                    }
                    case 2 -> {
                        i17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i17");
                    }
                    case 3 -> {
                        i17.setBackground(Color.pink);
                        thisUser.LocationPink.add("i17");
                    }
                    case 4 -> {
                        i17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i17ActionPerformed

    private void j17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j17ActionPerformed
         if (j17.getBackground() == Color.GREEN || j17.getBackground() == Color.BLUE || 
    j17.getBackground() == Color.YELLOW || j17.getBackground() == Color.PINK || j17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j16".equals(previousButtonClicked) && !"j17".equals(previousButtonClicked)
           && !"j18".equals(previousButtonClicked) && !"i17".equals(previousButtonClicked) && !"k17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j17.setBackground(Color.green);
                        thisUser.LocationGreen.add("j17");
                    }
                    case 1 -> {
                        j17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j17");
                    }
                    case 2 -> {
                        j17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j17");
                    }
                    case 3 -> {
                        j17.setBackground(Color.pink);
                        thisUser.LocationPink.add("j17");
                    }
                    case 4 -> {
                        j17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j17ActionPerformed

    private void k17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k17ActionPerformed
         if (k17.getBackground() == Color.GREEN || k17.getBackground() == Color.BLUE || 
    k17.getBackground() == Color.YELLOW || k17.getBackground() == Color.PINK || k17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k16".equals(previousButtonClicked) && !"k17".equals(previousButtonClicked)
           && !"k18".equals(previousButtonClicked) && !"j17".equals(previousButtonClicked) && !"l17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k17.setBackground(Color.green);
                        thisUser.LocationGreen.add("k17");
                    }
                    case 1 -> {
                        k17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k17");
                    }
                    case 2 -> {
                        k17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k17");
                    }
                    case 3 -> {
                        k17.setBackground(Color.pink);
                        thisUser.LocationPink.add("k17");
                    }
                    case 4 -> {
                        k17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k17ActionPerformed

    private void l17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l17ActionPerformed
         if (l17.getBackground() == Color.GREEN || l17.getBackground() == Color.BLUE || 
    l17.getBackground() == Color.YELLOW || l17.getBackground() == Color.PINK || l17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l16".equals(previousButtonClicked) && !"l17".equals(previousButtonClicked)
           && !"l18".equals(previousButtonClicked) && !"k17".equals(previousButtonClicked) && !"m17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l17.setBackground(Color.green);
                        thisUser.LocationGreen.add("l17");
                    }
                    case 1 -> {
                        l17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l17");
                    }
                    case 2 -> {
                        l17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l17");
                    }
                    case 3 -> {
                        l17.setBackground(Color.pink);
                        thisUser.LocationPink.add("l17");
                    }
                    case 4 -> {
                        l17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l17ActionPerformed

    private void m17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m17ActionPerformed
         if (m17.getBackground() == Color.GREEN || m17.getBackground() == Color.BLUE || 
    m17.getBackground() == Color.YELLOW || m17.getBackground() == Color.PINK || m17.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m16".equals(previousButtonClicked) && !"m17".equals(previousButtonClicked)
           && !"m18".equals(previousButtonClicked) && !"l17".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m17";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m17.setBackground(Color.green);
                        thisUser.LocationGreen.add("m17");
                    }
                    case 1 -> {
                        m17.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m17");
                    }
                    case 2 -> {
                        m17.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m17");
                    }
                    case 3 -> {
                        m17.setBackground(Color.pink);
                        thisUser.LocationPink.add("m17");
                    }
                    case 4 -> {
                        m17.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m17");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m17ActionPerformed

    private void a18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a18ActionPerformed
         if (a18.getBackground() == Color.GREEN || a18.getBackground() == Color.BLUE || 
    a18.getBackground() == Color.YELLOW || a18.getBackground() == Color.PINK || a18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a17".equals(previousButtonClicked) && !"a18".equals(previousButtonClicked)
           && !"a19".equals(previousButtonClicked) && !"b18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a18.setBackground(Color.green);
                        thisUser.LocationGreen.add("a18");
                    }
                    case 1 -> {
                        a18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a18");
                    }
                    case 2 -> {
                        a18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a18");
                    }
                    case 3 -> {
                        a18.setBackground(Color.pink);
                        thisUser.LocationPink.add("a18");
                    }
                    case 4 -> {
                        a18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a18ActionPerformed

    private void b18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b18ActionPerformed
         if (b18.getBackground() == Color.GREEN || b18.getBackground() == Color.BLUE || 
    b18.getBackground() == Color.YELLOW || b18.getBackground() == Color.PINK || b18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b17".equals(previousButtonClicked) && !"b18".equals(previousButtonClicked)
           && !"b19".equals(previousButtonClicked) && !"a18".equals(previousButtonClicked) && !"c18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b18.setBackground(Color.green);
                        thisUser.LocationGreen.add("b18");
                    }
                    case 1 -> {
                        b18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b18");
                    }
                    case 2 -> {
                        b18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b18");
                    }
                    case 3 -> {
                        b18.setBackground(Color.pink);
                        thisUser.LocationPink.add("b18");
                    }
                    case 4 -> {
                        b18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b18ActionPerformed

    private void c18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c18ActionPerformed
         if (c18.getBackground() == Color.GREEN || c18.getBackground() == Color.BLUE || 
    c18.getBackground() == Color.YELLOW || c18.getBackground() == Color.PINK || c18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c17".equals(previousButtonClicked) && !"c18".equals(previousButtonClicked)
           && !"c19".equals(previousButtonClicked) && !"b18".equals(previousButtonClicked) && !"d18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c18.setBackground(Color.green);
                        thisUser.LocationGreen.add("c18");
                    }
                    case 1 -> {
                        c18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c18");
                    }
                    case 2 -> {
                        c18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c18");
                    }
                    case 3 -> {
                        c18.setBackground(Color.pink);
                        thisUser.LocationPink.add("c18");
                    }
                    case 4 -> {
                        c18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c18ActionPerformed

    private void d18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d18ActionPerformed
         if (d18.getBackground() == Color.GREEN || d18.getBackground() == Color.BLUE || 
    d18.getBackground() == Color.YELLOW || d18.getBackground() == Color.PINK || d18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d17".equals(previousButtonClicked) && !"d18".equals(previousButtonClicked)
           && !"d19".equals(previousButtonClicked) && !"c18".equals(previousButtonClicked) && !"e18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d18.setBackground(Color.green);
                        thisUser.LocationGreen.add("d18");
                    }
                    case 1 -> {
                        d18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d18");
                    }
                    case 2 -> {
                        d18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d18");
                    }
                    case 3 -> {
                        d18.setBackground(Color.pink);
                        thisUser.LocationPink.add("d18");
                    }
                    case 4 -> {
                        d18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d18ActionPerformed

    private void e18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e18ActionPerformed
         if (e18.getBackground() == Color.GREEN || e18.getBackground() == Color.BLUE || 
    e18.getBackground() == Color.YELLOW || e18.getBackground() == Color.PINK || e18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e17".equals(previousButtonClicked) && !"e18".equals(previousButtonClicked)
           && !"e19".equals(previousButtonClicked) && !"d18".equals(previousButtonClicked) && !"f18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e18.setBackground(Color.green);
                        thisUser.LocationGreen.add("e18");
                    }
                    case 1 -> {
                        e18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e18");
                    }
                    case 2 -> {
                        e18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e18");
                    }
                    case 3 -> {
                        e18.setBackground(Color.pink);
                        thisUser.LocationPink.add("e18");
                    }
                    case 4 -> {
                        e18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e18ActionPerformed

    private void f18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f18ActionPerformed
         if (f18.getBackground() == Color.GREEN || f18.getBackground() == Color.BLUE || 
    f18.getBackground() == Color.YELLOW || f18.getBackground() == Color.PINK || f18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f17".equals(previousButtonClicked) && !"f18".equals(previousButtonClicked)
           && !"f19".equals(previousButtonClicked) && !"e18".equals(previousButtonClicked) && !"g18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f18.setBackground(Color.green);
                        thisUser.LocationGreen.add("f18");
                    }
                    case 1 -> {
                        f18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f18");
                    }
                    case 2 -> {
                        f18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f18");
                    }
                    case 3 -> {
                        f18.setBackground(Color.pink);
                        thisUser.LocationPink.add("f18");
                    }
                    case 4 -> {
                        f18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f18ActionPerformed

    private void g18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g18ActionPerformed
         if (g18.getBackground() == Color.GREEN || g18.getBackground() == Color.BLUE || 
    g18.getBackground() == Color.YELLOW || g18.getBackground() == Color.PINK || g18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g17".equals(previousButtonClicked) && !"g18".equals(previousButtonClicked)
           && !"g19".equals(previousButtonClicked) && !"f18".equals(previousButtonClicked) && !"h18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g18.setBackground(Color.green);
                        thisUser.LocationGreen.add("g18");
                    }
                    case 1 -> {
                        g18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g18");
                    }
                    case 2 -> {
                        g18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g18");
                    }
                    case 3 -> {
                        g18.setBackground(Color.pink);
                        thisUser.LocationPink.add("g18");
                    }
                    case 4 -> {
                        g18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g18ActionPerformed

    private void h18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h18ActionPerformed
         if (h18.getBackground() == Color.GREEN || h18.getBackground() == Color.BLUE || 
    h18.getBackground() == Color.YELLOW || h18.getBackground() == Color.PINK || h18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h17".equals(previousButtonClicked) && !"h18".equals(previousButtonClicked)
           && !"h19".equals(previousButtonClicked) && !"g18".equals(previousButtonClicked) && !"i18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h18.setBackground(Color.green);
                        thisUser.LocationGreen.add("h18");
                    }
                    case 1 -> {
                        h18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h18");
                    }
                    case 2 -> {
                        h18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h18");
                    }
                    case 3 -> {
                        h18.setBackground(Color.pink);
                        thisUser.LocationPink.add("h18");
                    }
                    case 4 -> {
                        h18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h18ActionPerformed

    private void i18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i18ActionPerformed
         if (i18.getBackground() == Color.GREEN || i18.getBackground() == Color.BLUE || 
    i18.getBackground() == Color.YELLOW || i18.getBackground() == Color.PINK || i18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i17".equals(previousButtonClicked) && !"i18".equals(previousButtonClicked)
           && !"i19".equals(previousButtonClicked) && !"h18".equals(previousButtonClicked) && !"j18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i18.setBackground(Color.green);
                        thisUser.LocationGreen.add("i18");
                    }
                    case 1 -> {
                        i18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i18");
                    }
                    case 2 -> {
                        i18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i18");
                    }
                    case 3 -> {
                        i18.setBackground(Color.pink);
                        thisUser.LocationPink.add("i18");
                    }
                    case 4 -> {
                        i18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i18ActionPerformed

    private void j18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j18ActionPerformed
         if (j18.getBackground() == Color.GREEN || j18.getBackground() == Color.BLUE || 
    j18.getBackground() == Color.YELLOW || j18.getBackground() == Color.PINK || j18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j17".equals(previousButtonClicked) && !"j18".equals(previousButtonClicked)
           && !"j19".equals(previousButtonClicked) && !"i18".equals(previousButtonClicked) && !"k18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j18.setBackground(Color.green);
                        thisUser.LocationGreen.add("j18");
                    }
                    case 1 -> {
                        j18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j18");
                    }
                    case 2 -> {
                        j18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j18");
                    }
                    case 3 -> {
                        j18.setBackground(Color.pink);
                        thisUser.LocationPink.add("j18");
                    }
                    case 4 -> {
                        j18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j18ActionPerformed

    private void k18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k18ActionPerformed
         if (k18.getBackground() == Color.GREEN || k18.getBackground() == Color.BLUE || 
    k18.getBackground() == Color.YELLOW || k18.getBackground() == Color.PINK || k18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k17".equals(previousButtonClicked) && !"k18".equals(previousButtonClicked)
           && !"k19".equals(previousButtonClicked) && !"j18".equals(previousButtonClicked) && !"l18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k18.setBackground(Color.green);
                        thisUser.LocationGreen.add("k18");
                    }
                    case 1 -> {
                        k18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k18");
                    }
                    case 2 -> {
                        k18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k18");
                    }
                    case 3 -> {
                        k18.setBackground(Color.pink);
                        thisUser.LocationPink.add("k18");
                    }
                    case 4 -> {
                        k18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k18ActionPerformed

    private void l18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l18ActionPerformed
         if (l18.getBackground() == Color.GREEN || l18.getBackground() == Color.BLUE || 
    l18.getBackground() == Color.YELLOW || l18.getBackground() == Color.PINK || l18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l17".equals(previousButtonClicked) && !"l18".equals(previousButtonClicked)
           && !"l19".equals(previousButtonClicked) && !"k18".equals(previousButtonClicked) && !"m18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l18.setBackground(Color.green);
                        thisUser.LocationGreen.add("l18");
                    }
                    case 1 -> {
                        l18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l18");
                    }
                    case 2 -> {
                        l18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l18");
                    }
                    case 3 -> {
                        l18.setBackground(Color.pink);
                        thisUser.LocationPink.add("l18");
                    }
                    case 4 -> {
                        l18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l18ActionPerformed

    private void m18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m18ActionPerformed
         if (m18.getBackground() == Color.GREEN || m18.getBackground() == Color.BLUE || 
    m18.getBackground() == Color.YELLOW || m18.getBackground() == Color.PINK || m18.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m17".equals(previousButtonClicked) && !"m18".equals(previousButtonClicked)
           && !"m19".equals(previousButtonClicked) && !"l18".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m18";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m18.setBackground(Color.green);
                        thisUser.LocationGreen.add("m18");
                    }
                    case 1 -> {
                        m18.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m18");
                    }
                    case 2 -> {
                        m18.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m18");
                    }
                    case 3 -> {
                        m18.setBackground(Color.pink);
                        thisUser.LocationPink.add("m18");
                    }
                    case 4 -> {
                        m18.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m18");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m18ActionPerformed

    private void a19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a19ActionPerformed
         if (a19.getBackground() == Color.GREEN || a19.getBackground() == Color.BLUE || 
    a19.getBackground() == Color.YELLOW || a19.getBackground() == Color.PINK || a19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a18".equals(previousButtonClicked) && !"a19".equals(previousButtonClicked)
           && !"a20".equals(previousButtonClicked) && !"b19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a19.setBackground(Color.green);
                        thisUser.LocationGreen.add("a19");
                    }
                    case 1 -> {
                        a19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a19");
                    }
                    case 2 -> {
                        a19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a19");
                    }
                    case 3 -> {
                        a19.setBackground(Color.pink);
                        thisUser.LocationPink.add("a19");
                    }
                    case 4 -> {
                        a19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a19ActionPerformed

    private void b19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b19ActionPerformed
         if (b19.getBackground() == Color.GREEN || b19.getBackground() == Color.BLUE || 
    b19.getBackground() == Color.YELLOW || b19.getBackground() == Color.PINK || b19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b18".equals(previousButtonClicked) && !"b19".equals(previousButtonClicked)
           && !"b20".equals(previousButtonClicked) && !"a19".equals(previousButtonClicked) && !"c19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b19.setBackground(Color.green);
                        thisUser.LocationGreen.add("b19");
                    }
                    case 1 -> {
                        b19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b19");
                    }
                    case 2 -> {
                        b19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b19");
                    }
                    case 3 -> {
                        b19.setBackground(Color.pink);
                        thisUser.LocationPink.add("b19");
                    }
                    case 4 -> {
                        b19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b19ActionPerformed

    private void c19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c19ActionPerformed
        if (c19.getBackground() == Color.GREEN || c19.getBackground() == Color.BLUE || 
    c19.getBackground() == Color.YELLOW || c19.getBackground() == Color.PINK || c19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c18".equals(previousButtonClicked) && !"c19".equals(previousButtonClicked)
           && !"c20".equals(previousButtonClicked) && !"b19".equals(previousButtonClicked) && !"d19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c19.setBackground(Color.green);
                        thisUser.LocationGreen.add("c19");
                    }
                    case 1 -> {
                        c19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c19");
                    }
                    case 2 -> {
                        c19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c19");
                    }
                    case 3 -> {
                        c19.setBackground(Color.pink);
                        thisUser.LocationPink.add("c19");
                    }
                    case 4 -> {
                        c19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c19ActionPerformed

    private void d19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d19ActionPerformed
         if (d19.getBackground() == Color.GREEN || d19.getBackground() == Color.BLUE || 
    d19.getBackground() == Color.YELLOW || d19.getBackground() == Color.PINK || d19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d18".equals(previousButtonClicked) && !"d19".equals(previousButtonClicked)
           && !"d20".equals(previousButtonClicked) && !"c19".equals(previousButtonClicked) && !"e19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d19.setBackground(Color.green);
                        thisUser.LocationGreen.add("d19");
                    }
                    case 1 -> {
                        d19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d19");
                    }
                    case 2 -> {
                        d19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d19");
                    }
                    case 3 -> {
                        d19.setBackground(Color.pink);
                        thisUser.LocationPink.add("d19");
                    }
                    case 4 -> {
                        d19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d19ActionPerformed

    private void e19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e19ActionPerformed
        if (e19.getBackground() == Color.GREEN || e19.getBackground() == Color.BLUE || 
    e19.getBackground() == Color.YELLOW || e19.getBackground() == Color.PINK || e19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e18".equals(previousButtonClicked) && !"e19".equals(previousButtonClicked)
           && !"e20".equals(previousButtonClicked) && !"d19".equals(previousButtonClicked) && !"f19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e19.setBackground(Color.green);
                        thisUser.LocationGreen.add("e19");
                    }
                    case 1 -> {
                        e19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e19");
                    }
                    case 2 -> {
                        e19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e19");
                    }
                    case 3 -> {
                        e19.setBackground(Color.pink);
                        thisUser.LocationPink.add("e19");
                    }
                    case 4 -> {
                        e19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e19ActionPerformed

    private void f19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f19ActionPerformed
         if (f19.getBackground() == Color.GREEN || f19.getBackground() == Color.BLUE || 
    f19.getBackground() == Color.YELLOW || f19.getBackground() == Color.PINK || f19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f18".equals(previousButtonClicked) && !"f19".equals(previousButtonClicked)
           && !"f20".equals(previousButtonClicked) && !"e19".equals(previousButtonClicked) && !"g19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f19.setBackground(Color.green);
                        thisUser.LocationGreen.add("f19");
                    }
                    case 1 -> {
                        f19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f19");
                    }
                    case 2 -> {
                        f19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f19");
                    }
                    case 3 -> {
                        f19.setBackground(Color.pink);
                        thisUser.LocationPink.add("f19");
                    }
                    case 4 -> {
                        f19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f19ActionPerformed

    private void g19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g19ActionPerformed
         if (g19.getBackground() == Color.GREEN || g19.getBackground() == Color.BLUE || 
    g19.getBackground() == Color.YELLOW || g19.getBackground() == Color.PINK || g19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g18".equals(previousButtonClicked) && !"g19".equals(previousButtonClicked)
           && !"g20".equals(previousButtonClicked) && !"f19".equals(previousButtonClicked) && !"h19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g19.setBackground(Color.green);
                        thisUser.LocationGreen.add("g19");
                    }
                    case 1 -> {
                        g19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g19");
                    }
                    case 2 -> {
                        g19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g19");
                    }
                    case 3 -> {
                        g19.setBackground(Color.pink);
                        thisUser.LocationPink.add("g19");
                    }
                    case 4 -> {
                        g19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g19ActionPerformed

    private void h19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h19ActionPerformed
         if (h19.getBackground() == Color.GREEN || h19.getBackground() == Color.BLUE || 
    h19.getBackground() == Color.YELLOW || h19.getBackground() == Color.PINK || h19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h18".equals(previousButtonClicked) && !"h19".equals(previousButtonClicked)
           && !"h20".equals(previousButtonClicked) && !"g19".equals(previousButtonClicked) && !"i19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h19.setBackground(Color.green);
                        thisUser.LocationGreen.add("h19");
                    }
                    case 1 -> {
                        h19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h19");
                    }
                    case 2 -> {
                        h19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h19");
                    }
                    case 3 -> {
                        h19.setBackground(Color.pink);
                        thisUser.LocationPink.add("h19");
                    }
                    case 4 -> {
                        h19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h19ActionPerformed

    private void i19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i19ActionPerformed
         if (i19.getBackground() == Color.GREEN || i19.getBackground() == Color.BLUE || 
    i19.getBackground() == Color.YELLOW || i19.getBackground() == Color.PINK || i19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i18".equals(previousButtonClicked) && !"i19".equals(previousButtonClicked)
           && !"i20".equals(previousButtonClicked) && !"h19".equals(previousButtonClicked) && !"j19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i19.setBackground(Color.green);
                        thisUser.LocationGreen.add("i19");
                    }
                    case 1 -> {
                        i19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i19");
                    }
                    case 2 -> {
                        i19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i19");
                    }
                    case 3 -> {
                        i19.setBackground(Color.pink);
                        thisUser.LocationPink.add("i19");
                    }
                    case 4 -> {
                        i19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i19ActionPerformed

    private void j19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j19ActionPerformed
         if (j19.getBackground() == Color.GREEN || j19.getBackground() == Color.BLUE || 
    j19.getBackground() == Color.YELLOW || j19.getBackground() == Color.PINK || j19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j18".equals(previousButtonClicked) && !"j19".equals(previousButtonClicked)
           && !"j20".equals(previousButtonClicked) && !"i19".equals(previousButtonClicked) && !"k19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j19.setBackground(Color.green);
                        thisUser.LocationGreen.add("j19");
                    }
                    case 1 -> {
                        j19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j19");
                    }
                    case 2 -> {
                        j19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j19");
                    }
                    case 3 -> {
                        j19.setBackground(Color.pink);
                        thisUser.LocationPink.add("j19");
                    }
                    case 4 -> {
                        j19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j19ActionPerformed

    private void k19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k19ActionPerformed
         if (k19.getBackground() == Color.GREEN || k19.getBackground() == Color.BLUE || 
    k19.getBackground() == Color.YELLOW || k19.getBackground() == Color.PINK || k19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k18".equals(previousButtonClicked) && !"k19".equals(previousButtonClicked)
           && !"k20".equals(previousButtonClicked) && !"j19".equals(previousButtonClicked) && !"l19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k19.setBackground(Color.green);
                        thisUser.LocationGreen.add("k19");
                    }
                    case 1 -> {
                        k19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k19");
                    }
                    case 2 -> {
                        k19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k19");
                    }
                    case 3 -> {
                        k19.setBackground(Color.pink);
                        thisUser.LocationPink.add("k19");
                    }
                    case 4 -> {
                        k19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k19ActionPerformed

    private void l19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l19ActionPerformed
         if (l19.getBackground() == Color.GREEN || l19.getBackground() == Color.BLUE || 
    l19.getBackground() == Color.YELLOW || l19.getBackground() == Color.PINK || l19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l18".equals(previousButtonClicked) && !"l19".equals(previousButtonClicked)
           && !"l20".equals(previousButtonClicked) && !"k19".equals(previousButtonClicked) && !"m19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l19.setBackground(Color.green);
                        thisUser.LocationGreen.add("l19");
                    }
                    case 1 -> {
                        l19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l19");
                    }
                    case 2 -> {
                        l19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l19");
                    }
                    case 3 -> {
                        l19.setBackground(Color.pink);
                        thisUser.LocationPink.add("l19");
                    }
                    case 4 -> {
                        l19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l19ActionPerformed

    private void m19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m19ActionPerformed
         if (m19.getBackground() == Color.GREEN || m19.getBackground() == Color.BLUE || 
    m19.getBackground() == Color.YELLOW || m19.getBackground() == Color.PINK || m19.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m18".equals(previousButtonClicked) && !"m19".equals(previousButtonClicked)
           && !"m20".equals(previousButtonClicked) && !"l19".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m19";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m19.setBackground(Color.green);
                        thisUser.LocationGreen.add("m19");
                    }
                    case 1 -> {
                        m19.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m19");
                    }
                    case 2 -> {
                        m19.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m19");
                    }
                    case 3 -> {
                        m19.setBackground(Color.pink);
                        thisUser.LocationPink.add("m19");
                    }
                    case 4 -> {
                        m19.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m19");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m19ActionPerformed

    private void a20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a20ActionPerformed
         if (a20.getBackground() == Color.GREEN || a20.getBackground() == Color.BLUE || 
    a20.getBackground() == Color.YELLOW || a20.getBackground() == Color.PINK || a20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"a19".equals(previousButtonClicked) && !"a20".equals(previousButtonClicked)
           && !"b20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "a20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        a20.setBackground(Color.green);
                        thisUser.LocationGreen.add("a20");
                    }
                    case 1 -> {
                        a20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("a20");
                    }
                    case 2 -> {
                        a20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("a20");
                    }
                    case 3 -> {
                        a20.setBackground(Color.pink);
                        thisUser.LocationPink.add("a20");
                    }
                    case 4 -> {
                        a20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("a20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_a20ActionPerformed

    private void b20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b20ActionPerformed
         if (b20.getBackground() == Color.GREEN || b20.getBackground() == Color.BLUE || 
    b20.getBackground() == Color.YELLOW || b20.getBackground() == Color.PINK || b20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"b19".equals(previousButtonClicked) && !"b20".equals(previousButtonClicked)
           && !"a20".equals(previousButtonClicked) && !"c20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "b20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        b20.setBackground(Color.green);
                        thisUser.LocationGreen.add("b20");
                    }
                    case 1 -> {
                        b20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("b20");
                    }
                    case 2 -> {
                        b20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("b20");
                    }
                    case 3 -> {
                        b20.setBackground(Color.pink);
                        thisUser.LocationPink.add("b20");
                    }
                    case 4 -> {
                        b20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("b20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_b20ActionPerformed

    private void c20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c20ActionPerformed
         if (c20.getBackground() == Color.GREEN || c20.getBackground() == Color.BLUE || 
    c20.getBackground() == Color.YELLOW || c20.getBackground() == Color.PINK || c20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"c19".equals(previousButtonClicked) && !"c20".equals(previousButtonClicked)
           && !"b20".equals(previousButtonClicked) && !"d20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "c20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        c20.setBackground(Color.green);
                        thisUser.LocationGreen.add("c20");
                    }
                    case 1 -> {
                        c20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("c20");
                    }
                    case 2 -> {
                        c20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("c20");
                    }
                    case 3 -> {
                        c20.setBackground(Color.pink);
                        thisUser.LocationPink.add("c20");
                    }
                    case 4 -> {
                        c20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("c20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_c20ActionPerformed

    private void d20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d20ActionPerformed
         if (d20.getBackground() == Color.GREEN || d20.getBackground() == Color.BLUE || 
    d20.getBackground() == Color.YELLOW || d20.getBackground() == Color.PINK || d20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"d19".equals(previousButtonClicked) && !"d20".equals(previousButtonClicked)
           && !"c20".equals(previousButtonClicked) && !"e20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "d20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        d20.setBackground(Color.green);
                        thisUser.LocationGreen.add("d20");
                    }
                    case 1 -> {
                        d20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("d20");
                    }
                    case 2 -> {
                        d20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("d20");
                    }
                    case 3 -> {
                        d20.setBackground(Color.pink);
                        thisUser.LocationPink.add("d20");
                    }
                    case 4 -> {
                        d20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("d20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_d20ActionPerformed

    private void e20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e20ActionPerformed
         if (e20.getBackground() == Color.GREEN || e20.getBackground() == Color.BLUE || 
    e20.getBackground() == Color.YELLOW || e20.getBackground() == Color.PINK || e20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"e19".equals(previousButtonClicked) && !"e20".equals(previousButtonClicked)
           && !"d20".equals(previousButtonClicked) && !"f20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "e20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        e20.setBackground(Color.green);
                        thisUser.LocationGreen.add("e20");
                    }
                    case 1 -> {
                        e20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("e20");
                    }
                    case 2 -> {
                        e20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("e20");
                    }
                    case 3 -> {
                        e20.setBackground(Color.pink);
                        thisUser.LocationPink.add("e20");
                    }
                    case 4 -> {
                        e20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("e20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_e20ActionPerformed

    private void f20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_f20ActionPerformed
         if (f20.getBackground() == Color.GREEN || f20.getBackground() == Color.BLUE || 
    f20.getBackground() == Color.YELLOW || f20.getBackground() == Color.PINK || f20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"f19".equals(previousButtonClicked) && !"f20".equals(previousButtonClicked)
           && !"e20".equals(previousButtonClicked) && !"g20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "f20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        f20.setBackground(Color.green);
                        thisUser.LocationGreen.add("f20");
                    }
                    case 1 -> {
                        f20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("f20");
                    }
                    case 2 -> {
                        f20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("f20");
                    }
                    case 3 -> {
                        f20.setBackground(Color.pink);
                        thisUser.LocationPink.add("f20");
                    }
                    case 4 -> {
                        f20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("f20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_f20ActionPerformed

    private void g20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g20ActionPerformed
         if (g20.getBackground() == Color.GREEN || g20.getBackground() == Color.BLUE || 
    g20.getBackground() == Color.YELLOW || g20.getBackground() == Color.PINK || g20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"g19".equals(previousButtonClicked) && !"g20".equals(previousButtonClicked)
           && !"f20".equals(previousButtonClicked) && !"h20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "g20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        g20.setBackground(Color.green);
                        thisUser.LocationGreen.add("g20");
                    }
                    case 1 -> {
                        g20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("g20");
                    }
                    case 2 -> {
                        g20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("g20");
                    }
                    case 3 -> {
                        g20.setBackground(Color.pink);
                        thisUser.LocationPink.add("g20");
                    }
                    case 4 -> {
                        g20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("g20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_g20ActionPerformed

    private void h20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h20ActionPerformed
         if (h20.getBackground() == Color.GREEN || h20.getBackground() == Color.BLUE || 
    h20.getBackground() == Color.YELLOW || h20.getBackground() == Color.PINK || h20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"h19".equals(previousButtonClicked) && !"h20".equals(previousButtonClicked)
           && !"g20".equals(previousButtonClicked) && !"i20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "h20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        h20.setBackground(Color.green);
                        thisUser.LocationGreen.add("h20");
                    }
                    case 1 -> {
                        h20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("h20");
                    }
                    case 2 -> {
                        h20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("h20");
                    }
                    case 3 -> {
                        h20.setBackground(Color.pink);
                        thisUser.LocationPink.add("h20");
                    }
                    case 4 -> {
                        h20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("h20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_h20ActionPerformed

    private void i20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i20ActionPerformed
         if (i20.getBackground() == Color.GREEN || i20.getBackground() == Color.BLUE || 
    i20.getBackground() == Color.YELLOW || i20.getBackground() == Color.PINK || i20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"i19".equals(previousButtonClicked) && !"i20".equals(previousButtonClicked)
           && !"h20".equals(previousButtonClicked) && !"j20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "i20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        i20.setBackground(Color.green);
                        thisUser.LocationGreen.add("i20");
                    }
                    case 1 -> {
                        i20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("i20");
                    }
                    case 2 -> {
                        i20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("i20");
                    }
                    case 3 -> {
                        i20.setBackground(Color.pink);
                        thisUser.LocationPink.add("i20");
                    }
                    case 4 -> {
                        i20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("i20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_i20ActionPerformed

    private void j20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j20ActionPerformed
         if (j20.getBackground() == Color.GREEN || j20.getBackground() == Color.BLUE || 
    j20.getBackground() == Color.YELLOW || j20.getBackground() == Color.PINK || j20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"j19".equals(previousButtonClicked) && !"j20".equals(previousButtonClicked)
           && !"i20".equals(previousButtonClicked) && !"k20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "j20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        j20.setBackground(Color.green);
                        thisUser.LocationGreen.add("j20");
                    }
                    case 1 -> {
                        j20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("j20");
                    }
                    case 2 -> {
                        j20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("j20");
                    }
                    case 3 -> {
                        j20.setBackground(Color.pink);
                        thisUser.LocationPink.add("j20");
                    }
                    case 4 -> {
                        j20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("j20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_j20ActionPerformed

    private void k20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k20ActionPerformed
         if (k20.getBackground() == Color.GREEN || k20.getBackground() == Color.BLUE || 
    k20.getBackground() == Color.YELLOW || k20.getBackground() == Color.PINK || k20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"k19".equals(previousButtonClicked) && !"k20".equals(previousButtonClicked)
           && !"j20".equals(previousButtonClicked) && !"l20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "k20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        k20.setBackground(Color.green);
                        thisUser.LocationGreen.add("k20");
                    }
                    case 1 -> {
                        k20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("k20");
                    }
                    case 2 -> {
                        k20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("k20");
                    }
                    case 3 -> {
                        k20.setBackground(Color.pink);
                        thisUser.LocationPink.add("k20");
                    }
                    case 4 -> {
                        k20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("k20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_k20ActionPerformed

    private void l20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l20ActionPerformed
        if (l20.getBackground() == Color.GREEN || l20.getBackground() == Color.BLUE || 
    l20.getBackground() == Color.YELLOW || l20.getBackground() == Color.PINK || l20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"l19".equals(previousButtonClicked) && !"l20".equals(previousButtonClicked)
           && !"k20".equals(previousButtonClicked) && !"m20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "l20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        l20.setBackground(Color.green);
                        thisUser.LocationGreen.add("l20");
                    }
                    case 1 -> {
                        l20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("l20");
                    }
                    case 2 -> {
                        l20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("l20");
                    }
                    case 3 -> {
                        l20.setBackground(Color.pink);
                        thisUser.LocationPink.add("l20");
                    }
                    case 4 -> {
                        l20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("l20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_l20ActionPerformed

    private void m20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m20ActionPerformed
         if (m20.getBackground() == Color.GREEN || m20.getBackground() == Color.BLUE || 
    m20.getBackground() == Color.YELLOW || m20.getBackground() == Color.PINK || m20.getBackground() == Color.ORANGE) {
//
            JOptionPane.showMessageDialog(null,
                    "You already placed an item here",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {

       if (!"Begin".equals(previousButtonClicked) && !"m19".equals(previousButtonClicked) && !"m20".equals(previousButtonClicked)
           && !"l20".equals(previousButtonClicked) && newShip == false && whichShip != 5) {
//
            JOptionPane.showMessageDialog(null,
                   "Your Ship Must Connect To The Previously Placed Square",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
        } else {
    //        
      previousButtonClicked = "m20";//

             if (whichShip == 5) { //if used up ships. Do not allow placing
                JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
            } else {

                holesPlaced++;

                 newShip = false;

//
              switch (whichShip) { //
                    case 0 -> {
                        m20.setBackground(Color.green);
                        thisUser.LocationGreen.add("m20");
                    }
                    case 1 -> {
                        m20.setBackground(Color.blue);
                        thisUser.LocationBlue.add("m20");
                    }
                    case 2 -> {
                        m20.setBackground(Color.yellow);
                        thisUser.LocationYellow.add("m20");
                    }
                    case 3 -> {
                        m20.setBackground(Color.pink);
                        thisUser.LocationPink.add("m20");
                    }
                    case 4 -> {
                        m20.setBackground(Color.orange);
                        thisUser.LocationOrange.add("m20");
                    }
                    default -> {
                    }
                }
                if (whichShip == 4 && holesPlaced == 2) {
                         
                     JOptionPane.showMessageDialog(null,
                    "You have placed all your ships, click \"Start Game\" to begin",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                     whichShip++;
                     }
                     
                    else if (anArray[whichShip] == holesPlaced) { //if the player has placed a full ship, go to next ship
                    whichShip++;
                    holesPlaced = 0;
                    newShip = true;
                         JOptionPane.showMessageDialog(null,
                    "Place Your Next Ship",
                    "TITLE",
                    JOptionPane.WARNING_MESSAGE);
                }
            }
        }}
        



    }//GEN-LAST:event_m20ActionPerformed

    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SWINGputPiecesOnBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SWINGputPiecesOnBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SWINGputPiecesOnBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SWINGputPiecesOnBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new SWINGputPiecesOnBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a1;
    private javax.swing.JButton a10;
    private javax.swing.JButton a11;
    private javax.swing.JButton a12;
    private javax.swing.JButton a13;
    private javax.swing.JButton a14;
    private javax.swing.JButton a15;
    private javax.swing.JButton a16;
    private javax.swing.JButton a17;
    private javax.swing.JButton a18;
    private javax.swing.JButton a19;
    private javax.swing.JButton a2;
    private javax.swing.JButton a20;
    private javax.swing.JButton a3;
    private javax.swing.JButton a4;
    private javax.swing.JButton a5;
    private javax.swing.JButton a6;
    private javax.swing.JButton a7;
    private javax.swing.JButton a8;
    private javax.swing.JButton a9;
    private javax.swing.JButton b1;
    private javax.swing.JButton b10;
    private javax.swing.JButton b11;
    private javax.swing.JButton b12;
    private javax.swing.JButton b13;
    private javax.swing.JButton b14;
    private javax.swing.JButton b15;
    private javax.swing.JButton b16;
    private javax.swing.JButton b17;
    private javax.swing.JButton b18;
    private javax.swing.JButton b19;
    private javax.swing.JButton b2;
    private javax.swing.JButton b20;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton c1;
    private javax.swing.JButton c10;
    private javax.swing.JButton c11;
    private javax.swing.JButton c12;
    private javax.swing.JButton c13;
    private javax.swing.JButton c14;
    private javax.swing.JButton c15;
    private javax.swing.JButton c16;
    private javax.swing.JButton c17;
    private javax.swing.JButton c18;
    private javax.swing.JButton c19;
    private javax.swing.JButton c2;
    private javax.swing.JButton c20;
    private javax.swing.JButton c3;
    private javax.swing.JButton c4;
    private javax.swing.JButton c5;
    private javax.swing.JButton c6;
    private javax.swing.JButton c7;
    private javax.swing.JButton c8;
    private javax.swing.JButton c9;
    private javax.swing.JButton d1;
    private javax.swing.JButton d10;
    private javax.swing.JButton d11;
    private javax.swing.JButton d12;
    private javax.swing.JButton d13;
    private javax.swing.JButton d14;
    private javax.swing.JButton d15;
    private javax.swing.JButton d16;
    private javax.swing.JButton d17;
    private javax.swing.JButton d18;
    private javax.swing.JButton d19;
    private javax.swing.JButton d2;
    private javax.swing.JButton d20;
    private javax.swing.JButton d3;
    private javax.swing.JButton d4;
    private javax.swing.JButton d5;
    private javax.swing.JButton d6;
    private javax.swing.JButton d7;
    private javax.swing.JButton d8;
    private javax.swing.JButton d9;
    private javax.swing.JButton e1;
    private javax.swing.JButton e10;
    private javax.swing.JButton e11;
    private javax.swing.JButton e12;
    private javax.swing.JButton e13;
    private javax.swing.JButton e14;
    private javax.swing.JButton e15;
    private javax.swing.JButton e16;
    private javax.swing.JButton e17;
    private javax.swing.JButton e18;
    private javax.swing.JButton e19;
    private javax.swing.JButton e2;
    private javax.swing.JButton e20;
    private javax.swing.JButton e3;
    private javax.swing.JButton e4;
    private javax.swing.JButton e5;
    private javax.swing.JButton e6;
    private javax.swing.JButton e7;
    private javax.swing.JButton e8;
    private javax.swing.JButton e9;
    private javax.swing.JButton exitGame;
    private javax.swing.JButton f1;
    private javax.swing.JButton f10;
    private javax.swing.JButton f11;
    private javax.swing.JButton f12;
    private javax.swing.JButton f13;
    private javax.swing.JButton f14;
    private javax.swing.JButton f15;
    private javax.swing.JButton f16;
    private javax.swing.JButton f17;
    private javax.swing.JButton f18;
    private javax.swing.JButton f19;
    private javax.swing.JButton f2;
    private javax.swing.JButton f20;
    private javax.swing.JButton f3;
    private javax.swing.JButton f4;
    private javax.swing.JButton f5;
    private javax.swing.JButton f6;
    private javax.swing.JButton f7;
    private javax.swing.JButton f8;
    private javax.swing.JButton f9;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton g1;
    private javax.swing.JButton g10;
    private javax.swing.JButton g11;
    private javax.swing.JButton g12;
    private javax.swing.JButton g13;
    private javax.swing.JButton g14;
    private javax.swing.JButton g15;
    private javax.swing.JButton g16;
    private javax.swing.JButton g17;
    private javax.swing.JButton g18;
    private javax.swing.JButton g19;
    private javax.swing.JButton g2;
    private javax.swing.JButton g20;
    private javax.swing.JButton g3;
    private javax.swing.JButton g4;
    private javax.swing.JButton g5;
    private javax.swing.JButton g6;
    private javax.swing.JButton g7;
    private javax.swing.JButton g8;
    private javax.swing.JButton g9;
    private javax.swing.JButton h1;
    private javax.swing.JButton h10;
    private javax.swing.JButton h11;
    private javax.swing.JButton h12;
    private javax.swing.JButton h13;
    private javax.swing.JButton h14;
    private javax.swing.JButton h15;
    private javax.swing.JButton h16;
    private javax.swing.JButton h17;
    private javax.swing.JButton h18;
    private javax.swing.JButton h19;
    private javax.swing.JButton h2;
    private javax.swing.JButton h20;
    private javax.swing.JButton h3;
    private javax.swing.JButton h4;
    private javax.swing.JButton h5;
    private javax.swing.JButton h6;
    private javax.swing.JButton h7;
    private javax.swing.JButton h8;
    private javax.swing.JButton h9;
    private javax.swing.JButton i1;
    private javax.swing.JButton i10;
    private javax.swing.JButton i11;
    private javax.swing.JButton i12;
    private javax.swing.JButton i13;
    private javax.swing.JButton i14;
    private javax.swing.JButton i15;
    private javax.swing.JButton i16;
    private javax.swing.JButton i17;
    private javax.swing.JButton i18;
    private javax.swing.JButton i19;
    private javax.swing.JButton i2;
    private javax.swing.JButton i20;
    private javax.swing.JButton i3;
    private javax.swing.JButton i4;
    private javax.swing.JButton i5;
    private javax.swing.JButton i6;
    private javax.swing.JButton i7;
    private javax.swing.JButton i8;
    private javax.swing.JButton i9;
    private javax.swing.JButton j1;
    private javax.swing.JButton j10;
    private javax.swing.JButton j11;
    private javax.swing.JButton j12;
    private javax.swing.JButton j13;
    private javax.swing.JButton j14;
    private javax.swing.JButton j15;
    private javax.swing.JButton j16;
    private javax.swing.JButton j17;
    private javax.swing.JButton j18;
    private javax.swing.JButton j19;
    private javax.swing.JButton j2;
    private javax.swing.JButton j20;
    private javax.swing.JButton j3;
    private javax.swing.JButton j4;
    private javax.swing.JButton j5;
    private javax.swing.JButton j6;
    private javax.swing.JButton j7;
    private javax.swing.JButton j8;
    private javax.swing.JButton j9;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton k1;
    private javax.swing.JButton k10;
    private javax.swing.JButton k11;
    private javax.swing.JButton k12;
    private javax.swing.JButton k13;
    private javax.swing.JButton k14;
    private javax.swing.JButton k15;
    private javax.swing.JButton k16;
    private javax.swing.JButton k17;
    private javax.swing.JButton k18;
    private javax.swing.JButton k19;
    private javax.swing.JButton k2;
    private javax.swing.JButton k20;
    private javax.swing.JButton k3;
    private javax.swing.JButton k4;
    private javax.swing.JButton k5;
    private javax.swing.JButton k6;
    private javax.swing.JButton k7;
    private javax.swing.JButton k8;
    private javax.swing.JButton k9;
    private javax.swing.JButton l1;
    private javax.swing.JButton l10;
    private javax.swing.JButton l11;
    private javax.swing.JButton l12;
    private javax.swing.JButton l13;
    private javax.swing.JButton l14;
    private javax.swing.JButton l15;
    private javax.swing.JButton l16;
    private javax.swing.JButton l17;
    private javax.swing.JButton l18;
    private javax.swing.JButton l19;
    private javax.swing.JButton l2;
    private javax.swing.JButton l20;
    private javax.swing.JButton l3;
    private javax.swing.JButton l4;
    private javax.swing.JButton l5;
    private javax.swing.JButton l6;
    private javax.swing.JButton l7;
    private javax.swing.JButton l8;
    private javax.swing.JButton l9;
    private javax.swing.JButton m1;
    private javax.swing.JButton m10;
    private javax.swing.JButton m11;
    private javax.swing.JButton m12;
    private javax.swing.JButton m13;
    private javax.swing.JButton m14;
    private javax.swing.JButton m15;
    private javax.swing.JButton m16;
    private javax.swing.JButton m17;
    private javax.swing.JButton m18;
    private javax.swing.JButton m19;
    private javax.swing.JButton m2;
    private javax.swing.JButton m20;
    private javax.swing.JButton m3;
    private javax.swing.JButton m4;
    private javax.swing.JButton m5;
    private javax.swing.JButton m6;
    private javax.swing.JButton m7;
    private javax.swing.JButton m8;
    private javax.swing.JButton m9;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    private javax.swing.JButton startGame;
    // End of variables declaration//GEN-END:variables
}
